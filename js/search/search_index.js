var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.244,1,1.543]],["body/injectables/ApiService.html",[0,1.519,1,1.885,2,1.935,3,0.157,4,0.121,5,0.085,6,2.992,7,0.316,8,0.907,9,1.181,10,6.307,11,4.931,12,4.931,13,5.497,14,5.497,15,4.297,16,4.931,17,4.297,18,4.931,19,4.931,20,0.701,21,3.433,22,6.307,23,1.22,24,3.433,25,1.397,26,0.014,27,1.166,28,0.707,29,1.21,30,3.88,31,3.433,32,1.205,33,1.629,34,4.931,35,5.163,36,3.433,37,2.492,38,4.931,39,7.669,40,3.433,41,3.433,42,3.433,43,4.931,44,5.55,45,3.433,46,4.931,47,3.433,48,4.931,49,3.433,50,4.931,51,3.433,52,4.931,53,3.221,54,3.433,55,2.043,56,0.253,57,2.167,58,0.16,59,2.701,60,3.433,61,2.992,62,2.701,63,2.311,64,2.701,65,1.134,66,1.095,67,1.134,68,0.677,69,2.311,70,3.433,71,2.167,72,3.433,73,2.701,74,2.167,75,1.753,76,1.674,77,0.134,78,0.039,79,0.701,80,1.25,81,3.433,82,4.931,83,7.464,84,4.931,85,3.433,86,3.433,87,1.324,88,4.931,89,2.701,90,3.433,91,3.433,92,1.674,93,3.433,94,3.556,95,1.674,96,3.433,97,1.602,98,3.433,99,1.536,100,3.433,101,3.433,102,3.433,103,3.433,104,0.005,105,0.008,106,0.005]],["title/components/AppComponent.html",[107,0.642,108,1.382]],["body/components/AppComponent.html",[3,0.072,4,0.08,5,0.056,7,0.512,8,0.663,9,0.724,20,0.463,23,1.124,25,0.686,26,0.013,27,0.988,28,0.622,29,0.595,32,0.713,33,1.481,35,3.017,56,0.21,58,0.105,76,1.757,77,0.089,78,0.026,79,0.463,80,0.374,87,0.967,92,1.106,95,1.757,97,1.059,99,2.284,104,0.004,105,0.006,106,0.004,107,0.713,108,1.747,109,1.377,110,0.9,111,0.9,112,0.9,113,0.9,114,1.977,115,0.935,116,2.401,117,0.749,118,2.09,119,2.145,120,1.233,121,4.481,122,1.233,123,3.602,124,0.762,125,3.905,126,4.481,127,4.481,128,6.64,129,4.481,130,1.849,131,2.734,132,3.602,133,3.693,134,1.279,135,4.481,136,1.785,137,3.528,138,3.602,139,2.268,140,0.939,141,3.602,142,2.268,143,2.268,144,2.268,145,3.017,146,3.602,147,3.176,148,1.149,149,2.268,150,2.268,151,4.481,152,3.602,153,1.747,154,2.268,155,4.481,156,3.602,157,2.268,158,0.652,159,0.532,160,2.268,161,2.268,162,2.268,163,2.268,164,1.215,165,0.724,166,1.19,167,1.977,168,2.268,169,0.777,170,2.268,171,2.268,172,2.268,173,2.607,174,2.268,175,2.268,176,2.268,177,2.268,178,1.977,179,1.785,180,2.268,181,2.268,182,2.866,183,3.602,184,3.602,185,4.481,186,3.602,187,3.14,188,2.829,189,3.602,190,6.64,191,4.419,192,2.78,193,3.602,194,2.357,195,2.538,196,1.015,197,2.769,198,4.289,199,4.757,200,2.843,201,2.425,202,4.481,203,6.053,204,2.607,205,4.016,206,3.905,207,3.646,208,3.038,209,2.829,210,3.222,211,1.785,212,1.785,213,2.13,214,4.069,215,1.785,216,3.14,217,2.268,218,2.607,219,2.526,220,2.607,221,3.905,222,2.268,223,2.268,224,1.785,225,1.977,226,1.977,227,3.602,228,1.977,229,4.448,230,2.268,231,2.274,232,3.514,233,2.268,234,2.268,235,4.481,236,4.889,237,3.017,238,3.017,239,3.017,240,3.602,241,4.481,242,3.526,243,2.829,244,2.268,245,1.977,246,2.268,247,2.268,248,2.268,249,3.602,250,3.602,251,3.602,252,3.602,253,6.446,254,3.602,255,4.481,256,2.668,257,4.852,258,3.602,259,2.268,260,2.425,261,3.526,262,2.268,263,2.274,264,3.14,265,2.268,266,0.935,267,3.602,268,2.268,269,1.279,270,1.977,271,2.268,272,2.268,273,2.274,274,2.268,275,2.268,276,2.268,277,1.785,278,4.029,279,2.288,280,3.602,281,3.14,282,2.268,283,3.602,284,3.602,285,2.268,286,2.268,287,2.268,288,2.268,289,2.268,290,1.642,291,2.268,292,1.977,293,1.785,294,1.977,295,1.432,296,1.527,297,2.835,298,2.268,299,1.785,300,0.569,301,1.377,302,1.43,303,0.569,304,2.026,305,0.9,306,0.9,307,0.749,308,0.777,309,0.9,310,0.777,311,1.377,312,1.43,313,0.777,314,0.805,315,0.9,316,0.749,317,0.9,318,0.777,319,0.417,320,0.835,321,0.9,322,0.749,323,0.9,324,0.724,325,0.805,326,0.9,327,0.777,328,0.749,329,0.749,330,0.9,331,0.749,332,1.43,333,0.777,334,0.9,335,0.749,336,0.675,337,1.43,338,0.749,339,0.652,340,0.749,341,0.724,342,0.805,343,0.777,344,0.724,345,0.749,346,0.9,347,0.9,348,0.724,349,0.9,350,0.724,351,0.9,352,0.749,353,0.867,354,0.9]],["title/injectables/AppErrorHandler.html",[0,1.244,355,2.922]],["body/injectables/AppErrorHandler.html",[0,1.672,2,2.219,3,0.125,4,0.139,5,0.097,7,0.362,8,0.998,9,1.117,20,0.804,23,1.066,25,1.184,26,0.014,27,0.989,28,0.678,29,1.026,32,1.156,56,0.22,57,2.484,58,0.183,77,0.154,78,0.044,79,0.804,80,1.026,104,0.006,105,0.009,106,0.006,115,1.021,130,2.241,140,1.232,153,2.407,159,1.272,169,1.859,355,4.849,356,5.087,357,2.755,358,3.43,359,2.241,360,5.429,361,5.429,362,5.839,363,4.731,364,5.429,365,6.7,366,3.936,367,7.267,368,3.936,369,5.429,370,5.109,371,3.936,372,6.7,373,5.429,374,5.719,375,3.589,376,3.936,377,5.429,378,5.429,379,4.731,380,6.215,381,4.184,382,4.891,383,3.929,384,3.936,385,3.655,386,5.429,387,5.429,388,5.429,389,5.429,390,5.429,391,5.429,392,6.215,393,4.731,394,2.65,395,3.43,396,2.848,397,3.936,398,1.021,399,3.936,400,2.219,401,3.936,402,5.429,403,2.343,404,3.936,405,2.848,406,3.936,407,2.65,408,5.429,409,3.097,410,2.109,411,3.097,412,3.097,413,3.936,414,3.936,415,2.241,416,3.43,417,5.429,418,3.097,419,3.936,420,3.936,421,6.7,422,2.848,423,3.936]],["title/modules/AppModule.html",[424,0.946,425,2.922]],["body/modules/AppModule.html",[3,0.125,4,0.139,5,0.097,26,0.014,56,0.291,57,2.477,58,0.182,69,2.642,77,0.211,78,0.044,104,0.006,105,0.009,106,0.006,108,2.717,119,1.455,153,1.344,165,1.252,166,2.399,167,3.42,300,0.985,319,0.722,355,3.921,357,1.344,375,3.708,385,2.642,393,4.722,395,3.42,396,2.84,398,1.406,424,0.92,425,6.035,426,1.297,427,1.62,428,2.777,429,2.777,430,2.777,431,1.393,432,3.42,433,3.42,434,3.42,435,3.42,436,3.42,437,4.583,438,4.583,439,4.583,440,4.583,441,2.898,442,3.708,443,2.997,444,2.424,445,1.756,446,1.62,447,3.088,448,1.995,449,4.722,450,5.418,451,1.995,452,2.529,453,4.264,454,4.722,455,3.924,456,4.722,457,4.264,458,4.722,459,3.924,460,3.924,461,3.42,462,3.42,463,3.924,464,3.924,465,2.477,466,3.924,467,5.418,468,2.642,469,3.924,470,3.924,471,3.924,472,3.088,473,2.642,474,3.088,475,1.914,476,4.264,477,3.42,478,2.84,479,3.42,480,4.264,481,3.42,482,3.42,483,3.088,484,3.42,485,3.42,486,2.84,487,3.924,488,5.418,489,3.924,490,3.924]],["title/injectables/AppNotificationService.html",[0,1.244,375,2.062]],["body/injectables/AppNotificationService.html",[0,1.587,2,2.058,3,0.19,4,0.129,5,0.09,7,0.336,8,0.947,9,1.089,20,0.746,23,1.16,25,1.137,26,0.014,27,0.949,28,0.719,29,0.985,32,1.129,33,1.702,37,2.365,56,0.229,58,0.17,68,0.72,75,1.864,76,1.78,77,0.253,78,0.041,79,0.746,80,0.85,104,0.006,105,0.008,106,0.006,124,1.089,130,2.126,134,1.829,140,1.258,158,1.481,159,1.207,165,1.164,169,1.764,213,1.206,256,1.568,263,2.304,319,0.671,357,1.764,359,1.506,375,2.63,381,5.356,394,3.468,403,3.066,405,3.728,415,1.506,491,5.015,492,2.457,493,1.4,494,4.697,495,4.697,496,5.103,497,5.151,498,5.151,499,4.697,500,3.65,501,4.778,502,5.151,503,3.65,504,3.468,505,3.728,506,4.053,507,4.053,508,4.91,509,3.65,510,4.053,511,4.697,512,4.053,513,3.65,514,2.457,515,3.964,516,1.93,517,3.65,518,4.053,519,4.053,520,3.65,521,3.65,522,4.053,523,2.872,524,1.78,525,2.058,526,1.164,527,1.864,528,3.728,529,1.633,530,1.587,531,3.468,532,4.053,533,2.872,534,2.642,535,2.872,536,2.872,537,2.872,538,1.78,539,1.956,540,2.872,541,2.872,542,2.872,543,1.086,544,2.872,545,2.872,546,2.058,547,2.872,548,2.872,549,2.872,550,2.872,551,2.872]],["title/classes/AppPreloadingStrategy.html",[78,0.045,552,2.922]],["body/classes/AppPreloadingStrategy.html",[3,0.182,4,0.202,5,0.141,7,0.526,8,1.272,23,0.909,25,1.089,26,0.013,27,0.909,28,0.552,29,0.943,32,0.909,37,2.29,56,0.245,68,1.128,77,0.223,78,0.064,80,0.943,87,2.124,104,0.009,105,0.011,106,0.009,115,1.794,356,5.004,552,5.004,553,2.788,554,5.441,555,4.136,556,6.479,557,6.914,558,6.914,559,5.2,560,5.38,561,5.715,562,1.643,563,4.655,564,5.715]],["title/modules/AppRoutingModule.html",[424,0.946,437,2.548]],["body/modules/AppRoutingModule.html",[3,0.166,4,0.185,5,0.129,26,0.014,56,0.253,58,0.243,104,0.008,105,0.01,106,0.008,119,1.402,148,1.665,336,1.553,339,1.501,343,1.787,356,3.777,357,1.787,398,1.355,426,1.725,431,1.853,437,3.295,448,1.922,451,2.407,552,4.732,554,4.107,556,4.549,562,1.501,565,3.295,566,3.892,567,3.189,568,5.219,569,6.538,570,7.706,571,5.219,572,2.943,573,5.219,574,5.219,575,4.275,576,5.219,577,5.219,578,5.219,579,5.219,580,5.219,581,5.219,582,5.219,583,5.219,584,2.797,585,5.219,586,4.549,587,5.219,588,2.797,589,5.219,590,5.219]],["title/interfaces/Bounds.html",[55,2.403,530,1.244]],["body/interfaces/Bounds.html",[3,0.174,4,0.194,5,0.136,7,0.504,26,0.013,28,0.754,55,4.01,56,0.194,63,4.536,65,1.81,66,1.747,67,1.81,71,3.458,77,0.285,92,3.713,95,3.713,97,3.553,99,3.406,104,0.009,105,0.011,106,0.009,124,1.425,530,2.075,591,2.797,592,3.964,593,2.764,594,5.872,595,2.481,596,4.253,597,4.536,598,3.964,599,4.774,600,4.253]],["title/components/CommonErrorComponent.html",[107,0.642,307,1.334]],["body/components/CommonErrorComponent.html",[3,0.134,4,0.149,5,0.104,20,1.315,23,0.67,26,0.013,27,1.024,56,0.149,58,0.196,77,0.164,78,0.047,87,1.527,104,0.007,105,0.009,106,0.007,107,1.024,108,1.442,109,2.173,110,1.672,111,1.672,112,1.672,113,1.672,117,1.391,118,2.244,119,2.217,120,1.947,122,1.947,166,1.391,182,2.656,194,1.495,195,1.609,196,1.884,197,2.442,198,3.048,200,2.15,201,4.334,207,3.449,208,2.507,209,3.589,210,2.658,220,3.048,232,2.658,237,2.835,238,2.835,239,2.835,260,2.835,273,2.658,279,2.15,295,2.658,300,1.056,301,2.173,302,2.257,303,1.056,304,2.736,305,1.672,306,1.672,307,2.277,308,2.64,309,1.672,310,1.442,311,2.173,312,2.257,313,1.442,314,1.495,315,1.672,316,1.391,317,1.672,318,1.442,319,0.774,320,2.538,321,1.672,322,1.391,323,1.672,324,1.343,325,1.495,326,1.672,327,1.442,328,1.391,329,1.391,330,1.672,331,1.391,332,2.257,333,1.442,334,1.672,335,1.391,336,1.253,337,2.257,338,1.391,339,1.211,340,1.391,341,1.343,342,1.495,343,1.442,344,1.343,345,1.391,346,1.672,347,1.672,348,1.343,349,1.672,350,1.343,351,1.672,352,1.391,353,1.609,354,1.672,357,2.539,407,4.334,529,1.884,601,4.955,602,3.67,603,6.437,604,5.685,605,4.211,606,2.764,607,3.67,608,3.314,609,3.314,610,5.685,611,5.685,612,3.67,613,3.67,614,3.314,615,2.256,616,3.67,617,3.67,618,3.67,619,3.314,620,3.314,621,4.474,622,2.658,623,2.658,624,3.67,625,4.211]],["title/directives/CountdownTimerDirective.html",[303,1.013,345,1.334]],["body/directives/CountdownTimerDirective.html",[3,0.127,4,0.141,5,0.099,7,0.367,8,1.008,9,1.096,23,1.229,25,0.761,26,0.014,27,0.635,28,0.682,29,0.659,32,0.996,33,1.812,56,0.222,58,0.186,68,0.788,77,0.156,78,0.045,80,0.659,104,0.006,105,0.009,106,0.006,115,1.423,116,3.355,117,1.319,118,1.472,124,1.16,131,3.612,134,1.946,140,1.299,158,1.8,159,1.468,266,1.036,303,1.691,319,0.734,344,1.274,345,2.227,359,1.648,398,1.036,446,2.263,493,1.525,516,1.632,526,1.274,593,2.47,597,4.538,626,6.152,627,6.152,628,3.479,629,2.306,630,5.483,631,6.262,632,4.532,633,2.482,634,3.264,635,7.065,636,7.476,637,5.483,638,6.741,639,3.992,640,2.938,641,3.461,642,5.483,643,3.727,644,3.992,645,3.992,646,3.992,647,3.992,648,3.53,649,5.483,650,3.992,651,2.306,652,3.992,653,3.992,654,3.479,655,3.53,656,2.889,657,2.688,658,1.367,659,3.142,660,1.585,661,3.992,662,3.992,663,3.992,664,2.889,665,5.483,666,3.968,667,3.142,668,3.479,669,3.992,670,3.992,671,4.778,672,3.992,673,3.142,674,3.479,675,2.889]],["title/modules/CountdownTimerModule.html",[424,0.946,676,2.718]],["body/modules/CountdownTimerModule.html",[3,0.171,4,0.191,5,0.133,26,0.013,56,0.268,58,0.251,77,0.21,78,0.061,104,0.009,105,0.011,106,0.009,165,1.72,300,1.353,345,2.748,359,2.225,424,1.698,426,1.782,427,2.225,428,3.242,429,2.413,430,2.985,431,2.572,444,2.985,445,2.413,446,2.225,448,1.986,451,2.457,452,3.382,626,4.243,627,4.243,676,5.409,677,4.7,678,4.7,679,4.7,680,5.392,681,6.672,682,6.672,683,3.534,684,2.225,685,5.392,686,5.392]],["title/components/DepartureListComponent.html",[107,0.642,310,1.382]],["body/components/DepartureListComponent.html",[3,0.113,4,0.126,5,0.088,7,0.327,8,0.93,9,0.961,23,1.077,25,0.678,26,0.013,27,1.019,28,0.568,29,0.587,32,1.119,56,0.179,58,0.165,65,1.175,66,1.134,67,1.175,77,0.139,78,0.04,80,0.835,87,1.358,89,6.274,104,0.006,105,0.008,106,0.006,107,1.077,108,1.218,109,1.933,110,1.412,111,1.412,112,1.412,113,1.412,117,1.175,118,2.209,119,2.189,120,1.732,122,1.732,124,1.07,134,1.795,140,0.654,153,1.732,158,1.023,159,0.834,166,1.175,169,1.732,182,2.087,194,1.262,195,1.359,196,1.591,219,2.005,231,3.192,266,0.923,300,0.892,301,1.933,302,2.008,303,0.892,304,2.544,305,1.412,306,1.412,307,1.175,308,1.218,309,1.412,310,2.195,311,3.047,312,2.008,313,1.218,314,2.57,315,1.412,316,1.175,317,1.412,318,1.218,319,0.654,320,1.31,321,1.412,322,1.175,323,1.412,324,1.134,325,1.262,326,1.412,327,1.218,328,1.175,329,1.175,330,1.412,331,1.175,332,2.008,333,1.218,334,1.412,335,1.175,336,1.058,337,2.008,338,1.175,339,1.023,340,1.175,341,1.134,342,1.262,343,1.218,344,1.134,345,1.175,346,1.412,347,1.412,348,1.134,349,1.412,350,1.134,351,1.412,352,1.175,353,1.359,354,1.412,359,1.468,486,4.259,493,1.161,543,1.058,634,3.01,655,2.005,660,2.544,687,5.537,688,2.799,689,5.129,690,4.407,691,5.129,692,6.409,693,4.407,694,3.556,695,5.044,696,6.409,697,3.405,698,6.132,699,3.556,700,3.556,701,3.556,702,3.556,703,3.556,704,3.556,705,5.586,706,3.099,707,5.057,708,3.979,709,3.979,710,3.556,711,5.057,712,4.407,713,2.799,714,2.799,715,3.556,716,3.099,717,3.556]],["title/components/DepartureListItemComponent.html",[107,0.642,313,1.382]],["body/components/DepartureListItemComponent.html",[3,0.081,4,0.09,5,0.063,7,0.234,8,0.725,9,1.032,23,1.157,25,0.92,26,0.014,27,0.99,28,0.568,29,0.797,32,1.172,33,1.595,56,0.192,58,0.118,65,1.303,66,1.258,67,0.841,77,0.099,78,0.029,80,1.161,87,1.059,89,3.799,104,0.004,105,0.006,106,0.004,107,0.768,108,0.872,109,1.507,110,1.011,111,1.011,112,1.011,113,1.011,117,0.841,118,2.124,119,2.069,120,1.35,122,1.35,124,0.834,134,1.4,140,0.468,148,2.139,158,1.563,159,1.131,166,0.841,169,1.862,182,2.244,188,1.607,194,0.904,195,0.973,196,1.139,219,1.435,266,1.253,279,1.3,300,0.639,301,1.507,302,1.566,303,0.639,304,2.158,305,1.011,306,1.011,307,0.841,308,0.872,309,1.011,310,0.872,311,3.035,312,1.566,313,1.862,314,2.808,315,1.011,316,0.841,317,1.011,318,0.872,319,0.468,320,0.937,321,1.011,322,0.841,323,1.011,324,0.812,325,0.904,326,1.011,327,0.872,328,0.841,329,0.841,330,1.011,331,0.841,332,1.566,333,0.872,334,1.011,335,0.841,336,0.758,337,1.566,338,0.841,339,0.732,340,0.841,341,0.812,342,0.904,343,0.872,344,0.812,345,0.841,346,1.011,347,1.011,348,0.812,349,1.011,350,0.812,351,1.011,352,0.841,353,0.973,354,1.011,359,1.628,398,1.253,415,1.628,486,3.494,493,1.359,543,1.851,593,2.324,600,1.607,622,1.607,634,2.348,640,3.477,643,2.874,655,1.435,660,1.011,664,1.842,687,5.798,698,6.338,713,2.003,714,2.003,718,2.219,719,3.236,720,4.827,721,3.944,722,4.827,723,4.827,724,4.827,725,3.944,726,3.103,727,5.882,728,4.257,729,5.636,730,3.944,731,3.944,732,2.546,733,3.944,734,2.002,735,4.827,736,3.944,737,2.546,738,2.546,739,3.944,740,3.944,741,3.944,742,3.944,743,3.944,744,2.546,745,3.437,746,3.944,747,2.854,748,2.546,749,3.944,750,2.546,751,2.546,752,3.103,753,2.546,754,2.546,755,2.546,756,2.546,757,2.546,758,2.546,759,2.546,760,3.944,761,5.437,762,2.546,763,2.546,764,2.546,765,3.437,766,2.546,767,2.546,768,3.944,769,3.944,770,2.546,771,3.944,772,2.546,773,2.003,774,3.944,775,4.278,776,2.546,777,3.944,778,2.546,779,2.546,780,2.546,781,2.546,782,2.546,783,2.546,784,1.842,785,3.799,786,2.003,787,3.494,788,2.546,789,3.944,790,2.546,791,3.944,792,2.546,793,3.944,794,2.546,795,2.546,796,5.437,797,2.546,798,2.219,799,2.219,800,2.546,801,3.944,802,3.944,803,6.222,804,2.546,805,1.714,806,2.003,807,2.546,808,2.546,809,2.546,810,2.546,811,2.546,812,2.546,813,2.546]],["title/directives/DrawableDirective.html",[166,1.334,303,1.013]],["body/directives/DrawableDirective.html",[3,0.126,4,0.14,5,0.098,7,0.364,8,1.002,20,0.809,23,1.281,25,1.038,26,0.014,27,0.867,28,0.68,29,0.9,32,1.068,56,0.14,58,0.184,77,0.154,78,0.045,79,0.809,80,0.9,104,0.006,105,0.009,106,0.006,115,1.415,116,3.34,117,1.308,118,1.464,124,1.153,125,5.433,131,3.599,140,1.146,158,1.138,159,0.928,166,1.801,213,1.308,266,1.89,277,4.289,303,1.367,344,1.263,516,1.178,745,3.45,784,3.945,814,3.45,815,5.45,816,6.234,817,4.905,818,4.24,819,6.716,820,5.45,821,4.75,822,6.234,823,5.45,824,5.45,825,5.45,826,5.45,827,5.45,828,5.45,829,3.958,830,3.135,831,5.45,832,5.45,833,5.433,834,7.044,835,3.807,836,3.958,837,3.958,838,3.958,839,3.958,840,3.958,841,3.958,842,3.958,843,3.958,844,3.958,845,3.958,846,3.958,847,3.958,848,5.45,849,3.958,850,5.45,851,3.958,852,3.958,853,6.234,854,3.958,855,5.45,856,3.958,857,4.289,858,3.958,859,3.958,860,4.75,861,3.958,862,3.958,863,3.958,864,3.958,865,3.958,866,3.958,867,3.958,868,3.958,869,3.958,870,6.234,871,3.958,872,3.958,873,3.958,874,3.958,875,3.958,876,3.958,877,3.958,878,3.958,879,2.865,880,3.958,881,3.958,882,3.958,883,3.958,884,3.958,885,6.234,886,3.958,887,3.958,888,3.958,889,3.958,890,5.45,891,3.958,892,5.45,893,3.958,894,3.958,895,3.958,896,3.958,897,3.958,898,3.958]],["title/modules/ErrorModule.html",[424,0.946,899,2.922]],["body/modules/ErrorModule.html",[3,0.17,4,0.189,5,0.132,26,0.013,56,0.28,58,0.249,77,0.209,78,0.06,104,0.008,105,0.01,106,0.008,165,1.707,300,1.342,307,2.614,308,1.832,322,2.614,357,1.832,424,1.254,426,1.768,427,2.208,428,3.231,429,2.394,430,2.971,431,1.899,444,2.971,445,2.394,446,2.208,448,2.445,451,2.445,452,3.1,465,3.378,683,3.239,684,2.208,899,5.953,900,4.663,901,4.663,902,4.663,903,5.326,904,5.351,905,4.192,906,4.663,907,4.663]],["title/modules/ErrorRoutingModule.html",[424,0.946,903,2.718]],["body/modules/ErrorRoutingModule.html",[3,0.181,4,0.202,5,0.141,26,0.014,56,0.273,58,0.265,77,0.223,78,0.064,104,0.009,105,0.011,106,0.009,107,1.098,307,2.282,308,1.953,322,2.282,398,1.48,426,1.885,431,2.025,448,2.1,451,2.543,562,1.64,565,3.6,566,4.11,567,3.368,575,3.979,586,4.971,588,3.7,903,4.649,906,4.971,907,4.971,908,5.703,909,5.703,910,5.703]],["title/directives/FollowBusMapDirective.html",[303,1.013,348,1.288]],["body/directives/FollowBusMapDirective.html",[1,2.611,3,0.094,4,0.104,5,0.073,7,0.271,8,0.811,9,1.106,20,0.603,23,1.196,25,1.007,26,0.014,27,0.841,28,0.636,29,0.872,32,0.999,56,0.259,58,0.137,68,0.582,74,1.862,77,0.172,78,0.05,79,0.603,80,0.487,94,3.715,104,0.005,105,0.007,106,0.005,115,1.145,117,0.975,118,1.185,124,0.933,130,1.217,134,1.566,140,1.292,148,0.941,153,1.01,158,1.52,159,1.239,200,1.506,213,0.975,266,0.766,303,1.107,319,0.543,344,0.941,348,1.686,398,1.773,400,1.663,441,2.684,443,2.898,475,1.439,493,1.5,516,1.573,526,0.941,529,1.32,538,1.439,543,1.313,546,1.663,575,1.581,595,2.426,596,3.703,606,1.267,629,1.946,633,2.16,634,2.626,648,2.98,651,1.946,655,1.663,658,1.511,659,3.472,660,1.171,805,1.986,830,2.738,911,4.072,912,5.98,913,5.5,914,1.862,915,2.365,916,3.845,917,4.606,918,3.558,919,4.606,920,4.606,921,4.245,922,2.625,923,4.412,924,2.785,925,2.995,926,2.995,927,4.412,928,1.663,929,4.412,930,2.95,931,2.95,932,2.95,933,3.845,934,2.571,935,3.845,936,3.845,937,2.699,938,2.95,939,2.95,940,2.785,941,2.571,942,2.571,943,2.95,944,2.571,945,2.571,946,1.377,947,1.217,948,1.506,949,2.571,950,1.862,951,2.321,952,2.135,953,2.571,954,1.506,955,1.506,956,2.06,957,2.321,958,2.135,959,1.625,960,2.571,961,1.127,962,2.571,963,2.571,964,2.321,965,2.321,966,2.571,967,2.571,968,1.986,969,1.986,970,3.845,971,2.571,972,2.571,973,2.571,974,2.571,975,2.571,976,2.571,977,2.571,978,2.571,979,2.571,980,1.663,981,2.571,982,1.663,983,2.571,984,2.571,985,2.571,986,2.571,987,1.986,988,2.135,989,2.321,990,2.321,991,2.321,992,2.321,993,2.321,994,1.663,995,2.135,996,2.321,997,2.321,998,2.321,999,2.571,1000,3.845,1001,2.571,1002,2.571,1003,2.321,1004,2.97,1005,2.321,1006,2.321,1007,3.193,1008,1.986,1009,2.571,1010,2.571,1011,1.986,1012,3.472,1013,1.986,1014,2.321,1015,3.472,1016,1.506,1017,2.321,1018,1.986,1019,2.571,1020,2.135,1021,2.321,1022,1.986,1023,1.986,1024,1.986,1025,2.321,1026,1.986,1027,1.986,1028,2.571,1029,2.571,1030,2.135,1031,2.571,1032,2.571,1033,1.506,1034,2.571,1035,1.986,1036,2.571]],["title/interfaces/IAppNotification.html",[508,2.718,530,1.244]],["body/interfaces/IAppNotification.html",[0,1.709,3,0.201,4,0.144,5,0.101,7,0.374,9,0.964,26,0.014,28,0.764,29,1.211,32,0.646,33,2.425,37,2.261,56,0.24,58,0.189,68,0.802,75,2.075,76,1.982,77,0.265,78,0.046,79,0.83,80,0.916,104,0.006,105,0.009,106,0.006,124,1.174,130,3.028,140,1.162,165,1.296,169,2.325,213,1.342,256,1.745,263,2.565,319,0.747,357,1.9,375,2.075,381,5.41,394,4.572,403,4.368,405,5.311,415,1.677,491,2.735,492,2.735,493,1.095,494,3.197,495,3.197,496,3.197,499,3.197,501,4.254,504,2.735,505,2.94,506,3.197,507,3.197,508,4.94,510,3.197,511,4.366,512,3.197,515,3.747,516,1.651,518,3.197,519,3.197,522,4.366,523,3.197,524,1.982,525,2.29,526,1.296,527,2.075,528,4.016,529,1.818,530,1.709,531,3.736,532,4.366,533,3.197,534,2.94,535,3.197,536,3.197,537,3.197,538,1.982,539,2.177,540,3.197,541,3.197,542,3.197,543,1.209,544,3.197,545,3.197,546,2.29,547,3.197,548,3.197,549,3.197,550,3.197,551,3.197,591,2.075]],["title/interfaces/IAppNotificationDismiss.html",[530,1.244,531,2.718]],["body/interfaces/IAppNotificationDismiss.html",[0,1.757,3,0.205,4,0.15,5,0.105,7,0.389,9,0.98,26,0.014,28,0.696,32,0.673,33,1.884,37,2.288,56,0.244,58,0.197,68,0.835,75,2.16,76,2.063,77,0.269,78,0.048,79,0.864,80,0.941,104,0.007,105,0.009,106,0.007,124,1.206,130,2.354,140,1.187,165,1.349,169,2.364,213,1.398,256,1.817,263,2.67,319,0.778,357,1.953,375,2.16,381,5.443,394,3.84,403,3.395,405,4.127,415,1.746,491,2.848,492,2.848,493,1.125,494,3.329,495,3.329,496,3.329,499,3.329,501,4.344,504,2.848,505,3.062,506,3.329,507,3.329,508,5.11,510,3.329,511,4.488,512,3.329,515,3.792,516,1.697,518,3.329,519,3.329,522,4.488,523,3.329,524,2.063,525,2.385,526,1.349,527,2.16,528,4.127,529,1.893,530,1.757,531,4.344,532,5.673,533,3.329,534,3.062,535,3.329,536,3.329,537,3.329,538,2.063,539,2.267,540,3.329,541,3.329,542,3.329,543,1.259,544,3.329,545,3.329,546,2.385,547,3.329,548,3.329,549,3.329,550,3.329,551,3.329,591,2.16]],["title/interfaces/IEnvironmentBase.html",[530,1.244,1037,2.922]],["body/interfaces/IEnvironmentBase.html",[3,0.184,4,0.204,5,0.143,7,0.531,26,0.013,28,0.748,29,1.148,33,2.467,56,0.204,77,0.225,104,0.009,105,0.011,106,0.009,119,1.551,124,1.471,169,2.759,530,1.779,591,2.949,1037,5.035,1038,5.033,1039,6.755,1040,6.755,1041,6.755,1042,5.34,1043,5.609,1044,3.781]],["title/interfaces/IMapBounds.html",[53,2.062,530,1.244]],["body/interfaces/IMapBounds.html",[3,0.111,4,0.124,5,0.087,7,0.322,9,1.046,26,0.014,28,0.724,53,2.554,56,0.248,58,0.163,68,0.691,77,0.281,78,0.056,79,1.022,80,1.051,92,3.105,95,3.105,97,2.971,99,2.848,104,0.006,105,0.008,106,0.006,115,0.909,124,1.058,140,0.92,147,1.877,148,1.861,164,1.877,197,1.504,213,1.157,243,3.683,256,2.148,266,0.909,319,1.073,398,1.298,415,1.445,441,1.912,443,2.408,475,1.708,493,1.151,515,2.98,516,1.042,527,1.788,530,1.798,543,2.083,591,1.788,593,2.628,595,1.842,629,1.842,633,1.29,640,1.877,641,2.211,643,2.085,651,1.842,658,1.713,660,1.39,734,1.29,818,2.211,830,2.335,835,1.708,915,2.238,922,1.567,925,1.788,926,2.98,928,1.975,937,2.554,946,1.635,947,1.445,954,1.788,955,1.788,956,2.335,959,1.29,961,1.339,980,1.975,982,1.975,994,2.82,1016,1.788,1044,1.708,1045,1.975,1046,1.975,1047,2.358,1048,2.358,1049,1.975,1050,1.877,1051,2.085,1052,2.211,1053,2.82,1054,3.368,1055,2.82,1056,2.978,1057,1.975,1058,2.085,1059,2.358,1060,2.085,1061,2.358,1062,2.358,1063,2.358,1064,2.358,1065,3.368,1066,2.358,1067,2.358,1068,2.358,1069,2.358,1070,2.085,1071,3.368,1072,2.358,1073,2.358,1074,3.929,1075,1.877,1076,2.358,1077,2.358,1078,2.358,1079,2.358,1080,2.358,1081,2.358,1082,2.358,1083,3.368,1084,2.358,1085,2.358,1086,2.358,1087,2.085,1088,2.358,1089,2.211,1090,2.211,1091,2.358,1092,2.358,1093,2.358,1094,2.358,1095,2.358,1096,2.358,1097,2.358,1098,2.211,1099,2.358,1100,2.085,1101,2.358,1102,2.358,1103,2.358,1104,3.368,1105,2.358,1106,2.358,1107,3.368,1108,2.358,1109,2.358,1110,2.358,1111,2.211,1112,3.929,1113,2.358,1114,2.358,1115,3.368,1116,2.358,1117,2.358,1118,2.358,1119,2.358,1120,2.358,1121,2.358,1122,2.358,1123,3.368,1124,2.358,1125,3.368,1126,2.358,1127,2.358,1128,2.358,1129,2.358,1130,1.788,1131,2.358,1132,2.358,1133,2.358,1134,2.358]],["title/interfaces/IMapMoveEndEvent.html",[530,1.244,1055,2.276]],["body/interfaces/IMapMoveEndEvent.html",[3,0.114,4,0.127,5,0.089,7,0.331,9,1.053,26,0.014,28,0.729,53,1.837,56,0.25,58,0.167,68,0.71,77,0.283,78,0.057,79,1.042,80,1.063,92,1.755,95,1.755,97,1.68,99,1.61,104,0.006,105,0.008,106,0.006,115,0.934,124,1.078,140,0.938,147,1.928,148,1.889,164,1.928,197,1.545,213,1.189,243,3.739,256,2.19,266,0.934,319,1.089,398,1.323,415,1.485,441,1.949,443,2.444,475,1.755,493,1.169,515,3.024,516,1.071,527,1.837,530,1.824,543,2.102,591,1.837,593,2.4,595,1.878,629,1.878,633,1.325,640,1.928,641,2.271,643,2.142,651,1.878,658,1.746,660,1.428,734,1.325,818,2.271,830,2.38,835,1.755,915,2.282,922,1.61,925,1.837,926,3.024,928,2.028,937,2.604,946,1.68,947,1.485,954,1.837,955,1.837,956,2.38,959,1.325,961,1.375,980,2.028,982,2.028,994,2.875,1016,1.837,1044,1.755,1045,2.028,1046,2.028,1047,2.422,1048,2.422,1049,2.028,1050,1.928,1051,2.142,1052,2.271,1053,2.875,1054,3.433,1055,3.339,1056,3.835,1057,2.028,1058,2.142,1059,2.422,1060,2.142,1061,2.422,1062,2.422,1063,2.422,1064,2.422,1065,3.433,1066,2.422,1067,2.422,1068,2.422,1069,2.422,1070,2.142,1071,3.433,1072,2.422,1073,2.422,1074,3.987,1075,1.928,1076,2.422,1077,2.422,1078,2.422,1079,2.422,1080,2.422,1081,2.422,1082,2.422,1083,3.433,1084,2.422,1085,2.422,1086,2.422,1087,2.142,1088,2.422,1089,2.271,1090,2.271,1091,2.422,1092,2.422,1093,2.422,1094,2.422,1095,2.422,1096,2.422,1097,2.422,1098,2.271,1099,2.422,1100,2.142,1101,2.422,1102,2.422,1103,2.422,1104,3.433,1105,2.422,1106,2.422,1107,3.433,1108,2.422,1109,2.422,1110,2.422,1111,2.271,1112,3.987,1113,2.422,1114,2.422,1115,3.433,1116,2.422,1117,2.422,1118,2.422,1119,2.422,1120,2.422,1121,2.422,1122,2.422,1123,3.433,1124,2.422,1125,3.433,1126,2.422,1127,2.422,1128,2.422,1129,2.422,1130,1.837,1131,2.422,1132,2.422,1133,2.422,1134,2.422]],["title/interfaces/IMapMoveStartEvent.html",[530,1.244,1053,2.276]],["body/interfaces/IMapMoveStartEvent.html",[3,0.114,4,0.127,5,0.089,7,0.331,9,1.053,26,0.014,28,0.729,53,1.837,56,0.25,58,0.167,68,0.71,77,0.283,78,0.057,79,1.042,80,1.063,92,1.755,95,1.755,97,1.68,99,1.61,104,0.006,105,0.008,106,0.006,115,0.934,124,1.078,140,0.938,147,1.928,148,1.889,164,1.928,197,1.545,213,1.189,243,3.739,256,2.19,266,0.934,319,1.089,398,1.323,415,1.485,441,1.949,443,2.444,475,1.755,493,1.169,515,3.024,516,1.071,527,1.837,530,1.824,543,2.102,591,1.837,593,2.4,595,1.878,629,1.878,633,1.325,640,1.928,641,2.271,643,2.142,651,1.878,658,1.746,660,1.428,734,1.325,818,2.271,830,2.38,835,1.755,915,2.282,922,1.61,925,1.837,926,3.024,928,2.028,937,2.604,946,1.68,947,1.485,954,1.837,955,1.837,956,2.38,959,1.325,961,1.375,980,2.028,982,2.028,994,2.875,1016,1.837,1044,1.755,1045,2.028,1046,2.028,1047,2.422,1048,2.422,1049,2.028,1050,1.928,1051,2.142,1052,2.271,1053,3.339,1054,4.338,1055,2.875,1056,3.035,1057,2.028,1058,2.142,1059,2.422,1060,2.142,1061,2.422,1062,2.422,1063,2.422,1064,2.422,1065,3.433,1066,2.422,1067,2.422,1068,2.422,1069,2.422,1070,2.142,1071,3.433,1072,2.422,1073,2.422,1074,3.987,1075,1.928,1076,2.422,1077,2.422,1078,2.422,1079,2.422,1080,2.422,1081,2.422,1082,2.422,1083,3.433,1084,2.422,1085,2.422,1086,2.422,1087,2.142,1088,2.422,1089,2.271,1090,2.271,1091,2.422,1092,2.422,1093,2.422,1094,2.422,1095,2.422,1096,2.422,1097,2.422,1098,2.271,1099,2.422,1100,2.142,1101,2.422,1102,2.422,1103,2.422,1104,3.433,1105,2.422,1106,2.422,1107,3.433,1108,2.422,1109,2.422,1110,2.422,1111,2.271,1112,3.987,1113,2.422,1114,2.422,1115,3.433,1116,2.422,1117,2.422,1118,2.422,1119,2.422,1120,2.422,1121,2.422,1122,2.422,1123,3.433,1124,2.422,1125,3.433,1126,2.422,1127,2.422,1128,2.422,1129,2.422,1130,1.837,1131,2.422,1132,2.422,1133,2.422,1134,2.422]],["title/interfaces/IPassageStatus.html",[530,1.244,1135,2.922]],["body/interfaces/IPassageStatus.html",[1,2.097,3,0.1,4,0.111,5,0.078,7,0.289,9,1.068,26,0.014,27,0.5,28,0.623,29,0.764,30,2.474,32,1.162,33,1.039,35,4.342,37,1.691,56,0.247,58,0.146,65,1.039,66,1.003,67,1.039,68,0.62,71,4.402,77,0.181,78,0.035,79,0.642,80,1.226,87,1.242,104,0.005,105,0.007,106,0.005,107,0.873,115,0.816,118,0.844,119,0.844,120,1.077,122,1.077,124,0.978,140,0.851,153,1.077,169,1.077,179,2.474,192,2.456,213,1.039,256,1.35,266,1.201,314,1.116,319,0.851,329,1.039,341,1.003,342,2.148,343,2.542,357,2.072,398,0.816,407,2.117,418,2.474,422,3.348,493,1.331,516,0.936,524,1.534,526,1.003,527,1.606,529,1.407,530,0.969,543,1.633,562,0.904,572,1.773,588,1.685,591,1.606,593,2.453,597,4.817,598,3.348,615,1.685,629,1.703,633,1.158,648,2.608,651,2.021,658,1.077,660,1.836,673,3.64,728,5.374,734,1.158,747,3.348,911,1.685,915,2.07,922,1.407,940,1.985,952,2.276,1033,1.606,1044,2.256,1130,1.606,1135,4.38,1136,2.276,1137,5.274,1138,5.746,1139,3.114,1140,4.032,1141,1.407,1142,2.276,1143,1.773,1144,1.985,1145,2.474,1146,2.474,1147,2.474,1148,2.92,1149,2.474,1150,2.474,1151,4.319,1152,2.74,1153,2.74,1154,3.972,1155,2.74,1156,4.783,1157,2.74,1158,2.74,1159,2.74,1160,2.74,1161,2.74,1162,4.38,1163,4.032,1164,5.621,1165,2.74,1166,4.032,1167,2.276,1168,2.74,1169,2.74,1170,2.74,1171,4.032,1172,2.74,1173,2.74,1174,2.74,1175,2.276,1176,2.74,1177,2.74,1178,2.74,1179,2.74,1180,4.032,1181,2.74,1182,2.74,1183,2.74,1184,4.032,1185,2.74,1186,2.74,1187,2.74,1188,4.032,1189,2.74,1190,4.032,1191,2.74,1192,2.74,1193,2.74,1194,2.74,1195,2.74,1196,2.74,1197,2.74,1198,2.74,1199,2.74,1200,2.74,1201,2.74,1202,2.74,1203,2.74,1204,2.74,1205,2.474,1206,2.74,1207,2.74,1208,2.74,1209,3.114,1210,2.74,1211,2.474,1212,2.474]],["title/interfaces/ITimestampVehicleLocation.html",[530,1.244,596,2.548]],["body/interfaces/ITimestampVehicleLocation.html",[3,0.177,4,0.197,5,0.138,7,0.513,26,0.013,28,0.71,55,3.32,56,0.197,63,5.157,65,1.843,66,1.779,67,1.843,71,3.521,77,0.287,92,2.72,95,2.72,97,2.603,99,2.495,104,0.009,105,0.011,106,0.009,124,1.441,530,2.098,591,2.848,592,4.036,593,2.674,594,5.937,595,2.708,596,4.642,597,5.38,598,4.93,599,5.937,600,5.044]],["title/classes/LeafletMapComponent.html",[78,0.045,956,1.885]],["body/classes/LeafletMapComponent.html",[3,0.093,4,0.103,5,0.072,7,0.269,8,0.806,9,1.118,20,0.597,23,1.193,25,1.001,26,0.014,27,0.836,28,0.724,29,0.867,32,1.044,53,1.492,56,0.232,58,0.136,68,0.577,77,0.266,78,0.049,79,0.895,80,0.964,92,1.425,95,1.425,97,1.364,99,1.307,104,0.005,105,0.007,106,0.005,115,1.137,124,0.927,134,1.555,140,1.15,145,1.967,147,2.347,148,1.862,158,1.26,159,1.027,164,1.566,197,1.255,213,0.965,243,3.317,256,1.881,266,0.758,319,1.15,359,1.206,398,1.137,415,1.206,441,2.231,443,2.81,475,1.425,493,1.413,515,3.194,516,1.304,527,1.492,530,1.619,543,2.171,553,1.425,593,2.25,595,2.15,629,1.935,633,2.15,640,1.566,641,1.844,643,2.608,651,1.935,658,1.5,660,1.739,734,1.076,818,2.765,830,2.725,835,1.425,915,2.351,922,2.612,924,1.844,925,2.684,926,3.194,928,2.47,937,2.684,946,1.364,947,1.206,954,1.492,955,1.492,956,2.453,959,1.076,961,1.117,980,1.647,982,1.647,994,3.526,995,2.115,1016,1.492,1044,2.563,1045,4.276,1046,1.647,1047,1.967,1048,1.967,1049,1.647,1050,1.566,1051,1.739,1052,1.844,1053,2.47,1054,2.949,1055,2.47,1056,2.608,1057,1.647,1058,1.739,1059,1.967,1060,1.739,1061,1.967,1062,1.967,1063,1.967,1064,2.949,1065,3.538,1066,3.538,1067,2.949,1068,2.949,1069,3.538,1070,3.128,1071,3.931,1072,3.538,1073,3.538,1074,3.538,1075,2.816,1076,1.967,1077,1.967,1078,1.967,1079,1.967,1080,1.967,1081,1.967,1082,1.967,1083,2.949,1084,1.967,1085,1.967,1086,1.967,1087,1.739,1088,1.967,1089,1.844,1090,1.844,1091,1.967,1092,1.967,1093,1.967,1094,1.967,1095,1.967,1096,1.967,1097,1.967,1098,1.844,1099,1.967,1100,1.739,1101,1.967,1102,1.967,1103,1.967,1104,2.949,1105,1.967,1106,1.967,1107,2.949,1108,1.967,1109,1.967,1110,1.967,1111,2.765,1112,4.211,1113,2.949,1114,3.538,1115,2.949,1116,1.967,1117,1.967,1118,1.967,1119,1.967,1120,1.967,1121,1.967,1122,1.967,1123,2.949,1124,1.967,1125,2.949,1126,1.967,1127,1.967,1128,1.967,1129,1.967,1130,1.492,1131,3.931,1132,2.949,1133,1.967,1134,1.967,1213,4.381,1214,4.381,1215,4.381,1216,2.922,1217,2.922,1218,2.922,1219,2.922,1220,2.922,1221,2.922,1222,2.922,1223,2.922,1224,2.922,1225,2.922,1226,2.922]],["title/directives/MainMapDirective.html",[303,1.013,350,1.288]],["body/directives/MainMapDirective.html",[1,2.381,3,0.073,4,0.081,5,0.057,7,0.21,8,0.666,9,1.12,20,0.466,23,1.126,25,1.064,26,0.014,27,0.888,28,0.658,29,0.922,32,1.028,37,1.116,53,1.849,55,1.359,56,0.257,58,0.106,63,3.449,64,4.395,65,0.754,66,0.728,67,0.754,68,0.451,73,1.797,74,1.441,77,0.141,78,0.041,79,0.466,80,0.743,92,1.114,94,3.351,95,1.114,97,1.066,99,1.022,104,0.004,105,0.006,106,0.004,115,0.94,117,0.754,118,0.972,124,0.766,130,1.495,140,1.28,153,1.754,158,1.041,159,0.849,165,0.728,169,0.782,192,2.787,197,1.933,200,1.166,212,2.85,224,2.85,261,1.797,263,1.441,266,0.593,269,2.042,303,0.908,319,0.42,336,1.339,339,0.656,344,0.728,350,1.436,357,0.782,398,1.865,441,1.958,442,2.616,443,2.667,472,1.797,473,1.537,474,1.797,475,1.114,493,1.436,501,3.449,524,1.114,525,2.042,526,0.728,538,1.114,539,1.223,543,1.854,546,1.287,559,1.537,562,0.656,593,0.754,595,2.379,600,2.286,606,1.555,629,1.657,633,1.886,651,1.657,656,1.652,657,1.537,658,1.24,667,1.797,684,0.942,695,1.797,697,1.537,734,0.841,817,1.797,830,2.391,835,1.766,879,2.621,914,1.441,915,2.014,918,3.03,921,3.707,922,2.292,924,2.286,925,3.035,926,2.616,928,1.287,934,1.99,937,3.035,941,1.99,946,1.066,947,2.305,948,1.166,950,1.441,954,1.166,956,1.69,959,1.333,961,0.873,968,1.537,987,1.537,988,1.652,1004,2.438,1007,2.621,1008,1.537,1011,1.537,1013,3.449,1016,1.166,1018,2.438,1020,1.652,1022,1.537,1023,1.537,1024,1.537,1026,1.537,1027,1.537,1030,1.652,1033,1.166,1035,1.537,1049,1.287,1050,1.94,1056,2.156,1057,3.351,1070,1.359,1075,2.745,1087,1.359,1141,1.022,1143,1.287,1175,2.621,1227,3.668,1228,5.199,1229,3.922,1230,3.922,1231,3.621,1232,3.621,1233,3.621,1234,4.464,1235,3.621,1236,3.257,1237,3.922,1238,3.621,1239,2.283,1240,3.156,1241,2.283,1242,3.156,1243,2.283,1244,2.283,1245,2.283,1246,3.156,1247,3.156,1248,2.283,1249,3.156,1250,3.156,1251,2.283,1252,2.283,1253,2.411,1254,1.537,1255,1.652,1256,1.99,1257,1.99,1258,1.99,1259,3.156,1260,1.99,1261,1.99,1262,1.99,1263,1.99,1264,1.99,1265,1.99,1266,1.99,1267,1.99,1268,3.156,1269,1.99,1270,1.99,1271,1.99,1272,3.156,1273,1.99,1274,1.99,1275,1.99,1276,1.797,1277,1.797,1278,1.99,1279,3.542,1280,1.99,1281,1.99,1282,1.99,1283,1.99,1284,3.922,1285,1.99,1286,1.99,1287,1.99,1288,3.156,1289,1.99,1290,1.99,1291,1.99,1292,1.99,1293,1.99,1294,1.99,1295,1.99,1296,3.156,1297,1.99,1298,1.99,1299,1.99,1300,1.99,1301,1.99,1302,3.156,1303,1.99,1304,1.99,1305,1.99,1306,1.99,1307,1.99,1308,1.99,1309,1.99,1310,1.99,1311,1.99,1312,3.922,1313,1.99,1314,3.156,1315,1.99,1316,3.156,1317,1.99,1318,1.99,1319,1.99,1320,1.99,1321,1.99,1322,1.99,1323,1.99,1324,1.99,1325,1.99,1326,1.287,1327,1.99,1328,3.156,1329,3.156,1330,3.156,1331,1.99,1332,1.99,1333,1.99,1334,1.99,1335,4.464,1336,1.99,1337,1.99,1338,1.99,1339,1.99,1340,1.99,1341,1.99,1342,1.797,1343,1.99,1344,1.99,1345,3.156,1346,1.99,1347,1.99,1348,1.99,1349,1.99,1350,1.99,1351,1.99,1352,1.99,1353,1.99,1354,1.99,1355,1.99,1356,1.99,1357,1.99,1358,1.99,1359,1.99,1360,1.99,1361,1.99,1362,1.99,1363,1.99]],["title/modules/MainMapModule.html",[424,0.946,438,2.548]],["body/modules/MainMapModule.html",[3,0.176,4,0.196,5,0.137,26,0.013,56,0.27,58,0.257,77,0.216,78,0.062,104,0.009,105,0.011,106,0.009,165,1.765,194,1.964,300,1.388,350,2.662,424,1.297,426,1.828,427,2.283,428,3.279,429,2.476,430,2.476,431,2.601,438,5.099,444,3.033,445,2.476,446,2.283,448,2.037,451,2.496,683,3.575,684,2.283,1227,2.825,1228,4.004,1364,4.822,1365,4.822,1366,4.822,1367,5.532,1368,7.328,1369,4.354]],["title/components/MainToolbarComponent.html",[107,0.642,316,1.334]],["body/components/MainToolbarComponent.html",[3,0.082,4,0.091,5,0.064,7,0.236,8,0.73,9,1.079,20,0.524,23,1.121,25,0.925,26,0.013,27,0.993,28,0.468,29,0.801,32,0.939,56,0.209,58,0.119,68,0.507,77,0.155,78,0.045,79,0.811,80,0.424,87,1.466,97,1.198,104,0.004,105,0.006,106,0.004,107,0.772,108,0.879,109,1.517,110,1.019,111,1.019,112,1.019,113,1.019,115,1.03,116,2.6,117,0.848,118,2.127,119,2.135,120,1.359,122,1.359,124,0.84,131,2.926,133,3.952,134,1.409,136,2.02,137,3.716,140,1.237,145,1.728,147,2.127,148,2.076,153,0.879,158,1.141,159,0.93,164,1.375,166,0.848,169,1.87,173,3.512,182,3.138,188,3.063,192,2.913,194,2.387,195,2.743,196,1.149,199,1.728,207,2.926,208,1.528,209,1.62,210,1.62,213,2.063,214,2.506,215,3.123,219,3.079,225,4.759,226,3.459,232,2.506,242,2.02,278,3.512,279,1.311,297,3.819,299,2.02,300,0.644,301,1.517,302,1.576,303,0.644,304,2.168,305,1.019,306,1.019,307,0.848,308,0.879,309,1.019,310,0.879,311,1.517,312,1.576,313,0.879,314,0.911,315,1.019,316,1.951,317,1.019,318,0.879,319,0.472,320,0.945,321,1.019,322,0.848,323,1.019,324,0.819,325,0.911,326,1.019,327,0.879,328,0.848,329,1.604,330,1.019,331,0.848,332,1.576,333,0.879,334,1.019,335,0.848,336,0.764,337,1.576,338,0.848,339,0.738,340,1.804,341,0.819,342,0.911,343,0.879,344,0.819,345,0.848,346,1.019,347,1.019,348,0.819,349,1.019,350,0.819,351,1.019,352,0.848,353,0.981,354,1.019,400,2.238,468,4.832,493,1.284,529,1.149,562,0.738,584,3.488,606,3.082,615,1.375,658,1.359,660,1.019,835,2.664,959,0.945,961,0.981,980,1.447,982,1.447,1051,1.528,1227,3.665,1370,2.02,1371,4.229,1372,3.459,1373,5.441,1374,4.229,1375,4.229,1376,3.969,1377,4.759,1378,4.229,1379,3.969,1380,2.567,1381,3.459,1382,2.567,1383,2.567,1384,2.567,1385,2.567,1386,3.459,1387,2.567,1388,2.567,1389,2.567,1390,2.567,1391,2.567,1392,2.873,1393,2.873,1394,3.459,1395,2.02,1396,1.858,1397,1.858,1398,2.237,1399,2.237,1400,3.459,1401,3.459,1402,2.237,1403,2.237,1404,2.237,1405,2.237,1406,2.237,1407,2.237,1408,2.237,1409,3.969,1410,2.567,1411,2.567,1412,2.567,1413,3.969,1414,3.969,1415,3.123,1416,5.461,1417,3.969,1418,3.969,1419,3.969,1420,3.969,1421,3.969,1422,3.969,1423,3.969,1424,6.243,1425,3.969,1426,3.969,1427,3.969,1428,3.123,1429,2.567,1430,3.969,1431,3.459,1432,2.567,1433,2.567,1434,3.969,1435,2.567,1436,2.567,1437,2.237,1438,2.567,1439,4.853,1440,5.461,1441,5.441,1442,4.646,1443,2.237,1444,2.567,1445,2.567,1446,2.567,1447,2.567,1448,2.567,1449,2.567,1450,2.567,1451,2.567,1452,2.567,1453,2.567,1454,2.567,1455,2.567,1456,2.567]],["title/modules/MainToolbarModule.html",[424,0.946,439,2.548]],["body/modules/MainToolbarModule.html",[3,0.151,4,0.168,5,0.117,26,0.013,56,0.28,58,0.221,77,0.185,78,0.053,87,1.274,104,0.007,105,0.01,106,0.007,165,1.514,194,1.684,300,1.19,316,2.701,328,2.701,329,1.568,340,2.701,424,1.112,426,1.568,427,1.958,428,3.055,429,2.123,430,2.753,431,2.424,439,5.186,444,2.753,445,2.123,446,1.958,448,1.747,451,2.266,452,3.187,453,5.373,468,3.195,562,1.364,566,4.065,584,2.543,683,3.331,684,1.958,1227,2.423,1396,3.434,1457,4.136,1458,4.136,1459,4.136,1460,4.745,1461,6.828,1462,6.828,1463,3.734,1464,6.828,1465,4.942,1466,5.951,1467,6.828,1468,5.373,1469,4.745,1470,4.745]],["title/components/MapHeaderBoxComponent.html",[107,0.642,318,1.382]],["body/components/MapHeaderBoxComponent.html",[3,0.108,4,0.12,5,0.084,7,0.528,9,0.814,23,0.913,26,0.013,27,0.913,28,0.473,33,2.075,56,0.12,58,0.158,77,0.133,78,0.038,87,1.315,104,0.005,105,0.008,106,0.005,107,0.913,108,1.164,109,1.871,110,1.349,111,1.349,112,1.349,113,1.349,117,1.123,118,2.199,119,2.16,120,1.676,122,1.676,130,2.948,148,1.562,158,1.65,159,1.345,166,1.123,182,2.368,188,2.146,191,3.961,194,1.207,195,1.299,196,2.568,197,2.696,198,4.153,199,3.296,200,2.93,201,2.288,207,2.623,208,2.023,209,2.146,210,3.091,216,2.962,218,2.46,219,1.916,229,4.267,232,2.146,237,2.288,238,3.296,239,3.296,260,3.296,264,2.962,266,1.489,269,3.752,270,5.001,273,2.146,279,1.736,290,4.153,293,2.675,295,2.146,296,2.288,300,0.853,301,1.871,302,1.944,303,0.853,304,2.492,305,1.349,306,1.349,307,1.123,308,1.164,309,1.349,310,1.164,311,1.871,312,1.944,313,1.164,314,1.207,315,1.349,316,1.123,317,1.349,318,2.15,319,1.39,320,2.933,321,1.349,322,1.123,323,1.349,324,1.084,325,1.207,326,1.349,327,1.164,328,1.123,329,1.123,330,1.349,331,1.123,332,1.944,333,1.164,334,1.349,335,1.123,336,1.012,337,1.944,338,1.123,339,0.977,340,1.123,341,1.084,342,1.207,343,1.164,344,1.084,345,1.123,346,1.349,347,1.349,348,1.084,349,1.349,350,1.084,351,1.349,352,1.123,353,1.299,354,1.349,446,1.403,529,1.521,543,1.868,595,1.803,606,2.696,614,2.675,615,1.821,619,2.675,620,2.675,621,2.675,622,4.2,623,3.622,634,2.914,654,2.962,655,3.54,664,2.46,805,3.296,806,3.853,947,1.403,948,1.736,1050,1.821,1089,2.146,1111,2.146,1279,2.675,1441,4.267,1471,4.941,1472,4.941,1473,2.675,1474,5.001,1475,4.267,1476,5.738,1477,6.278,1478,3.399,1479,3.399,1480,3.399,1481,3.399,1482,4.896,1483,4.896,1484,4.896,1485,4.896,1486,3.399,1487,3.399,1488,3.399,1489,3.399,1490,2.962,1491,3.399,1492,3.399,1493,3.399,1494,4.267,1495,2.962,1496,2.962,1497,3.399,1498,3.399,1499,3.399,1500,3.399,1501,3.399,1502,2.962,1503,3.399,1504,2.962,1505,3.399,1506,3.399,1507,3.399,1508,3.399,1509,3.399,1510,3.399,1511,3.399,1512,3.399,1513,3.399,1514,3.399]],["title/modules/MapHeaderBoxModule.html",[424,0.946,1515,2.548]],["body/modules/MapHeaderBoxModule.html",[3,0.174,4,0.193,5,0.135,26,0.013,56,0.269,58,0.254,77,0.213,78,0.062,104,0.009,105,0.011,106,0.009,165,1.744,300,1.372,318,2.853,319,1.005,320,2.684,424,1.281,426,1.806,427,2.256,428,3.262,429,2.446,430,3.011,431,2.588,444,3.011,445,2.446,446,2.256,448,2.013,451,2.478,452,3.403,683,3.556,684,2.256,1396,3.957,1471,4.302,1472,4.302,1515,5.086,1516,4.765,1517,4.765,1518,4.765,1519,5.467]],["title/classes/NavigationSubscriber.html",[78,0.045,1397,2.922]],["body/classes/NavigationSubscriber.html",[3,0.141,4,0.157,5,0.11,7,0.408,8,1.083,9,1.141,20,0.907,23,0.937,25,1.122,26,0.014,27,0.937,28,0.569,29,0.972,32,0.706,56,0.259,58,0.206,68,0.876,77,0.23,78,0.066,79,1.204,80,0.733,104,0.007,105,0.009,106,0.007,107,0.937,115,1.153,116,3.157,118,1.192,119,1.192,120,1.521,122,1.521,131,2.379,133,3.214,137,3.935,140,1.295,147,2.379,148,2.246,153,1.521,164,2.379,169,2.017,173,3.214,192,2.958,194,2.347,195,2.527,213,1.467,316,2.327,340,1.947,400,3.321,410,3.157,468,4.451,493,1.305,553,2.166,562,1.277,584,2.379,658,2.264,660,1.763,835,3.434,959,2.169,961,1.697,1227,3.376,1370,3.494,1371,3.87,1372,3.87,1373,3.87,1374,3.87,1375,3.87,1377,3.87,1378,3.87,1381,3.87,1386,3.87,1392,4.264,1393,4.264,1394,6.136,1395,3.494,1396,3.214,1397,4.264,1398,5.134,1399,3.87,1400,5.134,1401,5.134,1402,3.87,1403,3.87,1404,3.87,1405,3.87,1406,3.87,1407,3.87,1408,3.87,1520,4.441,1521,4.441,1522,4.441]],["title/components/NotFoundComponent.html",[107,0.642,322,1.334]],["body/components/NotFoundComponent.html",[3,0.121,4,0.135,5,0.094,7,0.35,9,0.866,20,1.247,23,0.844,26,0.013,27,0.971,28,0.512,33,2.017,56,0.135,58,0.177,77,0.149,78,0.043,87,1.424,104,0.006,105,0.008,106,0.006,107,0.971,108,1.303,109,2.027,110,1.511,111,1.511,112,1.511,113,1.511,117,1.258,118,2.224,119,2.191,120,1.816,122,1.816,124,1.122,130,2.866,158,1.094,159,0.892,166,1.258,182,3.106,194,1.351,195,1.455,196,1.703,197,2.278,198,2.754,200,1.943,201,4.11,207,3.271,208,2.265,209,3.348,210,2.402,220,2.754,231,3.348,232,2.402,237,2.562,238,2.562,239,2.562,260,2.562,273,2.402,279,1.943,295,2.402,300,0.955,301,2.027,302,2.106,303,0.955,304,2.622,305,1.511,306,1.511,307,1.258,308,1.303,309,1.511,310,1.303,311,2.027,312,2.106,313,1.303,314,2.167,315,1.511,316,1.258,317,1.511,318,1.303,319,0.7,320,2.432,321,1.511,322,2.182,323,1.511,324,1.214,325,1.351,326,1.511,327,1.303,328,1.258,329,1.258,330,1.511,331,1.258,332,2.106,333,1.303,334,1.511,335,1.258,336,1.133,337,2.106,338,1.258,339,1.997,340,1.258,341,1.214,342,1.351,343,1.303,344,1.214,345,1.258,346,1.511,347,1.511,348,1.214,349,1.511,350,1.214,351,1.511,352,1.258,353,1.455,354,1.511,529,1.703,575,3.721,588,3.271,606,3.233,607,3.317,608,2.995,612,3.317,613,3.317,614,2.995,615,2.039,616,3.317,617,3.317,618,3.317,619,2.995,620,2.995,621,4.174,622,2.402,623,2.402,624,3.317,708,4.174,1044,2.978,1250,3.317,1523,5.321,1524,3.317,1525,6.105,1526,5.304,1527,6.105,1528,3.806,1529,5.756,1530,3.839,1531,3.806,1532,5.304,1533,5.304,1534,5.304,1535,4.623,1536,5.304,1537,5.304,1538,5.304,1539,3.806]],["title/components/RetryDialogComponent.html",[107,0.642,324,1.288]],["body/components/RetryDialogComponent.html",[3,0.122,4,0.136,5,0.095,7,0.353,8,0.982,9,1.071,20,0.785,23,1.055,25,0.732,26,0.013,27,1.055,28,0.592,29,0.634,32,0.611,33,1.27,56,0.189,58,0.179,77,0.208,78,0.06,87,1.434,104,0.006,105,0.008,106,0.006,107,0.976,108,1.316,109,2.041,110,1.526,111,1.526,112,1.526,113,1.526,117,1.27,118,2.226,119,2.194,120,1.828,122,1.828,124,1.129,130,2.204,140,0.982,145,2.587,165,1.226,166,1.27,188,3.371,194,1.364,195,1.469,196,1.719,273,2.426,300,0.964,301,2.041,302,2.12,303,0.964,304,2.633,305,1.526,306,1.526,307,1.27,308,1.316,309,1.526,310,1.316,311,2.041,312,2.12,313,1.316,314,1.364,315,1.526,316,1.27,317,1.526,318,1.316,319,0.707,320,1.415,321,1.526,322,1.27,323,1.526,324,2.116,325,2.678,326,1.526,327,1.316,328,1.27,329,1.27,330,1.526,331,1.27,332,2.12,333,1.316,334,1.526,335,1.27,336,1.144,337,2.12,338,1.27,339,1.105,340,1.27,341,1.226,342,1.364,343,1.316,344,1.226,345,1.27,346,1.526,347,1.526,348,1.226,349,1.526,350,1.226,351,1.526,352,1.27,353,1.469,354,1.526,357,1.316,403,2.287,593,1.27,609,4.202,734,2.566,1540,5.044,1541,5.044,1542,3.024,1543,4.618,1544,5.349,1545,4.654,1546,5.219,1547,5.78,1548,3.843,1549,5.484,1550,5.044,1551,3.843,1552,3.843,1553,4.654,1554,3.843,1555,3.843,1556,3.349,1557,3.349,1558,4.132,1559,3.349,1560,3.349,1561,5.34,1562,5.34,1563,5.34,1564,5.34,1565,3.843,1566,5.34,1567,5.78,1568,5.34,1569,5.34,1570,5.34,1571,5.34,1572,5.34,1573,3.843,1574,3.843,1575,3.843]],["title/classes/RetryDialogData.html",[78,0.045,1550,2.922]],["body/classes/RetryDialogData.html",[3,0.175,4,0.195,5,0.136,7,0.506,9,0.958,23,1.074,26,0.013,28,0.652,29,1.258,33,2.232,56,0.239,58,0.256,77,0.264,78,0.076,104,0.009,105,0.011,106,0.009,107,1.074,118,1.477,119,1.477,120,1.883,122,1.883,124,1.428,140,1.011,165,1.754,324,1.754,325,2.595,403,4.351,553,2.683,593,2.232,734,2.025,1540,5.29,1541,5.29,1542,4.328,1543,3.274,1544,4.793,1545,4.793,1546,4.328,1547,4.793,1549,5.315,1550,5.29,1553,4.793,1556,4.793,1557,4.793,1558,4.921,1559,4.793,1560,4.793,1576,5.499,1577,5.499]],["title/modules/RetryDialogModule.html",[424,0.946,1578,2.718]],["body/modules/RetryDialogModule.html",[3,0.171,4,0.19,5,0.133,26,0.013,56,0.267,58,0.25,77,0.21,78,0.06,104,0.008,105,0.01,106,0.008,165,1.713,300,1.348,324,2.671,325,1.907,424,1.259,426,1.775,427,2.217,428,3.236,429,2.403,430,2.978,431,2.567,444,2.978,445,2.403,446,2.217,448,1.978,451,2.451,452,3.376,683,3.528,684,2.217,1465,5.234,1540,3.887,1541,3.887,1578,5.405,1579,4.681,1580,4.681,1581,4.681,1582,5.371,1583,6.656,1584,6.304,1585,5.371]],["title/components/RouteListComponent.html",[107,0.642,327,1.382]],["body/components/RouteListComponent.html",[3,0.113,4,0.126,5,0.088,7,0.327,8,0.929,9,0.998,23,1.119,25,0.963,26,0.013,27,1.077,28,0.618,29,0.834,32,0.804,56,0.126,58,0.165,77,0.139,78,0.04,80,1.057,87,2.021,104,0.006,105,0.008,106,0.006,107,0.935,108,1.216,109,1.931,110,1.41,111,1.41,112,1.41,113,1.41,117,1.174,118,2.209,119,2.173,120,1.73,122,1.73,124,1.069,134,1.793,140,0.653,158,1.021,159,0.832,166,1.174,169,1.216,182,2.986,194,1.261,195,1.357,196,1.589,197,1.525,203,3.095,208,3.5,219,2.848,266,0.922,269,2.848,279,1.814,290,3.657,300,0.891,301,1.931,302,2.006,303,0.891,304,2.543,305,1.41,306,1.41,307,1.174,308,1.216,309,1.41,310,1.216,311,1.931,312,2.006,313,1.216,314,2.625,315,1.41,316,1.174,317,1.41,318,1.216,319,0.653,320,1.308,321,1.41,322,1.174,323,1.41,324,1.133,325,1.261,326,1.41,327,2.193,328,1.174,329,1.174,330,1.41,331,1.174,332,2.006,333,1.216,334,1.41,335,1.174,336,1.057,337,2.006,338,1.174,339,1.021,340,1.174,341,1.133,342,1.261,343,1.216,344,1.133,345,1.174,346,1.41,347,1.41,348,1.133,349,1.41,350,1.133,351,1.41,352,1.174,353,1.357,354,1.41,486,4.256,493,1.16,567,3.723,634,3.007,640,2.707,655,2.002,660,1.41,688,2.795,689,5.125,690,4.403,691,5.125,693,3.095,705,5.125,706,3.095,708,3.976,709,3.976,712,4.403,713,2.795,714,2.795,716,3.095,719,3.007,726,3.976,734,2.165,784,2.57,785,2.795,786,2.795,787,2.57,1442,3.976,1586,6.306,1587,5.88,1588,5.052,1589,4.403,1590,3.552,1591,3.552,1592,3.552,1593,3.552,1594,3.552,1595,3.552,1596,3.552,1597,3.552,1598,5.052,1599,4.403,1600,4.403,1601,5.052,1602,5.052,1603,4.403,1604,5.052,1605,3.552,1606,5.052,1607,3.552,1608,3.552,1609,3.552,1610,3.552,1611,3.095,1612,3.552]],["title/components/RouteLoadingIndicatorComponent.html",[107,0.642,328,1.334]],["body/components/RouteLoadingIndicatorComponent.html",[3,0.113,4,0.126,5,0.088,7,0.328,8,0.932,9,1.069,20,0.728,23,1.078,25,0.679,26,0.013,27,1.021,28,0.489,29,0.588,32,0.806,56,0.209,58,0.166,68,0.704,77,0.198,78,0.057,79,1.035,87,2.023,104,0.006,105,0.008,106,0.006,107,0.937,108,1.221,109,1.936,110,1.415,111,1.415,112,1.415,113,1.415,115,1.315,116,3.158,117,1.178,118,2.21,119,2.174,120,1.735,122,1.735,124,1.072,131,3.438,140,1.247,148,1.88,153,1.735,158,1.025,159,1.589,166,1.178,182,2.091,192,3.151,194,1.266,195,1.363,196,1.595,197,1.531,219,2.01,238,2.401,239,2.401,260,2.401,295,2.251,300,0.895,301,1.936,302,2.011,303,0.895,304,2.547,305,1.415,306,1.415,307,1.178,308,1.221,309,1.415,310,1.221,311,1.936,312,2.011,313,1.221,314,1.266,315,1.415,316,1.178,317,1.415,318,1.221,319,0.656,320,1.313,321,1.415,322,1.178,323,1.415,324,1.137,325,1.266,326,1.415,327,1.221,328,2.24,329,2.663,330,1.415,331,1.178,332,2.011,333,1.221,334,1.415,335,1.178,336,1.061,337,2.011,338,1.178,339,1.025,340,1.178,341,1.137,342,1.266,343,1.221,344,1.137,345,1.178,346,1.415,347,1.415,348,1.137,349,1.415,350,1.137,351,1.415,352,1.178,353,1.363,354,1.415,400,3.618,493,1.163,562,1.025,629,2.17,633,2.363,651,2.593,658,1.735,773,2.806,775,5.049,835,2.471,959,1.313,961,1.363,1033,1.821,1060,2.122,1227,3.596,1392,3.667,1393,3.667,1428,3.987,1613,5.542,1614,2.806,1615,5.136,1616,4.415,1617,3.107,1618,5.066,1619,3.565,1620,3.565,1621,3.565,1622,4.415,1623,4.415,1624,2.58,1625,3.107,1626,4.415,1627,4.415,1628,4.415,1629,3.107,1630,3.107,1631,3.107,1632,3.107,1633,5.066,1634,5.066]],["title/classes/RouteLoadingSubscriber.html",[78,0.045,1624,2.922]],["body/classes/RouteLoadingSubscriber.html",[3,0.149,4,0.166,5,0.116,7,0.431,8,1.123,9,0.963,20,0.958,23,0.971,25,1.163,26,0.013,27,0.971,28,0.589,29,1.008,32,0.746,56,0.24,58,0.218,68,0.925,77,0.238,78,0.069,79,1.247,87,1.823,104,0.007,105,0.01,106,0.007,107,0.971,115,1.217,116,3.271,118,1.259,119,1.259,120,1.606,122,1.606,131,2.512,140,1.323,148,1.948,153,2.091,159,1.748,192,3.038,328,2.376,329,2.573,400,4.055,410,3.271,493,0.925,553,2.287,562,1.348,629,2.248,633,1.727,651,2.5,658,2.325,773,3.69,775,5.659,835,3.508,959,2.248,961,1.792,1033,2.394,1060,3.634,1227,3.467,1392,4.419,1393,4.419,1428,3.69,1613,5.343,1614,3.69,1615,4.087,1616,4.087,1622,5.321,1623,5.321,1624,4.419,1625,5.321,1626,5.321,1627,5.321,1628,5.321,1629,4.087,1630,4.087,1631,4.087,1632,4.087,1635,4.689,1636,4.689,1637,4.689,1638,4.087]],["title/classes/RoutesSubscriber.html",[78,0.045,958,2.922]],["body/classes/RoutesSubscriber.html",[1,2.241,3,0.112,4,0.125,5,0.087,7,0.325,8,0.926,9,1.095,20,0.722,23,0.801,25,0.959,26,0.014,27,0.801,28,0.341,29,0.831,32,0.562,56,0.27,58,0.164,68,0.697,74,2.231,77,0.196,78,0.057,79,0.722,80,0.583,94,3.959,104,0.006,105,0.008,106,0.006,115,0.917,118,0.949,130,1.458,140,1.175,148,1.127,153,1.21,200,1.804,213,1.168,266,0.917,303,1.263,319,0.65,348,2.039,398,1.875,400,1.992,410,2.697,441,2.442,443,2.638,475,1.724,493,1.333,516,1.498,526,1.127,529,1.581,538,1.724,543,1.052,546,1.992,553,1.724,567,1.724,575,1.893,595,1.854,596,4.034,606,1.518,629,1.854,633,1.301,648,2.838,651,1.854,655,1.992,658,2.008,659,3.961,660,1.403,805,2.379,830,2.35,911,3.142,912,4.614,913,4.244,914,2.231,915,2.252,916,3.08,917,3.08,918,2.379,919,3.08,920,3.08,921,2.557,922,1.581,924,2.231,925,2.571,926,2.571,933,3.08,935,3.08,936,3.08,937,2.571,940,2.231,946,1.65,947,1.458,948,1.804,949,3.08,950,2.231,951,2.781,952,2.557,953,3.08,954,1.804,955,1.804,956,2.35,957,2.781,958,3.643,959,2.159,960,4.387,961,1.351,962,4.387,963,3.08,964,2.781,965,2.781,966,3.08,967,3.08,968,2.379,969,2.379,970,4.387,971,3.08,972,3.08,973,3.08,974,3.08,975,3.08,976,3.08,977,3.08,978,3.08,979,3.08,980,1.992,981,3.08,982,1.992,983,3.08,984,3.08,985,3.08,986,3.08,987,2.379,988,2.557,989,2.781,990,2.781,991,2.781,992,2.781,993,2.781,994,1.992,995,2.557,996,2.781,997,2.781,998,2.781,999,3.08,1000,4.387,1001,3.08,1002,3.08,1003,2.781,1004,3.389,1005,2.781,1006,2.781,1007,3.643,1008,2.379,1009,3.08,1010,3.08,1011,2.379,1012,3.961,1013,2.379,1014,2.781,1015,3.961,1016,1.804,1017,2.781,1018,2.379,1019,3.08,1020,2.557,1021,2.781,1022,2.379,1023,2.379,1024,2.379,1025,2.781,1026,2.379,1027,2.379,1028,3.08,1029,3.08,1030,2.557,1031,3.08,1032,3.08,1033,1.804,1034,3.08,1035,2.379,1036,3.08,1639,3.534,1640,3.534,1641,3.08]],["title/components/SearchComponent.html",[107,0.642,331,1.334]],["body/components/SearchComponent.html",[3,0.101,4,0.113,5,0.079,7,0.293,8,0.859,9,1.084,20,0.651,23,1.114,25,0.607,26,0.013,27,0.968,28,0.588,29,0.526,32,0.743,33,1.052,37,1.876,56,0.248,58,0.148,65,1.052,66,1.016,67,1.052,68,0.628,77,0.124,78,0.036,79,0.651,80,0.912,87,1.254,99,1.425,104,0.005,105,0.007,106,0.011,107,0.879,108,1.09,109,1.784,110,1.264,111,1.264,112,1.264,113,1.264,115,1.212,116,2.962,117,1.052,118,2.183,119,2.141,120,1.599,122,1.599,124,0.987,130,2.513,131,3.262,134,1.657,140,1.12,158,1.342,159,1.094,166,1.052,182,3.024,191,1.895,194,1.13,195,1.217,196,2.474,199,3.722,204,4.001,211,2.506,213,1.052,231,4.092,232,2.947,236,4.791,237,2.144,256,1.367,257,2.775,278,3.379,279,1.626,281,2.775,300,0.799,301,1.784,302,1.853,303,0.799,304,2.417,305,1.264,306,1.264,307,1.052,308,1.09,309,1.264,310,1.09,311,1.784,312,1.853,313,1.09,314,2.549,315,1.264,316,1.052,317,1.264,318,1.09,319,0.859,320,1.172,321,1.264,322,1.052,323,1.264,324,1.016,325,1.13,326,1.264,327,1.09,328,1.052,329,1.052,330,1.264,331,2.012,332,1.853,333,1.09,334,1.264,335,1.052,336,0.948,337,1.853,338,1.052,339,0.915,340,1.052,341,1.016,342,1.13,343,1.09,344,1.016,345,1.052,346,1.264,347,1.264,348,1.016,349,1.264,350,1.016,351,1.264,352,1.052,353,1.217,354,1.264,385,2.144,457,2.506,493,1.381,526,1.016,562,0.915,584,2.502,606,2.005,615,1.706,629,2.036,633,2.242,651,2.036,719,3.624,734,2.387,969,3.143,1139,4.561,1253,2.502,1530,3.379,1642,2.775,1643,5.528,1644,4.669,1645,5.528,1646,5.528,1647,2.775,1648,5.528,1649,4.669,1650,3.184,1651,3.184,1652,3.184,1653,5.528,1654,3.184,1655,3.184,1656,3.184,1657,4.669,1658,4.669,1659,3.184,1660,3.184,1661,4.669,1662,4.669,1663,3.184,1664,3.184,1665,3.184,1666,4.669,1667,3.184,1668,4.669,1669,4.069,1670,3.184,1671,4.669,1672,4.069,1673,4.069,1674,4.069,1675,4.669,1676,3.184,1677,2.775,1678,3.184,1679,3.184]],["title/modules/SearchModule.html",[424,0.946,1680,2.922]],["body/modules/SearchModule.html",[3,0.172,4,0.192,5,0.134,26,0.013,56,0.281,58,0.252,77,0.212,78,0.061,104,0.009,105,0.011,106,0.009,165,1.73,300,1.361,331,2.623,424,1.271,426,1.792,427,2.239,428,3.25,429,2.427,430,2.996,431,1.925,444,2.996,445,2.427,446,2.239,448,2.466,451,2.466,452,3.126,465,3.424,584,3.588,683,3.266,684,2.239,905,4.227,1680,5.881,1681,4.727,1682,4.727,1683,4.727,1684,5.344,1685,5.424,1686,4.508,1687,4.727,1688,4.727]],["title/guards/SearchResultResolver.html",[1686,2.718,1689,2.718]],["body/guards/SearchResultResolver.html",[0,1.984,3,0.162,4,0.18,5,0.126,7,0.468,8,1.184,9,1.086,20,1.041,23,1.024,25,1.227,26,0.013,27,1.024,28,0.622,29,1.063,32,0.81,37,2.175,56,0.276,58,0.237,65,1.683,66,1.625,67,1.683,68,1.005,77,0.199,78,0.057,79,1.041,80,0.841,87,1.368,104,0.008,105,0.01,106,0.008,115,1.322,319,0.937,339,1.465,442,3.788,473,3.43,526,1.625,562,1.465,584,2.73,948,2.602,1100,3.033,1236,4.66,1253,3.783,1342,4.009,1686,4.335,1690,3.43,1691,5.556,1692,4.44,1693,3.788,1694,5.095,1695,5.095,1696,4.66,1697,5.369,1698,5.11,1699,5.369,1700,5.095,1701,5.095,1702,3.43,1703,5.095,1704,5.095,1705,5.095,1706,5.095,1707,5.095,1708,5.095,1709,4.44]],["title/modules/SearchRoutingModule.html",[424,0.946,1684,2.718]],["body/modules/SearchRoutingModule.html",[3,0.183,4,0.204,5,0.143,26,0.014,56,0.274,58,0.268,77,0.225,78,0.065,104,0.009,105,0.011,106,0.011,107,0.917,331,2.296,398,1.496,426,1.904,431,2.046,448,2.122,451,2.559,562,1.657,565,3.638,566,4.136,567,3.389,575,3.088,584,3.088,1684,4.678,1686,4.678,1687,5.023,1688,5.023,1691,4.535,1693,2.943,1710,4.171,1711,5.763,1712,5.763,1713,4.171]],["title/classes/SettingsLoadSubscriber.html",[78,0.045,1714,2.922]],["body/classes/SettingsLoadSubscriber.html",[0,1.773,1,2.483,3,0.136,4,0.152,5,0.106,7,0.394,8,1.059,9,1.143,20,0.876,23,1.033,25,1.097,26,0.014,27,0.916,28,0.556,29,0.95,32,0.916,37,1.773,56,0.264,58,0.199,59,5.699,65,1.417,66,1.368,67,1.417,68,0.846,75,2.19,76,2.092,77,0.225,78,0.065,79,1.176,80,1.257,94,3.245,104,0.007,105,0.009,106,0.007,140,1.49,159,1.005,266,1.113,319,0.789,357,1.971,409,3.375,410,2.298,411,3.375,412,3.375,441,1.639,478,3.104,493,0.846,514,3.876,516,1.933,526,1.368,539,2.298,543,1.276,553,2.092,559,2.888,560,3.104,593,1.417,658,2.225,946,2.002,947,1.77,959,2.12,961,1.639,1033,2.19,1075,2.298,1141,1.919,1326,2.418,1693,2.939,1714,4.166,1715,3.375,1716,5.025,1717,4.289,1718,5.662,1719,4.289,1720,4.289,1721,4.166,1722,4.289,1723,3.104,1724,3.104,1725,5.017,1726,3.738,1727,3.738,1728,5.017,1729,3.738,1730,3.738,1731,5.017,1732,3.738,1733,5.017,1734,3.738,1735,3.738,1736,3.738,1737,5.017,1738,3.738,1739,3.738,1740,3.738,1741,3.738,1742,3.738,1743,3.375,1744,3.738]],["title/injectables/SettingsService.html",[0,1.244,441,1.543]],["body/injectables/SettingsService.html",[0,1.737,1,2.824,2,2.346,3,0.132,4,0.147,5,0.103,7,0.383,8,1.037,9,1.144,13,3.626,20,0.85,23,1.175,25,0.793,26,0.014,27,0.662,28,0.544,29,0.687,32,1.018,37,1.737,56,0.261,58,0.193,59,5.815,65,1.375,66,1.327,67,1.375,68,0.821,75,2.124,76,2.029,77,0.22,78,0.063,79,1.152,80,1.247,94,3.179,104,0.007,105,0.009,106,0.007,124,1.193,134,2.002,140,1.433,158,1.196,159,1.322,266,1.08,319,0.765,409,3.274,410,2.229,411,3.274,412,3.274,441,2.155,478,4.081,493,1.262,514,2.801,516,1.904,526,1.327,539,2.229,543,1.678,559,4.617,593,1.863,658,1.931,946,1.942,947,1.717,959,1.532,961,1.59,1033,2.124,1075,3.428,1141,1.862,1326,2.346,1693,2.124,1714,3.011,1715,3.274,1716,3.011,1718,4.915,1721,3.011,1723,3.011,1724,3.011,1725,4.915,1726,3.626,1727,5.575,1728,4.915,1729,5.977,1730,4.915,1731,4.915,1732,3.626,1733,4.915,1734,3.626,1735,3.626,1736,5.977,1737,4.915,1738,3.626,1739,3.626,1740,3.626,1741,3.626,1742,3.626,1743,3.274,1744,3.626,1745,4.16,1746,5.639,1747,4.16,1748,4.16,1749,4.16,1750,4.16]],["title/components/SidebarComponent.html",[107,0.642,333,1.382]],["body/components/SidebarComponent.html",[3,0.23,4,0.19,5,0.075,7,0.279,8,0.829,9,1.045,20,0.621,23,1.011,25,0.579,26,0.013,27,0.947,28,0.293,29,0.501,32,1.06,33,1.966,56,0.19,58,0.25,69,2.045,77,0.119,78,0.034,79,0.621,80,0.744,87,1.211,99,1.359,104,0.005,105,0.007,106,0.005,107,0.855,108,1.04,109,1.723,110,1.206,111,1.206,112,1.206,113,1.206,117,1.004,118,2.172,119,2.164,120,1.544,122,1.544,134,1.601,136,2.39,137,3.965,140,1.094,166,1.004,178,2.647,182,3.398,187,3.93,188,3.395,191,3.201,194,1.078,195,1.161,196,1.359,205,2.39,207,2.416,208,2.684,209,1.917,214,1.917,215,2.39,218,2.198,221,2.647,242,2.39,245,2.647,266,1.17,292,3.93,293,2.39,296,2.045,299,2.39,300,0.762,301,1.723,302,1.79,303,0.762,304,2.362,305,1.206,306,1.206,307,1.004,308,1.04,309,1.206,310,1.04,311,1.723,312,1.79,313,1.04,314,2.812,315,1.206,316,1.004,317,1.206,318,1.04,319,0.559,320,1.118,321,1.206,322,1.004,323,1.206,324,0.969,325,1.078,326,1.206,327,1.04,328,1.004,329,1.004,330,1.206,331,1.004,332,1.79,333,2.038,334,1.206,335,1.004,336,0.904,337,1.79,338,1.004,339,1.828,340,1.004,341,0.969,342,1.078,343,1.04,344,0.969,345,1.004,346,1.206,347,1.206,348,0.969,349,1.206,350,0.969,351,1.206,352,1.004,353,1.161,354,1.206,383,3.263,516,1.342,588,2.416,606,2.556,719,4.383,1042,5.234,1043,4.991,1154,2.198,1395,2.39,1431,2.647,1437,3.93,1442,3.548,1443,2.647,1529,5.805,1530,3.263,1535,6.592,1558,3.036,1567,3.93,1600,3.93,1603,6.592,1751,2.647,1752,5.378,1753,4.509,1754,5.187,1755,5.951,1756,6.661,1757,3.037,1758,3.037,1759,3.037,1760,2.198,1761,3.037,1762,3.93,1763,4.232,1764,3.037,1765,3.037,1766,3.037,1767,3.037,1768,3.037,1769,3.037,1770,4.509,1771,4.509,1772,4.509,1773,6.592,1774,4.509,1775,4.509,1776,4.509,1777,4.509,1778,4.509,1779,4.509,1780,4.683,1781,4.509,1782,4.509,1783,3.037,1784,3.037,1785,3.037,1786,3.037,1787,3.037,1788,3.037]],["title/modules/SidebarModule.html",[424,0.946,440,2.548]],["body/modules/SidebarModule.html",[3,0.173,4,0.192,5,0.135,26,0.013,56,0.269,58,0.253,77,0.212,78,0.061,104,0.009,105,0.011,106,0.009,165,1.734,300,1.363,333,2.851,424,1.274,426,1.796,427,2.243,428,3.253,429,2.432,430,3,431,2.581,440,5.08,444,3,445,2.432,446,2.243,448,2.001,451,2.469,452,3.394,683,3.546,684,2.243,905,4.59,1465,5.262,1466,6.337,1789,4.737,1790,4.737,1791,4.737,1792,5.435,1793,5.435]],["title/injectables/SidebarService.html",[0,1.244,137,2.403]],["body/injectables/SidebarService.html",[0,1.965,2,2.831,3,0.16,4,0.178,5,0.124,7,0.462,8,1.173,9,1.174,20,1.433,23,1.258,26,0.013,28,0.485,32,1.115,37,1.965,56,0.226,58,0.233,68,0.991,75,2.564,76,2.449,77,0.196,78,0.056,80,1.053,104,0.008,105,0.01,106,0.008,124,1.349,133,5.34,134,2.265,137,3.798,140,1.432,158,1.444,159,1.177,169,1.719,493,1.384,516,1.899,648,3.954,1754,6.431,1794,4.376,1795,7.013,1796,5.807,1797,7.013,1798,7.013,1799,6.38,1800,5.021,1801,5.021,1802,5.021,1803,6.38,1804,5.021,1805,5.021,1806,5.021,1807,5.021,1808,5.021,1809,5.021,1810,5.021,1811,5.021,1812,5.021]],["title/components/StopInfoComponent.html",[107,0.642,335,1.334]],["body/components/StopInfoComponent.html",[1,2.34,3,0.139,4,0.077,5,0.054,7,0.201,8,0.643,9,1.117,15,1.905,20,0.447,23,1.183,25,0.833,26,0.014,27,0.927,28,0.649,29,0.722,32,0.795,33,1.806,37,1.886,44,4.22,56,0.217,58,0.102,62,5.006,65,0.722,66,0.697,67,0.722,68,0.431,77,0.085,78,0.025,79,0.447,80,0.962,87,1.566,104,0.003,105,0.006,106,0.003,107,0.695,108,0.748,109,1.337,110,0.868,111,0.868,112,0.868,113,0.868,115,0.908,117,0.722,118,2.078,119,2.088,120,1.198,122,1.198,124,0.74,134,1.242,140,1.072,148,1.395,153,0.748,158,1.676,159,1.367,166,0.722,182,2.406,191,1.301,194,0.776,195,0.835,201,2.355,207,1.171,213,0.722,214,1.38,218,2.531,266,1.419,279,1.116,290,3.164,294,3.048,296,1.472,300,0.548,301,1.337,302,1.389,303,0.548,304,1.984,305,0.868,306,0.868,307,0.722,308,0.748,309,0.868,310,0.748,311,1.91,312,1.389,313,0.748,314,0.776,315,0.868,316,0.722,317,0.868,318,0.748,319,0.919,320,2.254,321,0.868,322,0.722,323,0.868,324,0.697,325,1.552,326,0.868,327,0.748,328,0.722,329,0.722,330,0.868,331,0.722,332,1.389,333,0.748,334,0.868,335,1.651,336,2.045,337,1.389,338,0.722,339,0.628,340,0.722,341,0.697,342,0.776,343,0.748,344,0.697,345,0.722,346,0.868,347,0.868,348,0.697,349,0.868,350,0.697,351,0.868,352,0.722,353,0.835,354,0.868,357,1.198,359,0.902,398,1.297,407,2.355,415,1.444,442,2.552,473,1.472,493,1.467,524,1.066,526,0.697,538,1.066,543,1.627,562,0.628,567,2.133,593,2.223,595,1.288,608,3.441,609,3.441,622,2.208,623,2.208,629,1.61,632,3.164,633,1.84,640,3.281,651,2.013,656,1.582,657,2.944,666,1.582,668,3.048,671,3.811,674,3.048,675,1.582,719,1.301,726,2.752,734,2.416,784,1.582,785,1.72,786,1.72,787,1.582,857,2.752,915,1.956,922,2.236,948,1.116,969,2.355,1044,2.844,1139,3.365,1141,0.978,1143,1.232,1154,1.582,1162,3.617,1205,1.72,1236,3.164,1253,2.929,1326,1.232,1494,1.905,1496,1.905,1589,3.048,1611,3.048,1702,1.472,1743,1.72,1813,5.048,1814,1.72,1815,3.811,1816,3.048,1817,4.372,1818,4.372,1819,4.372,1820,4.372,1821,3.811,1822,4.372,1823,4.372,1824,3.498,1825,4.372,1826,3.811,1827,1.905,1828,3.498,1829,2.186,1830,3.498,1831,3.498,1832,3.498,1833,3.498,1834,2.186,1835,2.186,1836,3.498,1837,2.186,1838,2.186,1839,2.186,1840,3.498,1841,3.498,1842,4.997,1843,2.186,1844,1.905,1845,2.186,1846,3.048,1847,2.186,1848,4.372,1849,3.498,1850,3.498,1851,2.186,1852,2.186,1853,2.186,1854,2.186,1855,2.186,1856,1.905,1857,2.186,1858,2.186,1859,4.372,1860,2.186,1861,4.372,1862,2.186,1863,2.186,1864,2.186,1865,3.498,1866,2.186,1867,2.186,1868,4.372,1869,2.186,1870,1.582,1871,3.498,1872,2.186,1873,2.186,1874,2.186,1875,2.186,1876,2.186,1877,2.186,1878,2.186,1879,2.186,1880,2.186,1881,2.186,1882,2.186,1883,2.186,1884,2.186,1885,3.498,1886,2.186,1887,2.186,1888,2.186,1889,2.186,1890,2.186,1891,2.186,1892,2.186,1893,2.186,1894,3.498,1895,3.498,1896,3.498,1897,3.498,1898,4.997,1899,2.186,1900,4.372,1901,3.498,1902,3.498,1903,4.997,1904,4.997,1905,3.498,1906,3.498,1907,3.498,1908,2.186,1909,3.048,1910,3.498,1911,2.186,1912,1.905,1913,2.186,1914,2.186,1915,2.186,1916,2.186,1917,2.186,1918,2.186,1919,2.186]],["title/guards/StopInfoResolver.html",[1689,2.718,1920,2.718]],["body/guards/StopInfoResolver.html",[0,1.805,1,2.793,3,0.14,4,0.156,5,0.109,7,0.405,8,1.078,9,1.037,20,1.345,23,0.932,25,1.117,26,0.014,27,0.932,28,0.566,29,0.967,32,0.701,37,2.028,44,5.08,56,0.271,57,2.781,58,0.205,62,3.467,65,1.456,66,2.239,67,1.456,68,0.869,77,0.172,78,0.05,79,0.9,80,0.967,87,2.018,104,0.007,105,0.009,106,0.007,115,1.143,192,3.528,336,2.089,339,1.685,359,2.718,370,3.945,415,3.101,416,5.107,493,0.869,526,1.405,562,1.267,563,3.945,697,3.945,728,4.241,1141,1.971,1143,2.484,1148,4.157,1209,2.966,1690,2.966,1693,3.584,1696,4.241,1697,5.08,1698,5.08,1699,5.08,1762,5.107,1813,4.433,1920,3.945,1921,3.839,1922,6.117,1923,7.019,1924,5.86,1925,5.86,1926,5.86,1927,3.188,1928,4.405,1929,4.405,1930,5.86,1931,5.107,1932,5.86,1933,3.839,1934,4.405,1935,3.467,1936,4.405]],["title/directives/StopLocationMapDirective.html",[303,1.013,352,1.334]],["body/directives/StopLocationMapDirective.html",[3,0.111,4,0.123,5,0.086,7,0.321,8,0.917,9,1.079,20,0.713,23,1.192,25,0.951,26,0.014,27,0.793,28,0.613,29,0.823,32,1.011,37,1.537,56,0.265,58,0.162,65,1.153,66,1.113,67,1.153,68,0.689,74,2.202,77,0.136,78,0.039,80,0.576,94,3.582,104,0.006,105,0.008,106,0.006,115,1.295,117,1.153,118,1.34,124,1.055,130,1.44,134,1.771,140,1.286,148,1.113,153,1.195,158,1.434,159,1.169,200,1.782,303,1.594,319,0.917,344,1.113,352,1.648,353,1.907,359,1.44,398,1.295,400,1.967,441,2.813,443,3.038,475,1.702,493,1.5,504,3.359,516,1.733,543,1.485,546,1.967,595,2.759,606,1.499,629,2.144,632,4.214,633,2.34,634,2.97,648,3.283,651,2.144,655,1.967,660,1.385,666,4.214,675,2.525,684,1.44,830,2.966,914,2.202,915,2.605,918,3.92,922,2.843,924,3.149,925,3.245,926,3.245,928,1.967,937,2.973,940,3.149,944,3.041,945,3.041,946,1.629,947,1.44,951,2.746,954,1.782,955,1.782,956,2.329,957,2.746,959,1.285,964,2.746,965,2.746,968,2.349,987,2.349,989,2.746,990,2.746,991,2.746,992,2.746,993,2.746,994,1.967,995,2.525,996,2.746,997,2.746,998,2.746,1003,2.746,1004,3.359,1005,2.746,1006,2.746,1012,2.746,1013,2.349,1014,2.746,1015,3.926,1016,1.782,1017,2.746,1018,2.349,1021,2.746,1022,2.349,1023,2.349,1024,2.349,1025,2.746,1026,2.349,1027,2.349,1035,2.349,1150,3.926,1162,3.61,1253,2.673,1254,2.349,1813,5.118,1821,4.348,1937,5.823,1938,6.354,1939,5.823,1940,4.989,1941,4.989,1942,3.489,1943,3.489,1944,3.489,1945,3.489,1946,3.489,1947,3.489,1948,3.489,1949,3.489,1950,4.348,1951,3.041,1952,3.489]],["title/modules/StopModule.html",[424,0.946,1953,2.922]],["body/modules/StopModule.html",[3,0.15,4,0.167,5,0.117,26,0.014,56,0.287,58,0.219,77,0.184,78,0.053,87,1.266,104,0.007,105,0.01,106,0.007,165,1.503,300,1.182,308,1.614,310,2.621,311,2.341,313,2.621,314,1.673,327,2.621,335,2.53,336,2.144,352,2.53,424,1.105,426,1.557,427,1.945,428,3.045,429,2.109,430,2.741,431,1.673,444,2.741,445,2.109,446,1.945,448,2.256,451,2.256,452,2.86,465,2.975,683,2.988,684,1.945,905,3.867,1369,3.709,1468,4.821,1515,4.833,1920,4.124,1953,6.044,1954,4.107,1955,4.107,1956,4.107,1957,5.154,1958,4.713,1959,5.339,1960,6.126,1961,4.713,1962,6.126,1963,3.411,1964,4.107]],["title/classes/StopPointLoadSubscriber.html",[78,0.045,1965,2.922]],["body/classes/StopPointLoadSubscriber.html",[0,1.594,1,1.978,3,0.117,4,0.13,5,0.091,7,0.338,8,0.952,9,1.143,20,0.751,23,1.034,25,1.141,26,0.014,27,1.034,28,0.578,29,0.989,32,0.953,33,1.71,37,2.368,56,0.252,58,0.171,65,1.214,66,1.651,67,1.214,68,0.725,75,1.876,76,1.792,77,0.202,78,0.058,79,1.057,80,1.252,104,0.006,105,0.008,106,0.006,119,0.987,140,1.308,148,1.172,159,0.861,319,0.676,336,2.174,339,1.722,357,1.772,374,2.891,375,2.643,382,4.714,396,2.659,398,0.954,410,2.773,415,2.136,442,3.321,493,1.283,514,2.474,515,3.059,516,1.093,524,2.524,525,2.072,526,1.172,538,2.922,539,1.969,543,2.04,553,1.792,595,1.353,658,2.051,729,2.891,752,2.891,948,1.876,959,1.906,961,1.404,1141,1.644,1144,2.319,1167,2.659,1253,4.165,1326,2.918,1702,4.615,1716,4.707,1721,3.745,1723,2.659,1724,2.659,1870,2.659,1965,3.745,1966,2.891,1967,3.674,1968,3.674,1969,3.674,1970,3.674,1971,4.51,1972,3.674,1973,3.202,1974,3.202,1975,3.202,1976,3.202,1977,2.891,1978,3.202,1979,3.202,1980,3.202,1981,3.202,1982,3.202,1983,3.202,1984,3.202,1985,3.202,1986,3.202,1987,3.202,1988,3.202,1989,3.202,1990,3.202,1991,5.221,1992,3.202,1993,3.202,1994,3.202,1995,5.975,1996,3.202,1997,3.202,1998,4.51,1999,3.202,2000,3.202,2001,3.202,2002,3.202,2003,3.202,2004,3.202,2005,3.202,2006,3.202,2007,3.202,2008,3.202,2009,5.221,2010,3.202]],["title/injectables/StopPointService.html",[0,1.244,442,2.062]],["body/injectables/StopPointService.html",[0,1.474,1,2.365,2,1.857,3,0.105,4,0.117,5,0.082,7,0.303,8,0.88,9,1.118,20,0.673,23,1.175,25,1.074,26,0.014,27,1.045,28,0.662,29,0.93,32,0.984,33,2.265,37,2.427,56,0.243,58,0.153,65,1.088,66,1.798,67,1.088,68,0.65,75,1.682,76,1.607,77,0.187,78,0.054,79,0.978,80,1.22,104,0.005,105,0.008,106,0.005,119,0.885,124,1.012,134,1.699,140,1.037,148,1.051,158,1.376,159,1.321,319,0.606,336,2.263,339,1.621,359,2.326,374,4.436,375,3.159,382,4.436,396,2.384,398,0.855,415,1.975,442,2.879,493,1.481,515,3.356,516,1.424,524,2.334,525,1.857,526,1.051,538,2.75,539,1.765,543,2.157,595,1.762,658,1.639,729,2.592,752,3.766,948,1.682,959,1.213,961,1.259,1141,1.474,1144,3.021,1167,3.464,1253,4.074,1326,2.698,1702,5.053,1716,2.384,1721,2.384,1723,2.384,1724,2.384,1870,2.384,1927,2.384,1965,2.384,1966,2.592,1971,2.871,1973,2.871,1974,2.871,1975,2.871,1976,4.171,1977,3.766,1978,4.171,1979,4.913,1980,4.913,1981,4.913,1982,5.392,1983,2.871,1984,2.871,1985,2.871,1986,2.871,1987,2.871,1988,2.871,1989,2.871,1990,2.871,1991,4.913,1992,2.871,1993,4.913,1994,4.171,1995,6.317,1996,4.171,1997,2.871,1998,4.171,1999,4.171,2000,4.171,2001,4.171,2002,4.171,2003,2.871,2004,2.871,2005,2.871,2006,2.871,2007,4.171,2008,4.913,2009,4.913,2010,2.871,2011,4.786,2012,4.786,2013,4.786,2014,3.294,2015,3.294,2016,3.294,2017,3.294,2018,3.294,2019,3.294,2020,3.294,2021,3.294,2022,3.294]],["title/modules/StopRoutingModule.html",[424,0.946,1957,2.718]],["body/modules/StopRoutingModule.html",[3,0.182,4,0.202,5,0.141,26,0.014,44,4.136,56,0.273,58,0.266,77,0.223,78,0.064,104,0.009,105,0.011,106,0.009,107,0.909,153,1.957,335,2.285,336,2.057,398,1.483,426,1.888,431,2.029,448,2.104,451,2.546,562,1.643,565,3.608,566,4.116,567,3.372,575,3.062,734,2.104,1693,2.918,1710,4.136,1713,4.136,1796,4.497,1813,3.848,1826,4.981,1920,4.655,1957,4.655,1963,4.136,1964,4.981]],["title/components/StopsInfoComponent.html",[107,0.642,338,1.334]],["body/components/StopsInfoComponent.html",[3,0.185,4,0.123,5,0.086,7,0.535,8,0.917,9,0.901,20,0.712,23,1.01,25,0.95,26,0.013,27,1.069,28,0.562,29,0.823,32,0.926,56,0.225,58,0.162,65,1.151,66,1.112,67,1.151,77,0.136,78,0.039,79,0.712,80,0.823,87,1.338,104,0.005,105,0.008,106,0.005,107,0.926,108,1.193,109,1.905,110,1.383,111,1.383,112,1.383,113,1.383,117,1.151,118,2.204,119,2.167,120,1.707,122,1.707,124,1.054,134,1.769,158,1.002,159,0.817,166,1.151,169,1.707,182,3.137,191,2.074,194,1.237,195,1.332,199,2.346,204,2.522,205,3.922,206,3.037,207,1.867,211,2.742,213,1.647,214,2.2,231,4.009,236,2.742,266,0.904,269,2.81,277,2.742,278,2.522,279,1.779,300,0.874,301,1.905,302,1.979,303,0.874,304,2.521,305,1.383,306,1.383,307,1.151,308,1.193,309,1.383,310,1.193,311,1.905,312,1.979,313,1.193,314,2.481,315,1.383,316,1.151,317,1.383,318,1.193,319,0.641,320,1.283,321,1.383,322,1.151,323,1.383,324,1.112,325,1.237,326,1.383,327,1.193,328,1.151,329,1.151,330,1.383,331,1.151,332,1.979,333,1.193,334,1.383,335,1.151,336,1.037,337,1.979,338,2.098,339,2.27,340,1.151,341,1.112,342,1.237,343,1.193,344,1.112,345,1.151,346,1.383,347,1.383,348,1.112,349,1.383,350,1.112,351,1.383,352,1.151,353,1.332,354,1.383,383,2.522,398,0.904,493,1.148,505,3.607,562,1.002,593,1.923,606,2.141,719,2.967,857,2.742,969,3.356,1100,2.074,1139,4.705,1253,3.745,1530,3.607,1599,4.344,1647,3.037,1672,4.344,1673,4.344,1674,4.344,1677,3.037,1709,3.037,1814,2.742,1815,5.071,1816,4.344,1844,3.037,1856,3.037,2023,5.287,2024,5.819,2025,4.984,2026,4.984,2027,4.984,2028,6.35,2029,3.485,2030,4.984,2031,3.485,2032,4.984,2033,3.485,2034,3.485,2035,3.485,2036,4.984,2037,4.984,2038,4.984,2039,4.984,2040,4.984,2041,4.984,2042,3.485,2043,4.984,2044,4.984,2045,4.984,2046,3.485]],["title/modules/StopsModule.html",[424,0.946,2047,2.922]],["body/modules/StopsModule.html",[3,0.163,4,0.182,5,0.127,26,0.013,56,0.281,58,0.239,77,0.201,78,0.058,104,0.008,105,0.01,106,0.008,165,1.64,300,1.29,338,2.588,339,2.14,359,2.122,424,1.662,426,1.699,427,2.122,428,3.173,429,2.301,430,2.898,431,1.825,444,2.898,445,2.301,446,2.122,448,2.385,451,2.385,452,3.024,465,3.246,683,3.159,684,2.122,905,4.089,1144,4.089,1543,3.061,1578,5.274,1584,5.645,1963,3.721,2047,5.916,2048,4.481,2049,4.481,2050,4.481,2051,5.274,2052,5.142,2053,6.477,2054,4.481,2055,4.361,2056,4.481]],["title/guards/StopsResolver.html",[1689,2.718,2055,2.718]],["body/guards/StopsResolver.html",[0,1.759,1,2.757,3,0.135,4,0.15,5,0.105,7,0.39,8,1.05,9,1.024,14,3.693,20,1.319,23,0.908,25,1.088,26,0.014,27,0.908,28,0.551,29,0.942,32,0.908,37,2.289,56,0.28,57,2.674,58,0.197,61,3.693,65,1.4,66,2.204,67,1.4,68,0.836,77,0.165,78,0.048,79,0.866,80,1.066,87,1.533,104,0.007,105,0.009,106,0.007,115,1.1,165,1.352,192,3.5,324,1.352,359,2.665,370,4.347,379,6.022,403,2.522,415,2.665,493,1.127,526,1.352,543,1.261,562,1.218,563,3.844,588,2.27,734,1.56,1141,1.896,1143,2.389,1148,2.674,1209,2.852,1543,4.113,1558,2.852,1690,2.852,1693,3.528,1696,4.132,1697,5,1698,5.377,1699,5,1922,6.022,1927,3.066,1931,4.975,1933,3.693,1935,3.334,2054,3.693,2055,3.844,2057,3.693,2058,5.709,2059,5.709,2060,6.909,2061,4.237,2062,4.237,2063,5.709,2064,5.709,2065,5.709,2066,4.237,2067,4.237,2068,3.334,2069,3.066,2070,4.237,2071,4.237,2072,4.237,2073,4.237,2074,4.237,2075,4.237,2076,5.709,2077,3.693]],["title/modules/StopsRoutingModule.html",[424,0.946,2051,2.718]],["body/modules/StopsRoutingModule.html",[3,0.184,4,0.205,5,0.143,26,0.014,56,0.274,58,0.269,77,0.226,78,0.065,104,0.009,105,0.011,106,0.009,107,0.92,338,2.302,339,2.003,398,1.502,426,1.912,431,2.054,448,2.131,451,2.565,562,1.664,565,3.653,566,4.147,567,3.398,575,3.101,1693,2.955,1710,4.188,1713,4.188,1963,4.188,2023,4.554,2051,4.69,2055,4.69,2056,5.044]],["title/components/ToolbarSearchBoxComponent.html",[107,0.642,340,1.334]],["body/components/ToolbarSearchBoxComponent.html",[3,0.103,4,0.115,5,0.08,7,0.298,8,0.869,9,1.122,20,0.661,23,1.17,25,0.617,26,0.013,27,0.976,28,0.592,29,0.534,32,0.976,33,1.561,56,0.231,58,0.15,68,0.639,77,0.126,78,0.036,79,0.661,87,1.269,104,0.005,105,0.007,106,0.005,107,0.888,108,1.108,109,1.806,110,1.285,111,1.285,112,1.285,113,1.285,115,1.226,116,2.99,117,1.069,118,2.187,119,2.146,120,1.618,122,1.618,124,0.999,131,3.288,140,1.327,145,2.179,147,2.532,148,1.78,158,0.93,159,1.107,164,1.734,166,1.069,169,1.108,182,1.95,192,3.049,194,1.149,195,2.133,196,1.448,213,1.069,219,1.825,220,2.342,266,0.84,300,0.812,301,1.806,302,1.876,303,0.812,304,2.436,305,1.285,306,1.285,307,1.069,308,1.108,309,1.285,310,1.108,311,1.806,312,1.876,313,1.108,314,1.149,315,1.285,316,1.069,317,1.285,318,1.108,319,0.595,320,1.192,321,1.285,322,1.069,323,1.285,324,1.032,325,1.149,326,1.285,327,1.108,328,1.069,329,1.069,330,1.285,331,1.069,332,1.876,333,1.108,334,1.285,335,1.069,336,0.963,337,1.876,338,1.069,339,0.93,340,2.027,341,1.032,342,1.149,343,1.108,344,1.032,345,1.069,346,1.285,347,1.285,348,1.032,349,1.285,350,1.032,351,1.285,352,1.069,353,1.237,354,1.285,493,1.101,516,1.661,525,2.664,526,1.032,534,2.342,538,1.579,562,0.93,584,3.77,629,2.055,632,4.038,633,2.259,651,2.055,666,3.419,675,2.342,821,4.118,830,2.605,833,5.347,860,4.118,948,1.653,1044,1.579,1142,2.342,1212,3.718,1227,3.817,1415,3.718,1463,2.547,1473,2.547,1474,4.863,1475,4.118,1617,2.82,2078,6.515,2079,5.58,2080,5.58,2081,6.136,2082,6.136,2083,5.58,2084,4.725,2085,3.236,2086,3.236,2087,3.236,2088,3.236,2089,3.236,2090,5.58,2091,3.236,2092,4.725,2093,3.236,2094,3.236,2095,3.236,2096,3.236,2097,4.725,2098,3.236,2099,4.725,2100,4.725,2101,3.236,2102,3.236,2103,3.236,2104,4.725,2105,5.58,2106,5.58,2107,4.725,2108,4.725,2109,6.136,2110,4.725,2111,4.725,2112,3.236]],["title/components/TripPassagesComponent.html",[107,0.642,341,1.288]],["body/components/TripPassagesComponent.html",[1,2.248,3,0.063,4,0.07,5,0.049,7,0.182,8,0.594,9,1.068,17,1.728,20,0.405,23,1.147,25,0.616,26,0.014,27,0.935,28,0.568,29,0.533,30,1.56,32,1.218,33,1.068,35,4.27,37,1.602,56,0.208,58,0.092,65,0.655,66,0.632,67,0.655,68,0.391,71,3.52,77,0.126,78,0.022,79,0.405,80,1.076,87,1.497,104,0.003,105,0.005,106,0.003,107,0.827,108,0.679,109,1.235,110,0.787,111,0.787,112,0.787,113,0.787,115,0.839,117,0.655,118,2.046,119,2.007,120,1.107,122,1.107,124,0.684,130,0.818,134,1.147,140,0.868,153,1.107,158,1.177,159,0.959,166,0.655,169,1.107,179,1.56,182,2.301,191,1.18,192,2.631,194,0.704,195,0.758,204,2.339,207,1.062,210,1.251,213,1.068,214,1.251,228,2.817,231,2.583,256,0.851,266,1.062,273,1.251,296,1.335,300,0.497,301,1.235,302,1.283,303,0.497,304,1.874,305,0.787,306,0.787,307,0.655,308,0.679,309,0.787,310,0.679,311,1.235,312,1.283,313,0.679,314,1.979,315,0.787,316,0.655,317,0.787,318,0.679,319,0.956,320,1.507,321,0.787,322,0.655,323,0.787,324,0.632,325,0.704,326,0.787,327,0.679,328,0.655,329,1.068,330,0.787,331,0.655,332,1.283,333,0.679,334,0.787,335,0.655,336,1.218,337,1.283,338,0.655,339,0.57,340,0.655,341,1.506,342,2.315,343,2.233,344,0.632,345,0.655,346,0.787,347,0.787,348,0.632,349,0.787,350,0.632,351,0.787,352,0.655,353,0.758,354,0.787,357,2.1,359,0.818,363,2.817,398,0.515,407,3.178,418,2.544,422,2.339,493,1.388,514,1.335,516,0.962,524,0.967,526,0.632,527,1.012,529,0.887,530,0.611,543,1.218,562,0.57,572,4.108,588,1.062,593,2.026,597,3.754,598,3.416,606,1.388,615,1.062,622,2.583,623,2.04,629,1.507,633,1.738,648,2.307,651,1.914,658,0.679,660,1.625,664,1.435,673,2.544,709,2.544,719,1.924,728,4.72,734,1.19,747,3.416,805,1.335,806,1.56,911,3.904,915,1.831,922,2.112,940,2.04,952,1.435,1033,1.012,1044,2.72,1130,1.012,1135,2.962,1136,1.435,1137,1.728,1138,4.991,1139,3.178,1140,3.567,1141,0.887,1142,1.435,1143,1.118,1144,1.251,1145,1.56,1146,1.56,1147,1.56,1148,2.04,1149,1.56,1150,2.544,1151,4.628,1152,3.567,1153,2.817,1154,2.962,1155,3.567,1156,3.567,1157,1.728,1158,2.817,1159,2.817,1160,3.567,1161,1.728,1162,4.438,1163,3.567,1164,5.528,1165,1.728,1166,2.817,1167,2.339,1168,2.817,1169,2.817,1170,3.567,1171,2.817,1172,1.728,1173,1.728,1174,3.567,1175,2.339,1176,3.567,1177,1.728,1178,3.567,1179,3.567,1180,2.817,1181,1.728,1182,1.728,1183,1.728,1184,2.817,1185,2.817,1186,4.114,1187,1.728,1188,2.817,1189,2.817,1190,2.817,1191,1.728,1192,1.728,1193,1.728,1194,1.728,1195,1.728,1196,1.728,1197,1.728,1198,1.728,1199,1.728,1200,1.728,1201,1.728,1202,1.728,1203,2.817,1204,2.817,1205,2.544,1206,1.728,1207,1.728,1208,2.817,1209,2.176,1210,1.728,1211,1.56,1212,1.56,1415,4.388,1490,1.728,1502,1.728,1504,1.728,1558,2.176,1638,1.728,1669,2.817,1773,2.817,1827,1.728,1909,2.817,1912,1.728,1977,2.544,2077,1.728,2113,3.232,2114,1.982,2115,1.982,2116,1.982,2117,1.982,2118,1.982,2119,1.982,2120,1.982,2121,1.982,2122,1.982,2123,1.982,2124,1.982,2125,1.982,2126,1.982,2127,1.982,2128,1.982,2129,1.982,2130,1.982,2131,1.982,2132,1.982,2133,3.232,2134,3.232,2135,1.982,2136,3.232,2137,3.232,2138,3.232,2139,3.232,2140,3.232,2141,4.092,2142,3.232,2143,3.232,2144,1.982,2145,3.232,2146,1.982,2147,3.232,2148,3.232,2149,3.232,2150,3.232,2151,3.232,2152,3.232,2153,3.232,2154,3.232,2155,3.232,2156,3.232,2157,3.232,2158,3.232,2159,3.232,2160,3.232,2161,3.232,2162,1.982,2163,1.982,2164,1.982,2165,1.982,2166,1.982,2167,1.982,2168,1.982,2169,1.982,2170,1.982]],["title/modules/TripPassagesModule.html",[424,0.946,2171,2.922]],["body/modules/TripPassagesModule.html",[3,0.156,4,0.174,5,0.122,26,0.013,56,0.285,58,0.229,77,0.192,78,0.055,104,0.008,105,0.01,106,0.008,165,1.57,300,1.235,308,1.685,341,2.471,342,2.467,343,1.685,348,2.471,424,1.154,426,1.627,427,2.032,428,3.109,429,2.203,430,2.819,431,1.747,444,2.819,445,2.203,446,2.032,448,2.32,451,2.32,452,2.941,465,3.107,572,2.775,657,3.314,676,5.215,683,3.073,684,2.032,905,3.977,911,2.638,913,3.562,1369,3.874,1465,4.56,1468,4.958,1515,4.889,1959,5.491,2171,5.998,2172,4.29,2173,4.29,2174,4.29,2175,5.215,2176,4.922,2177,4.922,2178,4.922,2179,4.29,2180,4.242,2181,4.29]],["title/guards/TripPassagesResolver.html",[1689,2.718,2180,2.718]],["body/guards/TripPassagesResolver.html",[0,1.975,1,2.828,3,0.161,4,0.179,5,0.125,7,0.465,8,1.179,9,1.083,20,1.033,23,1.02,25,1.221,26,0.013,27,1.02,28,0.619,29,1.058,32,0.804,37,2.168,56,0.276,57,3.192,58,0.235,66,2.045,68,0.998,77,0.197,78,0.057,79,1.033,80,1.058,87,1.358,104,0.008,105,0.01,106,0.008,115,1.313,192,3.545,370,4.315,493,0.998,526,1.613,562,1.454,563,4.315,572,3.967,588,2.71,911,3.77,1141,2.263,1143,2.851,1148,3.192,1209,3.405,1211,3.98,1690,3.405,1693,3.778,1696,4.639,1697,5.354,1698,5.093,1699,5.354,1927,3.66,1935,3.98,2180,4.315,2182,4.408,2183,5.057,2184,5.057,2185,5.057]],["title/modules/TripPassagesRoutingModule.html",[424,0.946,2175,2.718]],["body/modules/TripPassagesRoutingModule.html",[3,0.181,4,0.201,5,0.141,26,0.014,35,3.832,56,0.273,58,0.265,77,0.222,78,0.064,104,0.009,105,0.011,106,0.009,107,0.905,153,1.949,341,2.2,342,2.448,343,1.949,398,1.477,426,1.881,431,2.02,448,2.096,451,2.539,562,1.636,565,3.593,566,4.105,567,3.364,572,3.209,575,3.05,734,2.096,911,3.05,1151,4.479,1693,2.906,1710,4.119,1713,4.119,1796,4.479,2175,4.643,2179,4.961,2180,4.643,2181,4.961]],["title/injectables/UserLocationService.html",[0,1.244,443,1.666]],["body/injectables/UserLocationService.html",[0,1.734,2,2.339,3,0.132,4,0.147,5,0.103,7,0.381,8,1.035,9,1.105,20,1.305,23,1.222,25,0.79,26,0.014,27,0.66,28,0.616,29,0.685,32,0.66,37,1.968,56,0.226,58,0.193,68,0.819,75,2.118,76,2.023,77,0.162,78,0.047,80,1.219,104,0.007,105,0.009,106,0.007,124,1.19,134,1.998,140,1.035,148,2.037,153,1.42,158,1.836,159,1.497,169,2.345,197,2.743,357,1.42,398,1.461,443,2.323,493,1.457,516,2.131,524,2.023,526,1.323,563,3.789,593,2.11,595,2.352,648,4.037,787,3.002,940,4.324,942,3.615,955,3.977,1130,2.874,1141,1.856,1142,3.002,1326,2.339,1870,3.002,2186,3.615,2187,6.387,2188,6.387,2189,5.628,2190,6.387,2191,6.387,2192,6.387,2193,5.628,2194,5.628,2195,6.849,2196,4.148,2197,6.387,2198,5.628,2199,4.148,2200,4.148,2201,4.148,2202,4.148,2203,4.148,2204,4.148,2205,4.148,2206,4.148,2207,4.148,2208,4.148,2209,4.148,2210,4.148,2211,4.148,2212,4.148,2213,4.148,2214,4.148,2215,4.148,2216,4.148,2217,4.148,2218,4.148,2219,4.148,2220,4.148,2221,4.148,2222,4.148,2223,5.628,2224,4.148,2225,4.148,2226,4.148,2227,4.148,2228,4.148,2229,4.148,2230,4.148]],["title/classes/UserLocationSubscriber.html",[78,0.045,1058,2.403]],["body/classes/UserLocationSubscriber.html",[3,0.11,4,0.123,5,0.086,7,0.319,8,0.914,9,1.091,20,0.709,23,0.791,25,0.947,26,0.014,27,0.791,28,0.694,29,0.82,32,0.552,53,1.773,56,0.247,58,0.161,68,0.685,77,0.281,78,0.056,79,1.016,80,1.046,92,1.693,95,1.693,97,1.621,99,1.553,104,0.005,105,0.008,106,0.005,115,0.901,140,1.068,147,1.86,148,1.852,159,0.814,164,1.86,197,2.494,213,1.147,243,3.665,256,2.135,266,0.901,319,1.068,398,1.29,410,2.663,415,1.433,441,1.9,443,2.396,475,1.693,493,1.146,515,2.965,516,1.033,527,1.773,530,1.789,543,2.077,553,1.693,593,2.375,595,1.83,629,1.83,633,1.278,640,1.86,641,2.191,643,2.067,651,1.83,658,1.988,660,1.378,734,1.278,818,2.191,830,2.32,835,1.693,915,2.224,922,1.553,925,1.773,926,2.965,928,1.957,937,2.538,946,1.621,947,1.433,954,1.773,955,1.773,956,2.959,959,1.83,961,1.327,980,1.957,982,1.957,994,2.802,1016,1.773,1044,1.693,1045,3.274,1046,1.957,1047,2.337,1048,2.337,1049,1.957,1050,1.86,1051,2.067,1052,2.191,1053,2.802,1054,3.347,1055,2.802,1056,2.959,1057,1.957,1058,2.959,1059,3.347,1060,2.959,1061,2.337,1062,2.337,1063,2.337,1064,2.337,1065,3.347,1066,2.337,1067,2.337,1068,2.337,1069,2.337,1070,2.067,1071,3.347,1072,2.337,1073,2.337,1074,3.909,1075,1.86,1076,2.337,1077,2.337,1078,2.337,1079,2.337,1080,2.337,1081,2.337,1082,2.337,1083,3.347,1084,2.337,1085,2.337,1086,2.337,1087,2.067,1088,2.337,1089,2.191,1090,2.191,1091,2.337,1092,2.337,1093,2.337,1094,2.337,1095,2.337,1096,2.337,1097,2.337,1098,2.191,1099,2.337,1100,2.067,1101,2.337,1102,2.337,1103,2.337,1104,3.347,1105,2.337,1106,2.337,1107,3.347,1108,2.337,1109,2.337,1110,2.337,1111,2.191,1112,3.909,1113,2.337,1114,2.337,1115,3.347,1116,2.337,1117,2.337,1118,2.337,1119,2.337,1120,2.337,1121,2.337,1122,2.337,1123,3.347,1124,2.337,1125,3.347,1126,2.337,1127,2.337,1128,2.337,1129,2.337,1130,1.773,1131,2.337,1132,2.337,1133,2.337,1134,2.337,2231,3.472,2232,3.472,2233,3.472]],["title/classes/VehicleLoadSubscriber.html",[78,0.045,1255,2.922]],["body/classes/VehicleLoadSubscriber.html",[1,1.912,3,0.086,4,0.095,5,0.067,7,0.248,8,0.758,9,1.059,20,0.551,23,0.655,25,0.785,26,0.014,27,0.655,28,0.483,29,0.68,32,0.429,37,1.269,53,2.104,55,1.604,56,0.267,58,0.125,63,2.774,64,4.75,65,0.89,66,0.859,67,0.89,68,0.532,73,2.12,74,1.701,77,0.161,78,0.046,79,0.551,80,0.826,92,1.314,94,3.588,95,1.314,97,1.258,99,1.206,104,0.004,105,0.006,106,0.004,115,0.699,118,0.724,130,1.7,140,1.11,153,1.918,165,0.859,169,0.923,192,2.238,197,2.148,200,1.376,212,3.242,224,2.12,261,2.12,263,1.701,266,0.699,269,2.323,303,1.034,319,0.496,336,1.488,339,0.775,350,1.787,357,0.923,398,1.936,410,2.207,441,1.575,442,2.104,443,2.312,472,2.12,473,1.814,474,2.12,475,1.314,493,1.348,501,2.774,524,1.314,525,2.323,526,0.859,538,1.314,539,1.444,543,1.796,546,1.519,553,1.314,559,1.814,562,0.775,593,0.89,595,2.063,600,1.701,606,1.769,629,1.517,633,0.992,651,1.517,656,1.95,657,1.814,658,1.713,667,2.12,684,1.112,695,2.12,697,1.814,734,0.992,817,2.12,830,1.923,879,2.982,914,1.701,915,1.843,918,1.814,921,1.95,922,1.206,924,1.701,925,2.861,926,2.104,937,2.861,946,1.258,947,2.491,948,1.376,950,1.701,954,1.376,956,1.923,959,1.842,961,1.03,968,1.814,987,1.814,988,1.95,1004,2.774,1007,2.982,1008,1.814,1011,1.814,1013,3.368,1016,1.376,1018,2.774,1020,1.95,1022,1.814,1023,1.814,1024,1.814,1026,1.814,1027,1.814,1030,1.95,1033,1.376,1035,1.814,1049,1.519,1050,2.207,1056,2.452,1057,3.588,1070,1.604,1075,2.207,1087,1.604,1141,1.206,1143,1.519,1175,2.982,1227,2.554,1228,3.62,1229,2.348,1230,2.348,1234,2.348,1236,1.95,1237,2.348,1240,2.348,1242,2.348,1246,2.348,1247,2.348,1249,2.348,1253,2.68,1254,1.814,1255,2.982,1256,3.591,1257,3.591,1258,2.348,1259,3.591,1260,2.348,1261,2.348,1262,2.348,1263,2.348,1264,2.348,1265,2.348,1266,2.348,1267,2.348,1268,3.591,1269,2.348,1270,2.348,1271,2.348,1272,3.591,1273,2.348,1274,2.348,1275,2.348,1276,2.12,1277,2.12,1278,2.348,1279,3.936,1280,2.348,1281,2.348,1282,2.348,1283,2.348,1284,4.359,1285,2.348,1286,2.348,1287,2.348,1288,3.591,1289,2.348,1290,2.348,1291,2.348,1292,2.348,1293,2.348,1294,2.348,1295,2.348,1296,3.591,1297,2.348,1298,2.348,1299,2.348,1300,2.348,1301,2.348,1302,3.591,1303,2.348,1304,2.348,1305,2.348,1306,2.348,1307,2.348,1308,2.348,1309,2.348,1310,2.348,1311,2.348,1312,4.359,1313,2.348,1314,3.591,1315,2.348,1316,3.591,1317,2.348,1318,2.348,1319,2.348,1320,2.348,1321,2.348,1322,2.348,1323,2.348,1324,2.348,1325,2.348,1326,1.519,1327,2.348,1328,3.591,1329,3.591,1330,3.591,1331,2.348,1332,2.348,1333,2.348,1334,2.348,1335,4.882,1336,2.348,1337,2.348,1338,2.348,1339,2.348,1340,2.348,1341,2.348,1342,2.12,1343,2.348,1344,2.348,1345,3.591,1346,2.348,1347,2.348,1348,2.348,1349,2.348,1350,2.348,1351,2.348,1352,2.348,1353,2.348,1354,2.348,1355,2.348,1356,2.348,1357,2.348,1358,2.348,1359,2.348,1360,2.348,1361,2.348,1362,2.348,1363,2.348,1641,2.348,2234,2.694,2235,2.694,2236,2.694]],["title/coverage.html",[2237,4.815]],["body/coverage.html",[0,2.14,1,1.188,5,0.077,6,2.71,26,0.013,28,0.3,53,1.588,55,1.851,69,4.322,78,0.083,104,0.005,105,0.007,106,0.005,107,1.25,108,1.065,114,2.71,137,1.851,166,1.027,200,3.43,266,2.188,303,1.611,307,1.027,310,1.065,313,1.065,314,1.104,316,1.027,318,1.065,320,1.689,322,1.027,324,0.992,327,1.065,328,1.027,329,1.516,331,1.027,333,1.065,335,1.027,338,1.027,340,1.027,341,0.992,345,1.027,348,0.992,350,0.992,352,1.027,355,2.25,356,3.32,357,1.065,358,2.71,375,1.588,441,1.188,442,1.588,443,1.283,447,3.61,468,3.089,476,2.446,480,2.446,491,3.671,492,3.671,508,2.093,516,0.925,530,2.243,531,2.093,552,2.25,554,2.446,555,3.32,560,2.25,572,3.074,592,3.32,596,1.963,601,2.71,602,2.71,626,2.446,627,2.446,628,2.71,687,3.61,688,3.61,718,2.71,814,2.71,911,3.44,912,3.61,913,3.32,914,4.052,950,1.963,955,1.588,956,1.451,958,2.25,1037,2.25,1038,2.71,1045,3.619,1046,3.619,1053,1.753,1055,1.753,1058,1.851,1135,2.25,1136,3.32,1227,3.548,1228,3.32,1254,2.093,1255,2.25,1370,3.61,1397,2.25,1471,2.446,1472,2.446,1473,3.61,1523,2.71,1524,2.71,1540,3.32,1541,3.32,1542,3.61,1543,1.851,1550,2.25,1586,2.71,1613,3.61,1614,3.61,1624,2.25,1642,2.71,1686,2.093,1689,4.052,1691,2.446,1692,2.71,1702,3.089,1714,2.25,1715,3.61,1751,2.71,1760,2.25,1794,2.71,1813,3.671,1814,3.61,1920,2.093,1921,2.71,1965,2.25,1966,3.61,2023,2.446,2055,2.093,2057,2.71,2068,2.446,2069,2.25,2078,2.71,2180,2.093,2182,2.71,2186,2.71,2237,2.71,2238,2.71,2239,3.109,2240,3.109,2241,4.588,2242,4.588,2243,6.019,2244,4.588,2245,7.745,2246,7.51,2247,3.109,2248,5.246,2249,2.71,2250,2.71,2251,2.71,2252,2.71,2253,3.998,2254,6.019,2255,6.948,2256,3.109,2257,3.109,2258,2.71,2259,3.109,2260,3.109,2261,3.109,2262,7.405,2263,6.419,2264,3.109,2265,3.109,2266,5.452,2267,3.109,2268,3.109,2269,3.109,2270,3.109,2271,3.109,2272,3.109,2273,3.109,2274,3.109,2275,4.588,2276,3.109,2277,3.109,2278,3.109,2279,3.109,2280,3.109,2281,2.446,2282,3.109,2283,3.109,2284,3.109,2285,3.109,2286,2.446,2287,2.446,2288,2.71,2289,2.71,2290,2.71,2291,2.71,2292,2.71,2293,3.109,2294,3.109]],["title/dependencies.html",[427,2.006,1763,2.647]],["body/dependencies.html",[26,0.013,58,0.259,65,1.839,66,1.775,67,1.839,68,1.098,104,0.009,105,0.011,106,0.009,165,1.775,269,3.138,385,4.58,427,2.297,457,5.354,461,4.851,462,4.851,562,1.6,684,2.297,765,4.851,947,2.808,1276,4.38,1277,4.38,1463,4.38,2295,5.566,2296,8.316,2297,5.566,2298,5.566,2299,5.566,2300,5.566,2301,5.566,2302,5.566,2303,5.566,2304,6.803,2305,5.566,2306,5.566,2307,5.566,2308,5.566,2309,6.803,2310,5.566,2311,5.566,2312,5.566,2313,5.566,2314,5.566,2315,5.566,2316,5.566,2317,5.566,2318,5.566]],["title/miscellaneous/enumerations.html",[2319,1.897,2320,4.235]],["body/miscellaneous/enumerations.html",[3,0.178,7,0.516,26,0.013,28,0.542,104,0.009,105,0.011,106,0.009,159,1.966,213,2.437,256,3.167,266,1.456,329,1.854,357,2.341,381,3.778,394,4.603,422,4.061,491,3.778,492,4.603,528,4.061,529,3.059,572,3.163,615,3.006,911,3.006,1045,3.163,1046,3.855,1049,3.855,1050,3.006,1051,3.34,1052,3.542,1130,2.865,1136,4.948,1138,5.38,1144,3.542,1145,4.415,1146,4.415,1147,4.415,1148,3.542,1149,4.415,2319,3.163,2320,4.89,2321,4.415,2322,4.89,2323,5.611]],["title/miscellaneous/functions.html",[2319,1.897,2324,4.235]],["body/miscellaneous/functions.html",[5,0.156,7,0.579,26,0.012,32,1.002,104,0.01,105,0.012,106,0.01,119,1.967,747,4.56,1042,4.932,1043,4.56,1760,5.606,1763,4.958,1780,4.958,2286,4.958,2287,5.765,2319,3.552,2321,4.958,2324,5.491,2325,6.301]],["title/index.html",[7,0.309,2326,3.364,2327,3.364]],["body/index.html",[5,0.153,26,0.011,87,1.658,104,0.01,105,0.011,106,0.01,269,3.481,297,4.859,359,2.548,483,4.859,588,3.308,697,4.157,1090,3.897,1780,4.859,2238,6.309,2328,7.239,2329,7.681,2330,7.239,2331,6.174,2332,6.174,2333,6.174,2334,6.174,2335,6.174,2336,6.174,2337,6.174,2338,7.239,2339,6.174,2340,6.174,2341,6.174]],["title/modules.html",[426,1.825]],["body/modules.html",[26,0.011,104,0.009,105,0.011,106,0.009,385,5.615,425,3.988,426,1.821,437,3.478,438,3.478,439,3.478,440,3.478,676,3.71,899,3.988,903,3.71,1515,3.478,1578,3.71,1680,3.988,1684,3.71,1953,3.988,1957,3.71,2047,3.988,2051,3.71,2171,3.988,2175,3.71,2342,8.34,2343,8.34,2344,8.472,2345,7.968,2346,7.968]],["title/overview.html",[2347,4.815]],["body/overview.html",[2,2.015,26,0.013,104,0.006,105,0.008,106,0.006,108,2.482,109,1.366,166,1.95,266,0.928,300,0.897,307,1.95,310,2.021,313,2.021,316,2.395,318,2.482,322,1.95,324,2.313,327,2.021,328,2.395,331,1.95,333,2.482,335,1.95,338,1.95,340,2.395,341,1.883,344,1.14,345,2.395,348,1.883,350,2.313,352,1.95,375,3.014,424,0.838,425,5.957,426,1.181,427,1.475,428,1.6,429,1.6,430,1.6,431,1.269,432,3.115,433,3.115,434,3.115,435,3.115,436,3.115,437,3.725,438,4.449,439,4.928,440,4.449,441,2.255,442,3.014,443,2.436,444,2.271,445,1.6,446,1.475,553,1.744,591,1.825,615,1.915,676,4.745,677,3.115,678,3.115,679,3.115,879,2.587,899,5.362,900,3.115,901,3.115,902,3.115,903,3.973,1098,2.257,1130,1.825,1364,3.115,1365,3.115,1366,3.115,1457,3.115,1458,3.115,1459,3.115,1515,4.576,1516,3.115,1517,3.115,1518,3.115,1578,4.745,1579,3.115,1580,3.115,1581,3.115,1680,5.101,1681,3.115,1682,3.115,1683,3.115,1684,3.973,1690,2.407,1789,3.115,1790,3.115,1791,3.115,1953,5.806,1954,3.115,1955,3.115,1956,3.115,1957,3.973,2047,5.362,2048,3.115,2049,3.115,2050,3.115,2051,3.973,2171,5.65,2172,3.115,2173,3.115,2174,3.115,2175,3.973,2347,3.115,2348,3.575,2349,3.115,2350,3.575]],["title/routes.html",[567,2.695]],["body/routes.html",[26,0.012,104,0.01,105,0.012,106,0.01,567,3.228]],["title/miscellaneous/typealiases.html",[2319,1.897,2351,4.859]],["body/miscellaneous/typealiases.html",[7,0.533,26,0.012,28,0.56,71,4.403,104,0.009,105,0.011,106,0.009,119,1.557,370,3.904,555,5.837,560,5.414,592,4.197,1042,3.904,1043,5.048,1045,3.269,1046,3.932,1053,3.269,1055,3.269,1057,3.932,1543,4.801,1549,4.563,2069,4.197,2281,4.563,2286,4.563,2287,5.489,2319,3.269,2321,4.563,2322,5.054,2352,5.799,2353,6.079,2354,6.921,2355,6.079,2356,6.079,2357,6.079,2358,6.975,2359,5.799]],["title/miscellaneous/variables.html",[2319,1.897,2360,4.235]],["body/miscellaneous/variables.html",[7,0.271,26,0.014,27,0.468,28,0.733,33,2.073,37,1.626,69,4.92,80,0.871,104,0.008,105,0.007,106,0.005,148,2.1,153,2.502,158,2.205,159,1.797,169,1.508,173,3.188,256,2.828,266,0.764,295,2.781,301,1.125,325,1.045,357,1.807,362,2.565,383,3.188,398,0.764,437,1.858,438,1.858,439,1.858,440,1.858,441,1.125,447,2.316,449,2.565,452,1.374,453,2.316,454,2.565,456,2.565,458,2.565,476,3.466,477,2.565,478,2.13,479,2.565,480,3.466,481,2.565,482,2.565,483,2.316,484,2.565,485,2.565,504,2.966,529,1.971,555,3.188,593,1.744,595,2.158,600,1.858,606,2.931,623,3.699,798,3.839,799,4.601,947,1.818,950,2.781,1008,2.966,1011,1.982,1037,4.541,1039,5.468,1040,5.468,1041,5.468,1042,4.224,1254,2.966,1495,5.468,1543,3.488,1546,2.316,1760,4.541,1846,2.565,1950,2.565,1951,4.601,2068,3.466,2069,2.13,2248,2.565,2249,3.839,2250,3.839,2251,3.839,2252,3.839,2253,2.565,2258,3.839,2281,2.316,2288,2.565,2289,2.565,2290,2.565,2291,2.565,2292,2.565,2319,1.66,2349,3.839,2353,2.565,2354,2.565,2355,2.565,2356,2.565,2357,2.565,2360,2.565,2361,4.405,2362,2.944,2363,2.944,2364,2.944,2365,2.944,2366,2.944,2367,4.405,2368,5.86,2369,7.788,2370,5.86,2371,5.86,2372,4.405,2373,4.405,2374,4.405,2375,2.944,2376,2.944,2377,2.944,2378,2.944,2379,4.405,2380,4.405,2381,4.405,2382,4.405,2383,4.405,2384,4.405,2385,2.944,2386,4.405,2387,4.405,2388,2.944,2389,2.944,2390,4.405,2391,2.944,2392,2.944,2393,4.405,2394,4.405,2395,4.405,2396,2.944,2397,5.86,2398,2.944,2399,2.944,2400,2.944,2401,2.944,2402,2.944,2403,2.944,2404,2.944,2405,2.944,2406,2.944,2407,2.944,2408,4.405,2409,2.944,2410,2.944,2411,2.944,2412,2.944,2413,2.944,2414,4.405,2415,2.944,2416,4.405,2417,2.944,2418,2.944,2419,2.944,2420,2.944,2421,2.944,2422,2.944,2423,2.944,2424,2.944,2425,2.944,2426,2.944,2427,2.944,2428,2.944,2429,2.944,2430,2.944,2431,2.944,2432,2.944,2433,2.944,2434,2.944,2435,2.944,2436,2.944,2437,2.944,2438,2.944,2439,2.944,2440,2.944,2441,2.944,2442,2.944,2443,2.944,2444,2.944,2445,2.944,2446,2.944,2447,2.944,2448,2.944,2449,2.944,2450,2.944]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.1",{"_index":1129,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0.2.0",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":983,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["0.803.3",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":1128,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0.9.1",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2246,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2278,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2244,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2247,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2243,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2255,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":1125,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0px",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/RouteListComponent.html":{}}}],["1",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["1.1",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.4.0",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2254,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":879,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"overview.html":{}}}],["100",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["1000",{"_index":1870,"title":{},"body":{"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["10000",{"_index":2198,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["10001",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["100px",{"_index":1676,"title":{},"body":{"components/SearchComponent.html":{}}}],["100vw",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":1493,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["111111",{"_index":883,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["12",{"_index":798,"title":{},"body":{"components/DepartureListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["12px",{"_index":1504,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["15px",{"_index":1917,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["16",{"_index":2348,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/TripPassagesComponent.html":{}}}],["18",{"_index":1098,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"overview.html":{}}}],["180",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1].name.charat(0",{"_index":2035,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["1px",{"_index":1784,"title":{},"body":{"components/SidebarComponent.html":{}}}],["1s",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["2",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/SearchComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2\",role=\"status",{"_index":2160,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["2.24.0",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2257,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2277,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1738,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["200",{"_index":668,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["2000",{"_index":546,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["207",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["22",{"_index":2276,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":799,"title":{},"body":{"components/DepartureListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["24.svg",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24px",{"_index":2163,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["250px",{"_index":616,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["25px",{"_index":1915,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["3",{"_index":529,"title":{},"body":{"injectables/AppNotificationService.html":{},"components/CommonErrorComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2283,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":2285,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":784,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["30px",{"_index":1916,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["32",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":2273,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2279,"title":{},"body":{"coverage.html":{}}}],["3600000",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["37",{"_index":2284,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":615,"title":{},"body":{"components/CommonErrorComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4/11",{"_index":2280,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2242,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2259,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1011,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":423,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["400px",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["404",{"_index":1148,"title":{},"body":{"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"miscellaneous/enumerations.html":{}}}],["42",{"_index":2282,"title":{},"body":{"coverage.html":{}}}],["42px",{"_index":1284,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["439px",{"_index":1438,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["44",{"_index":2258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":1130,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/15",{"_index":2274,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1850,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["500",{"_index":422,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["5000",{"_index":1175,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["5px",{"_index":1496,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["6.5.3",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":787,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{}}}],["64.svg",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64px",{"_index":621,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["66",{"_index":2256,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2349,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["71",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["799",{"_index":1505,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["8",{"_index":2260,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2241,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1491,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["8;base64,pd94bwwgdmvyc2lvbj0i",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8;base64,pd94bwwgdmvyc2lvbj0ims4wiib",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":2350,"title":{},"body":{"overview.html":{}}}],["90",{"_index":1020,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["99",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":1768,"title":{},"body":{"components/SidebarComponent.html":{}}}],["a(*ngfor=\"let",{"_index":1669,"title":{},"body":{"components/SearchComponent.html":{},"components/TripPassagesComponent.html":{}}}],["a([routerlink]=\"['/passages",{"_index":800,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["a([routerlink]=\"['/stop",{"_index":2042,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["a([routerlink]=\"[\\'/passages",{"_index":812,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["a([routerlink]=\"[\\'/stop",{"_index":2046,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":1709,"title":{},"body":{"guards/SearchResultResolver.html":{},"components/StopsInfoComponent.html":{}}}],["a.stopid",{"_index":1874,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["a2u9imjsywnriibzdhjva2utd2lkdgg9ijeunsigdgv4dc1hbmnob3i9im1p",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a2u9imjsywnriibzdhjva2utd2lkdgg9ijeunsigdgv4dc1hbmnob3i9im1pzgrszsi+sdwv",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a[1",{"_index":1882,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["absolute",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["abstract",{"_index":1063,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["accessors",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/RouteListComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["acquired",{"_index":1300,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["action",{"_index":611,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["actions",{"_index":1566,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["activated",{"_index":2064,"title":{},"body":{"guards/StopsResolver.html":{}}}],["activatedroute",{"_index":1139,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["activatedroutesnapshot",{"_index":1697,"title":{},"body":{"guards/SearchResultResolver.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["actual",{"_index":790,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["actual_component",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["addlayer",{"_index":1213,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["addlayer(layer",{"_index":1132,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addmarker",{"_index":921,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["addto(this.map",{"_index":1102,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addto(this.userlocationlayer",{"_index":1123,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addvehiclemarker",{"_index":1231,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["addvehiclemarker(vehicle",{"_index":1240,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["afterdismissed",{"_index":547,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["afterviewinit",{"_index":915,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["agreed",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["agreed.tripid",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["alert",{"_index":528,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2352,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["allowed",{"_index":1303,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["alt",{"_index":1023,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["always",{"_index":390,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["angular",{"_index":1780,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/animations",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":684,"title":{},"body":{"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["angular/compiler",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1463,"title":{},"body":{"modules/MainToolbarModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/material/sidenav",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/theming",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":562,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/service",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularversion",{"_index":1756,"title":{},"body":{"components/SidebarComponent.html":{}}}],["angularversion}}.info",{"_index":1788,"title":{},"body":{"components/SidebarComponent.html":{}}}],["animate",{"_index":1027,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["animation",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["announcementmessage",{"_index":544,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["any).data",{"_index":1352,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["any).mstoplocations",{"_index":1975,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["any).setrotationangle(location.heading",{"_index":1019,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["any).stopshortname",{"_index":1892,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["api",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"directives/MainMapDirective.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["api.service",{"_index":1724,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["api/geo/stops",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/geo/vehicle",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/geo/vehicles",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/settings",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/stop",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/trip",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/vehicle",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiendpoint",{"_index":1039,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["app",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["app.component",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.pug",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":108,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdrawable",{"_index":815,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["appdrawable]'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["appear",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["apperrorhandler",{"_index":355,"title":{"injectables/AppErrorHandler.html":{}},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appinitservice",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appinitservice.load",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":425,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnotificationservice",{"_index":375,"title":{"injectables/AppNotificationService.html":{}},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{},"overview.html":{}}}],["appnotificationtype",{"_index":394,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"miscellaneous/enumerations.html":{}}}],["appnotificationtype.error",{"_index":408,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["apppreloadingstrategy",{"_index":552,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutes",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":437,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appversion",{"_index":1043,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["arg",{"_index":1718,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["args",{"_index":1106,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["arguments",{"_index":834,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["aria",{"_index":1415,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["array.isarray(vehicles.vehicles",{"_index":1264,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["arrival",{"_index":749,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["arrow_back",{"_index":1445,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["assets/stop",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async\",[routerlink]=\"['/stop",{"_index":1670,"title":{},"body":{"components/SearchComponent.html":{}}}],["async\",[routerlink]=\"[\\'/stop",{"_index":1679,"title":{},"body":{"components/SearchComponent.html":{}}}],["atleast",{"_index":695,"title":{},"body":{"components/DepartureListComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["attachment",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["attribution",{"_index":1089,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["auto",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["available",{"_index":2346,"title":{},"body":{"modules.html":{}}}],["awr0ad0ims41iib0zxh0lwfuy2hvcj0ibwlkzgxlij5ipc90zxh0pg0kpc9zdmc",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awr0ad0imtawiibozwlnahq9ijewmcigzmlsbd0ii2zmziivpg0kphrlehqg",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":1100,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"guards/SearchResultResolver.html":{},"components/StopsInfoComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["b2xkidmychggc2fucy1zzxjpzjsgy29sb3i6chvycgxloyb9pc9zdhlszt4n",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b3bhy2l0et0iljuipg0kphjly3qged0iltewiib5psitmtaiihdpzhropsix",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":1329,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["backend",{"_index":2332,"title":{},"body":{"index.html":{}}}],["background",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/TripPassagesComponent.html":{}}}],["background:#999999",{"_index":618,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["background:#b00020",{"_index":1913,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["bar",{"_index":1278,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bar(*ngif=\"loading\",mode=\"indeterminate\",color=\"accent",{"_index":1634,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["baseurl",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{}}}],["begin",{"_index":877,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["behaviorsubject",{"_index":648,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"injectables/SidebarService.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["behaviorsubject(0",{"_index":649,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["behaviorsubject(false",{"_index":1803,"title":{},"body":{"injectables/SidebarService.html":{}}}],["behaviorsubject(undefined",{"_index":940,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["bj0ims4xiib2awv3qm94psitmiatmia3mia3miigeg1sbnm9imh0dha6ly93",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":1497,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["block",{"_index":1490,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["blur",{"_index":1476,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["blur(2px",{"_index":1508,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["bold",{"_index":806,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["boolean",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"injectables/SidebarService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["border",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["border:1px",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bottom:0px",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["bottomleft",{"_index":1306,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bottomright",{"_index":1302,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bounds",{"_index":55,"title":{"interfaces/Bounds.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"interfaces/ITimestampVehicleLocation.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["box",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["box'},{'name",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["box(*ngif=\"erroroccured",{"_index":1910,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["box(*ngif=\"haserror()\",aria",{"_index":2136,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["box([blur]=\"haserror()\",title=\"{{routename",{"_index":2133,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["box([blur]=\"stoplocation===undefined\",title=\"{{stopinfo?.stopname}}\",i18n",{"_index":1894,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["box.component",{"_index":1396,"title":{},"body":{"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{}}}],["box.component.pug",{"_index":1475,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.scss",{"_index":1474,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts",{"_index":1473,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:10",{"_index":1480,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:12",{"_index":1479,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:13",{"_index":2091,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:15",{"_index":1478,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:16",{"_index":2093,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:19",{"_index":2085,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:20",{"_index":2084,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:24",{"_index":2088,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:28",{"_index":2087,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:46",{"_index":2089,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:55",{"_index":2086,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.module.ts",{"_index":1519,"title":{},"body":{"modules/MapHeaderBoxModule.html":{}}}],["box/map",{"_index":1472,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"coverage.html":{}}}],["boxmarginhorizontal",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["boxmarginhorizontal)}*(100vw",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["boxmarginvertical",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmaxwidth",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["break",{"_index":1627,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["breakpoint",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness(0.5",{"_index":1510,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["browse",{"_index":2344,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":385,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"components/SearchComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":2336,"title":{},"body":{"index.html":{}}}],["bus",{"_index":913,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"modules/TripPassagesModule.html":{},"coverage.html":{}}}],["button#btnsearch",{"_index":1447,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button#btnsearch(mat",{"_index":1422,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button(mat",{"_index":1567,"title":{},"body":{"components/RetryDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["button,(click)=\"closesidebar",{"_index":1771,"title":{},"body":{"components/SidebarComponent.html":{}}}],["button,(click)=\"onnoclick",{"_index":1568,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["button,(click)=\"togglesearch",{"_index":1423,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button,(click)=\"togglesidebar()\",i18n",{"_index":1414,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button,[mat",{"_index":1570,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["button,[routerlink",{"_index":1427,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.close",{"_index":1440,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.close(mat",{"_index":1426,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.sidebar",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["c",{"_index":1101,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["c2lhbkjsdxigaw49ilnvdxjjzudyyxboawmiihn0zerldmlhdglvbj0imyiv",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c3ryb2tlpsijmdawii8+dqo8l2c+dqo8l3n2zz4",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":2229,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["caching",{"_index":1976,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["calc",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["calc(50px",{"_index":1678,"title":{},"body":{"components/SearchComponent.html":{}}}],["calculatedelay",{"_index":725,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["calculatedelay(data",{"_index":731,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["calculates",{"_index":733,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["call",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"directives/DrawableDirective.html":{}}}],["canvasrenderingcontext2d",{"_index":855,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["capitalize",{"_index":2166,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["case",{"_index":775,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["catch",{"_index":360,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["catcherror",{"_index":1141,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["catcherror((err",{"_index":1326,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["catcherror(this.handleerror.bind(this",{"_index":1195,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["caught",{"_index":1987,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["cc",{"_index":1093,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["center",{"_index":1288,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["checkup",{"_index":599,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/ITimestampVehicleLocation.html":{}}}],["child",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["children",{"_index":585,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":1607,"title":{},"body":{"components/RouteListComponent.html":{}}}],["cjxkzwzzpg0kpgzpbhrlcibpzd0iyiiged0imciget0imci+dqo8zmvhyxvz",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":78,"title":{"classes/AppPreloadingStrategy.html":{},"classes/LeafletMapComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RetryDialogData.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["classes",{"_index":553,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/LeafletMapComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RetryDialogData.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"overview.html":{}}}],["classname",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clear",{"_index":818,"title":{},"body":{"directives/DrawableDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["cli",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":2329,"title":{},"body":{"index.html":{}}}],["close",{"_index":1443,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close]=\"true\",cdkfocusinitial",{"_index":1571,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["closeable",{"_index":1373,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["closeable':(closeable===true",{"_index":1412,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["closeable\\':(closeable===true",{"_index":1455,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["closemat",{"_index":1787,"title":{},"body":{"components/SidebarComponent.html":{}}}],["closesidebar",{"_index":1754,"title":{},"body":{"components/SidebarComponent.html":{},"injectables/SidebarService.html":{}}}],["cluster_appmodule",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule",{"_index":677,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule_declarations",{"_index":678,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule_exports",{"_index":679,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_errormodule",{"_index":900,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_declarations",{"_index":901,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_imports",{"_index":902,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule",{"_index":1364,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule_declarations",{"_index":1365,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule_exports",{"_index":1366,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule",{"_index":1457,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule_declarations",{"_index":1458,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule_exports",{"_index":1459,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule",{"_index":1516,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule_declarations",{"_index":1517,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule_exports",{"_index":1518,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule",{"_index":1579,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule_declarations",{"_index":1580,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule_exports",{"_index":1581,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":1681,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":1682,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_imports",{"_index":1683,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule",{"_index":1789,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declarations",{"_index":1790,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_exports",{"_index":1791,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_stopmodule",{"_index":1954,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopmodule_declarations",{"_index":1955,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopmodule_imports",{"_index":1956,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopsmodule",{"_index":2048,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_declarations",{"_index":2049,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_imports",{"_index":2050,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule",{"_index":2172,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule_declarations",{"_index":2173,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule_imports",{"_index":2174,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cmcvr3jhcghpy3mvu1zhlzeums9eveqvc3znmteuzhrkjz4ncjxzdmcgd2lk",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cmp",{"_index":1059,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["cmwoi2epiibzdhjva2u9iimwmdailz4ncjx0zxh0ignsyxnzpsjozwf2esiged0imzqiihk9",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1558,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/SidebarComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{}}}],["color",{"_index":980,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["color:#00d500",{"_index":811,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["color:#d50000",{"_index":808,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["color:#f9f9f9",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["color:red",{"_index":716,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["color:white",{"_index":1494,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["column",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["combine",{"_index":1887,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["combinelatest",{"_index":656,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["combinelatest([this.mtimerobservable.pipe(filter((val",{"_index":1880,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["combinelatest([timer(0",{"_index":667,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["come",{"_index":1776,"title":{},"body":{"components/SidebarComponent.html":{}}}],["common",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{}}}],["common/countdown",{"_index":2177,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["common/leaflet",{"_index":957,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["common/retry",{"_index":2054,"title":{},"body":{"modules/StopsModule.html":{},"guards/StopsResolver.html":{}}}],["commonerrorcomponent",{"_index":307,"title":{"components/CommonErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commonmodule",{"_index":683,"title":{},"body":{"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["complete",{"_index":1716,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["component",{"_index":107,"title":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["components",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"overview.html":{}}}],["connection",{"_index":417,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["console",{"_index":412,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["console.error('it",{"_index":413,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["console.error(err",{"_index":1726,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["const",{"_index":398,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"modules/SearchRoutingModule.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/CommonErrorComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(activatedroute",{"_index":1647,"title":{},"body":{"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["constructor(api",{"_index":1927,"title":{},"body":{"guards/StopInfoResolver.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["constructor(apiservice",{"_index":1745,"title":{},"body":{"injectables/SettingsService.html":{}}}],["constructor(cmp",{"_index":2231,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["constructor(dialogref",{"_index":1548,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["constructor(el",{"_index":829,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["constructor(elref",{"_index":924,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(followmapinstance",{"_index":1639,"title":{},"body":{"classes/RoutesSubscriber.html":{}}}],["constructor(http",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(indicatorcmp",{"_index":1635,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["constructor(injector",{"_index":366,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["constructor(mainmap",{"_index":2234,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["constructor(matsnackbar",{"_index":500,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(public",{"_index":1559,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["constructor(resolve",{"_index":1717,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["constructor(route",{"_index":1827,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["constructor(router",{"_index":1617,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["constructor(service",{"_index":1967,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["constructor(sidebarservice",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(stopservice",{"_index":1694,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["constructor(toolbar",{"_index":1520,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["container",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container(#sidenavcontainer,[hasbackdrop]=\"true",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["container(*ngfor=\"let",{"_index":1599,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopsInfoComponent.html":{}}}],["container.innerhtml",{"_index":1291,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.main",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["container.onclick",{"_index":1295,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.backgroundcolor",{"_index":1281,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.cursor",{"_index":1290,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.height",{"_index":1285,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.lineheight",{"_index":1286,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.msuserselect",{"_index":1294,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.textalign",{"_index":1287,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.userselect",{"_index":1293,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.verticalalign",{"_index":1289,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.width",{"_index":1283,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["containing",{"_index":681,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["content",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RetryDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["content.title",{"_index":1513,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["context(.no",{"_index":1507,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["continue",{"_index":1268,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["contract",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["contributors",{"_index":1092,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["control",{"_index":1279,"title":{},"body":{"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["converts",{"_index":1830,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["converttime",{"_index":726,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["converttime(data",{"_index":736,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["converttime(time",{"_index":1589,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["coordinates",{"_index":1114,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords",{"_index":1112,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.accuracy",{"_index":1118,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.latitude",{"_index":1120,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.longitude",{"_index":1121,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["copy",{"_index":1090,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"index.html":{}}}],["core",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countdown",{"_index":685,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["countdowndirective",{"_index":682,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["countdowntimerdirective",{"_index":345,"title":{"directives/CountdownTimerDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countdowntimermodule",{"_index":676,"title":{"modules/CountdownTimerModule.html":{}},"body":{"modules/CountdownTimerModule.html":{},"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":2237,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":1204,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["createdialog",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdialog(error",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdialogfunc",{"_index":2353,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["createdialogfuncresponse",{"_index":2355,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["createnotificationqueueobservable",{"_index":496,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["createpositionrequest",{"_index":2189,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["createpositionrequest(timeout",{"_index":2194,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["creates",{"_index":504,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["createstopicon",{"_index":1254,"title":{},"body":{"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createstopicon(this.location",{"_index":1346,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["createstopicon(this.locationservice",{"_index":1952,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["createstoploadobservable",{"_index":1982,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["createvehicleicon",{"_index":950,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createvehicleicon(location.heading",{"_index":1009,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["createvehicleicon(vehicle.heading",{"_index":1333,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ctx",{"_index":816,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["current",{"_index":747,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":1280,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["d3cudzmub3jnlziwmdavc3znij4ncjxzdhlszt4uagvhdnkgeybmb250oibi",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":734,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["data\",i18n",{"_index":2138,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["data.actualrelativetime",{"_index":783,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["data.actualtime",{"_index":785,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["data.code",{"_index":1565,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.code}}div(mat",{"_index":1575,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.message",{"_index":1563,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.plannedtime",{"_index":789,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["data.trippassages",{"_index":1183,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["data:image/svg+xml;charset=utf",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now",{"_index":673,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["debounce_time",{"_index":1174,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["debounce_time\",[placeholder]=\"'sync",{"_index":2144,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["debounce_time\",[placeholder]=\"\\'sync",{"_index":2168,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["debouncetime",{"_index":1142,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["debouncetime(200",{"_index":2098,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["declarations",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["decorators",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/RetryDialogComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["deep",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["default",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["delay",{"_index":729,"title":{},"body":{"components/DepartureListItemComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["departure",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["departure(deps",{"_index":767,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure.tripid]\",role=\"listitem",{"_index":801,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure_board",{"_index":780,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departurelistcomponent",{"_index":310,"title":{"components/DepartureListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departurelistitemcomponent",{"_index":313,"title":{"components/DepartureListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departures",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{}}}],["departures\",[departure]=\"passage",{"_index":710,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures\",[departure]=\"passage\").no",{"_index":717,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures(*ngif=\"!hasdepartures",{"_index":711,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures(deps",{"_index":704,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departurestatus",{"_index":760,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departures|departures@@departures\",label=\"departures",{"_index":1905,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["dependencies",{"_index":427,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["description",{"_index":359,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"classes/LeafletMapComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"index.html":{}}}],["design",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["destroys",{"_index":1203,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["dgg9ijy0iibozwlnahq9ijy0iibiyxnluhjvzmlszt0iznvsbcigdmvyc2lv",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dgv4dd4ncjwvbwfzaz4ncjxjaxjjbgugy3g9ijm0iibjet0imzqiihi9ijmyiibtyxnrpsj1",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":1543,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dialog'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["dialog.component",{"_index":1585,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["dialog.component.pug",{"_index":1545,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["dialog.component.scss",{"_index":1544,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["dialog.component.ts",{"_index":1542,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":1551,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1555,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1554,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1552,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:5",{"_index":1577,"title":{},"body":{"classes/RetryDialogData.html":{}}}],["dialog.component.ts:6",{"_index":1576,"title":{},"body":{"classes/RetryDialogData.html":{}}}],["dialog.module.ts",{"_index":1582,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["dialog/retry",{"_index":1541,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"coverage.html":{}}}],["dialogopen",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialogref",{"_index":1546,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"miscellaneous/variables.html":{}}}],["dialogref.afterclosed",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictating",{"_index":1841,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["diff",{"_index":671,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["diffminutes",{"_index":796,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["direction",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["directions_bus",{"_index":777,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["direction}}.no",{"_index":1612,"title":{},"body":{"components/RouteListComponent.html":{}}}],["directive",{"_index":303,"title":{"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["directives",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"overview.html":{}}}],["disabled",{"_index":2331,"title":{},"body":{"index.html":{}}}],["dismissed",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dismissedbyaction",{"_index":532,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["dismissnotice.dismissedbyaction",{"_index":549,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["display",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/TripPassagesComponent.html":{}}}],["display:block",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["display:flex",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["display:list",{"_index":1610,"title":{},"body":{"components/RouteListComponent.html":{}}}],["display:none",{"_index":1441,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["displayed",{"_index":505,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"components/StopsInfoComponent.html":{}}}],["displaying",{"_index":1150,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{}}}],["distinctuntilchanged",{"_index":659,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["div(mat",{"_index":1562,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["div.error",{"_index":1909,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["div.no",{"_index":713,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["divider",{"_index":1442,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["divider(*ngif=\"hasheader(idx)&&idx>0",{"_index":2038,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["divider([vertical]=\"true",{"_index":1425,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["divider.close",{"_index":1424,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["documentation",{"_index":2238,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1309,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["dom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["donmahallem/trapeze",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"directives/MainMapDirective.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["drag",{"_index":1082,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["drawable.directive",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["drawabledirective",{"_index":166,"title":{"directives/DrawableDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropshadow",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["during",{"_index":1185,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["dynamic",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":852,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.buttons",{"_index":875,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.offsetx",{"_index":895,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.offsety",{"_index":896,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["ease",{"_index":1512,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["el",{"_index":832,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["element",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["elementref",{"_index":830,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["elevation(4",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["elref",{"_index":928,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["emit",{"_index":1310,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["empty",{"_index":563,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{}}}],["enabled",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enablehighaccuracy",{"_index":2227,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["enabletracing",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":1052,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["endpoint",{"_index":1533,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoint.icon",{"_index":1536,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoint.title",{"_index":1538,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoints",{"_index":1527,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoints\",role=\"listitem\"[routerlink]=\"[endpoint.path",{"_index":1534,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["entrycomponents",{"_index":1583,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["enum",{"_index":527,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["enumerations",{"_index":2320,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiendpoint",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.apiendpoint.endswith",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.example.ts",{"_index":2339,"title":{},"body":{"index.html":{}}}],["environment.production",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.pwa",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.version",{"_index":1769,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environments/environment",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["equals",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":514,"title":{},"body":{"injectables/AppNotificationService.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["err.status",{"_index":1209,"title":{},"body":{"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{}}}],["error",{"_index":357,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/SettingsLoadSubscriber.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["error(err",{"_index":1721,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["error.component",{"_index":906,"title":{},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["error.component.pug",{"_index":604,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["error.component.scss",{"_index":603,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["error.component.ts",{"_index":602,"title":{},"body":{"components/CommonErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:7",{"_index":605,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["error.message",{"_index":404,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["error.status",{"_index":2076,"title":{},"body":{"guards/StopsResolver.html":{}}}],["error/not",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["errordiv(mat",{"_index":1574,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["errorhandler",{"_index":393,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["erroritem",{"_index":2356,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["errormessage=\"@@errorupdatingdata",{"_index":2139,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["errormessage=\"error",{"_index":2137,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["errormodule",{"_index":899,"title":{"modules/ErrorModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["erroroccured",{"_index":1817,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["errorresponse",{"_index":378,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["errorresponse.status",{"_index":421,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["errorroutes",{"_index":909,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["errorroutingmodule",{"_index":903,"title":{"modules/ErrorRoutingModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["errors",{"_index":362,"title":{},"body":{"injectables/AppErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["errors.pipe(skipwhile",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evenly",{"_index":1786,"title":{},"body":{"components/SidebarComponent.html":{}}}],["event",{"_index":835,"title":{},"body":{"directives/DrawableDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["event.sourcetarget.data.shortname",{"_index":1362,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.sourcetarget.data.tripid",{"_index":1332,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.type",{"_index":1319,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.url.length",{"_index":1399,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["eventemitter",{"_index":833,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["events",{"_index":1630,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["events:none",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["events:visible",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["eveqgu1zhideums8vru4nicanahr0cdovl3d3dy53my5vcmcvr3jhcghpy3mvu1zhlzeu",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["except",{"_index":735,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["excluding",{"_index":741,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["execute",{"_index":1201,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["expand",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["expected",{"_index":743,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["export",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["exports",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2333,"title":{},"body":{"index.html":{}}}],["extends",{"_index":959,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["f44336",{"_index":2164,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["f9f9f9",{"_index":613,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["failures",{"_index":1137,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/variables.html":{}}}],["featureavailable",{"_index":2190,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["featuregroup",{"_index":1355,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["featuregroup.addto(this.getmap",{"_index":1357,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["featuregroup.on('click",{"_index":1358,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["field",{"_index":2106,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fill",{"_index":1429,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["fillcolor",{"_index":1126,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["fillopacity",{"_index":1127,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["fills",{"_index":1432,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["filter",{"_index":948,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["filter((event",{"_index":1318,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["filter((item",{"_index":1886,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["filter((stop",{"_index":2006,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["filter((value",{"_index":2096,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["filter(num",{"_index":1028,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["filter(option",{"_index":1706,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["firing",{"_index":1081,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["firstpolyline",{"_index":978,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["firstpolyline.addto(this.getmap",{"_index":985,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["fixed",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["flatmap",{"_index":524,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["flatmap((error",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flatmap((moveevent",{"_index":1320,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["flatmap((noti",{"_index":541,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["flatmap((stopid",{"_index":1883,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["flatmap((stops",{"_index":2004,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["flatmap((tripid",{"_index":1192,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["flatmap((val",{"_index":2213,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["flex",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["flex:0",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["flex:1",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["flexbox",{"_index":1434,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["flow",{"_index":612,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["focussearch",{"_index":2083,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["follow",{"_index":2178,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["followbusmapdirective",{"_index":348,"title":{"directives/FollowBusMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"coverage.html":{},"overview.html":{}}}],["followmapinstance",{"_index":960,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["font",{"_index":622,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["form",{"_index":2105,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["form(role=\"search",{"_index":2104,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["form,mat",{"_index":2112,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["format",{"_index":1833,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["formcontrol",{"_index":2090,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["formsmodule",{"_index":1461,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["found",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"index.html":{}}}],["found'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["found.component",{"_index":907,"title":{},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["found.component.pug",{"_index":1526,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1525,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1524,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:21",{"_index":1528,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":1531,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["foundmat",{"_index":1539,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["from([undefined",{"_index":1743,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{}}}],["from(stops",{"_index":2005,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["function",{"_index":560,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/SettingsLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2324,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geoerror",{"_index":2223,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["geosuccess",{"_index":2220,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getangularversion",{"_index":1764,"title":{},"body":{"components/SidebarComponent.html":{}}}],["getappversion",{"_index":1760,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getdelay",{"_index":762,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getdeparture",{"_index":750,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getdepartures",{"_index":700,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["getfeatureavailable",{"_index":2200,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["gethasroutes",{"_index":1595,"title":{},"body":{"components/RouteListComponent.html":{}}}],["getimgdata",{"_index":819,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["getinitialmapcenter",{"_index":1729,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["getinitialmapzoom",{"_index":1736,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["getissidenavopen",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["getlasttimestamp",{"_index":2124,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getlocation",{"_index":942,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"injectables/UserLocationService.html":{}}}],["getlocationerrorobservable",{"_index":2203,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getlocationobservable",{"_index":2205,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getmap",{"_index":1131,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["getmapbounds",{"_index":1225,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["getnotificationobservable",{"_index":520,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["getresults",{"_index":1655,"title":{},"body":{"components/SearchComponent.html":{}}}],["getroutebytripid",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebytripid(tripid",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebyvehicleid",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebyvehicleid(vehicleid",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutename",{"_index":2130,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getroutes",{"_index":1592,"title":{},"body":{"components/RouteListComponent.html":{}}}],["gets",{"_index":752,"title":{},"body":{"components/DepartureListItemComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["getsearchopen",{"_index":1388,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["getsettings",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"injectables/SettingsService.html":{}}}],["getsidebarobservable",{"_index":1806,"title":{},"body":{"injectables/SidebarService.html":{}}}],["getsidebaropen",{"_index":1804,"title":{},"body":{"injectables/SidebarService.html":{}}}],["getstations",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"guards/StopsResolver.html":{}}}],["getstatus",{"_index":758,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getstatuscode",{"_index":2126,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getstatusicon",{"_index":756,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getstopid",{"_index":1855,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["getstopinfo",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{}}}],["getstopinfo(stopid",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstoplocation",{"_index":2011,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoplocation(stopshortname",{"_index":1996,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["getstoplocations",{"_index":2019,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoplocationsobservable",{"_index":2021,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoppassages",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstoppassages(route.params.stopid",{"_index":1934,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["getstoppassages(stopid",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstops",{"_index":2029,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["gettime",{"_index":754,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["gettimeuntilrefresh",{"_index":1853,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["getting",{"_index":2326,"title":{"index.html":{}},"body":{}}],["gettripdata",{"_index":2122,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["gettripid",{"_index":2128,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["gettrippassages",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/TripPassagesComponent.html":{}}}],["gettrippassages(tripid",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocation",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocation(vehicleid",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocations",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocations(bounds",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["github",{"_index":1778,"title":{},"body":{"components/SidebarComponent.html":{}}}],["given",{"_index":2000,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["global",{"_index":361,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["gradient(rgba(0,0,0,0.0",{"_index":1500,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["graph",{"_index":2345,"title":{},"body":{"modules.html":{}}}],["grayscale(100",{"_index":1509,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["greenicon",{"_index":1345,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["grey",{"_index":1785,"title":{},"body":{"components/SidebarComponent.html":{}}}],["group",{"_index":1911,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["group(mat",{"_index":1901,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["grow",{"_index":1912,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["guard",{"_index":1689,"title":{"guards/SearchResultResolver.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1690,"title":{},"body":{"guards/SearchResultResolver.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"overview.html":{}}}],["h1(mat",{"_index":1561,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["h3",{"_index":608,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{}}}],["h3(*ngif=\"hasheader(idx)\",mat",{"_index":2039,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["h3(matline",{"_index":1537,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["h3(matline,aria",{"_index":2152,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["h3(matsubheader",{"_index":1600,"title":{},"body":{"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["h3.route",{"_index":2162,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["h4",{"_index":712,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["h4(mat",{"_index":1673,"title":{},"body":{"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["h4(matline",{"_index":1603,"title":{},"body":{"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["hand",{"_index":1168,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["handle",{"_index":380,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handleerror",{"_index":363,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/TripPassagesComponent.html":{}}}],["handleerror(err",{"_index":1208,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["handleerror(error",{"_index":369,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handlehttperrorresponse",{"_index":364,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handlehttperrorresponse(errorresponse",{"_index":373,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.ts",{"_index":358,"title":{},"body":{"injectables/AppErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:18",{"_index":384,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:25",{"_index":371,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:47",{"_index":376,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:9",{"_index":368,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handles",{"_index":372,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["happened",{"_index":418,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["happens",{"_index":414,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["hasdepartures",{"_index":692,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["haserror",{"_index":1186,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["hasheader",{"_index":2025,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["hasheader(idx",{"_index":2027,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["hasroutes",{"_index":1587,"title":{},"body":{"components/RouteListComponent.html":{}}}],["head",{"_index":1772,"title":{},"body":{"components/SidebarComponent.html":{}}}],["header",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["heading",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{}}}],["height:100",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["height:150px",{"_index":617,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["height:250px",{"_index":1486,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:300px",{"_index":1487,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:40px",{"_index":1451,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["height:64px",{"_index":1506,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:calc(100vw",{"_index":614,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["help_outline",{"_index":607,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["help_outlineh3",{"_index":624,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["here",{"_index":2334,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":793,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["hidden",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["highaccuracy",{"_index":2195,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["hjvzmlszt0iznvsbcigdmvyc2lvbj0ims4xiib2awv3qm94psiwidagnjggnjgiihhtbg5",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holding",{"_index":746,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["home",{"_index":1529,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["host",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["hostbinding",{"_index":654,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/MapHeaderBoxComponent.html":{}}}],["hostbinding('class.no",{"_index":1481,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["hostbinding('innerhtml",{"_index":663,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["hostbindings",{"_index":637,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["hostlistener",{"_index":859,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mousedown",{"_index":871,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mouseenter",{"_index":868,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mousemove",{"_index":873,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mouseup",{"_index":865,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('resize",{"_index":888,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlisteners",{"_index":823,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["html",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlcanvaselement",{"_index":853,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["http",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["httpclient",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":370,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponses",{"_index":377,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["human",{"_index":1831,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["iactualtrippassage",{"_index":1140,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["iappnotification",{"_index":508,"title":{"interfaces/IAppNotification.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"coverage.html":{}}}],["iappnotificationdismiss",{"_index":531,"title":{"interfaces/IAppNotificationDismiss.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"coverage.html":{}}}],["icon",{"_index":606,"title":{},"body":{"components/CommonErrorComponent.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["icon(mat",{"_index":1672,"title":{},"body":{"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["icon(matlisticon",{"_index":1535,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["icon(matlisticon,role=\"figure\",i18n",{"_index":2148,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["icon(matlisticon,title=\"{{status",{"_index":802,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["iconanchor",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconapp",{"_index":1456,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["icons",{"_index":1277,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["iconsize",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["ideparture",{"_index":698,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{}}}],["idx",{"_index":2028,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["ienvironmentbase",{"_index":1037,"title":{"interfaces/IEnvironmentBase.html":{}},"body":{"interfaces/IEnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ijq2iibmawxspsj3agl0zsigb3bhy2l0et0iljuiihn0cm9rzt0id2hpdguiihn0cm9rzs13",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1498,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["imagedata",{"_index":848,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["imagery",{"_index":1095,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["imapbounds",{"_index":53,"title":{"interfaces/IMapBounds.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["imapmoveendevent",{"_index":1055,"title":{"interfaces/IMapMoveEndEvent.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imapmovestartevent",{"_index":1053,"title":{"interfaces/IMapMoveStartEvent.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["implements",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["import",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["import('./modules/error/error.module').then(m",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/routing/search/search.module').then(m",{"_index":582,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/stop/stop.module').then(m",{"_index":576,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/stops/stops.module').then(m",{"_index":578,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/trip",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["include",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1428,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["indicator.component",{"_index":1470,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["indicator.component.pug",{"_index":1616,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.scss",{"_index":1615,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts",{"_index":1614,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["indicator.component.ts:12",{"_index":1636,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts:17",{"_index":1637,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts:38",{"_index":1621,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:39",{"_index":1618,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":1620,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:49",{"_index":1619,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicatorcmp",{"_index":1625,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["info.component",{"_index":1963,"title":{},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["info.component.pug",{"_index":1816,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.scss",{"_index":1815,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.ts",{"_index":1814,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:10",{"_index":2026,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:102",{"_index":1835,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:105",{"_index":1837,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:15",{"_index":1854,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:18",{"_index":1856,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.ts:22",{"_index":1857,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:25",{"_index":1844,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1838,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1851,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1847,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1845,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1852,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:45",{"_index":1839,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1843,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:47",{"_index":1828,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:59",{"_index":1829,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:66",{"_index":1834,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.resolver",{"_index":1964,"title":{},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{}}}],["info.resolver.ts",{"_index":1921,"title":{},"body":{"guards/StopInfoResolver.html":{},"coverage.html":{}}}],["info.resolver.ts:14",{"_index":1928,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["info.resolver.ts:28",{"_index":1929,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["information",{"_index":1923,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["init",{"_index":1311,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["initializes",{"_index":1189,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["inject",{"_index":1556,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":1553,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{},"overview.html":{}}}],["injector",{"_index":367,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["innerhtml",{"_index":638,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["input",{"_index":655,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["input(#searchinput,(blur)=\"onlosefocus()\",type=\"search\",aria",{"_index":2107,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["input('departure",{"_index":766,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["input('departures",{"_index":703,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["input('location",{"_index":964,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["input('routes",{"_index":1596,"title":{},"body":{"components/RouteListComponent.html":{}}}],["inputs",{"_index":634,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["inside",{"_index":1762,"title":{},"body":{"components/SidebarComponent.html":{},"guards/StopInfoResolver.html":{}}}],["instance",{"_index":1846,"title":{},"body":{"components/StopInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":400,"title":{},"body":{"injectables/AppErrorHandler.html":{},"directives/FollowBusMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["integer",{"_index":788,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["interactive",{"_index":1016,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["interface",{"_index":530,"title":{"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["interfaces",{"_index":591,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"overview.html":{}}}],["internet",{"_index":420,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["interval",{"_index":1842,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["ipassagestatus",{"_index":1135,"title":{"interfaces/IPassageStatus.html":{}},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["isclientoffline",{"_index":365,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["isettings",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["issidenavopen",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["istopinfo",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{}}}],["istoplocation",{"_index":1253,"title":{},"body":{"directives/MainMapDirective.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["istoplocations",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"guards/StopsResolver.html":{}}}],["istoppassage",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{}}}],["item",{"_index":719,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["item'},{'name",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["item((click)=\"opengithub",{"_index":1777,"title":{},"body":{"components/SidebarComponent.html":{}}}],["item(*ngfor=\"let",{"_index":708,"title":{},"body":{"components/DepartureListComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{}}}],["item(role=\"listitem",{"_index":2044,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item.component",{"_index":1961,"title":{},"body":{"modules/StopModule.html":{}}}],["item.component.pug",{"_index":721,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.scss",{"_index":720,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts",{"_index":718,"title":{},"body":{"components/DepartureListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:19",{"_index":744,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:24",{"_index":738,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:28",{"_index":748,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:35",{"_index":730,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:45",{"_index":751,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:49",{"_index":755,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:53",{"_index":757,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:71",{"_index":759,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:75",{"_index":737,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:88",{"_index":763,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:96",{"_index":732,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.name.charat(0",{"_index":2041,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item.shortname]\",role=\"listitem",{"_index":1671,"title":{},"body":{"components/SearchComponent.html":{}}}],["item.shortname]\",title=\"{{item?.name",{"_index":2043,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item?.name",{"_index":1674,"title":{},"body":{"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["items",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{}}}],["itimestampvehiclelocation",{"_index":596,"title":{"interfaces/ITimestampVehicleLocation.html":{}},"body":{"interfaces/Bounds.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["itrippassages",{"_index":594,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/ITimestampVehicleLocation.html":{}}}],["ivehiclelocation",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"interfaces/ITimestampVehicleLocation.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ivehiclelocation).addto(this.vehiclemarkerlayer",{"_index":1270,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ivehiclelocationlist",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["js",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1437,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["keyframes",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["l",{"_index":946,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.circle(userposition",{"_index":1122,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.circlemarker(userposition",{"_index":1124,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.control.extend",{"_index":1273,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.divicon",{"_index":1008,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["l.domutil.create('i",{"_index":1275,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.featuregroup",{"_index":937,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.featuregroup(stoplist",{"_index":1356,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.icon",{"_index":1951,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["l.latlng",{"_index":1730,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(0",{"_index":1735,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(this.settings.initial_lat",{"_index":1734,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(waypoint.lat",{"_index":976,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.latlngbounds",{"_index":1067,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.layer",{"_index":994,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.map",{"_index":1071,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.map(this.elref.nativeelement",{"_index":1084,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.marker",{"_index":1013,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.marker([location.latitude",{"_index":1014,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["l.marker([stop.latitude",{"_index":1347,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.marker([vehicle.latitude",{"_index":1336,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.polyline",{"_index":936,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.polyline(pointlist",{"_index":979,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.tilelayer",{"_index":996,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1088,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["label=\"@@busstopicon\",aria",{"_index":2149,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"@@stopname",{"_index":2155,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"bus",{"_index":2150,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"number\",placeholder=\"stopname\",matinput,[formcontrol]=\"searchcontrol\",i18n",{"_index":2108,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["label=\"stop",{"_index":2153,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"tab",{"_index":1904,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["label=\"toggle",{"_index":1416,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["last",{"_index":598,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"components/TripPassagesComponent.html":{}}}],["lasttimestamp",{"_index":1160,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["lat",{"_index":1024,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["layer",{"_index":995,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layer.addto(this.map",{"_index":1133,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["layer.options.attribution",{"_index":997,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layer.redraw",{"_index":998,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layout",{"_index":1436,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["lazy",{"_index":2053,"title":{},"body":{"modules/StopsModule.html":{}}}],["lbmnvzgluzz0ivvrgltgipz4ncjwhre9dvflqrsbzdmcgifbvqkxjqyanls8vvzndly9",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaf",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaflet",{"_index":947,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["leafletmapcomponent",{"_index":956,"title":{"classes/LeafletMapComponent.html":{}},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["left",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["left:0px",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["legend",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["level=\"2\",title=\"{{title",{"_index":1483,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["li",{"_index":1609,"title":{},"body":{"components/RouteListComponent.html":{}}}],["line",{"_index":969,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["line.remove",{"_index":971,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["line:no",{"_index":411,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["linear",{"_index":1499,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["link",{"_index":1154,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["list",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["list(*ngif=\"hasdepartures()\",role=\"list",{"_index":707,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list(*ngif=\"tripid==tripdata?.tripid\",role=\"list",{"_index":2145,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["list([departures]=\"stopinfo?.actual",{"_index":1906,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list([routes]=\"stopinfo?.routes",{"_index":1908,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list([routes]=\"stopinfo?.routes\")div.error",{"_index":1919,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list(role=\"list",{"_index":1532,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["list(role=\"list\",*ngif=\"hasroutes",{"_index":1598,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list(role=\"navigation",{"_index":1668,"title":{},"body":{"components/SearchComponent.html":{}}}],["list.component",{"_index":1962,"title":{},"body":{"modules/StopModule.html":{}}}],["list.component.pug",{"_index":690,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.scss",{"_index":689,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.ts",{"_index":688,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":1591,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:15",{"_index":1588,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:17",{"_index":699,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.component.ts:19",{"_index":1593,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:23",{"_index":693,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.ts:26",{"_index":1590,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:30",{"_index":701,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.component.ts:38",{"_index":694,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.stoplist",{"_index":2045,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["list.stoplist(role=\"list",{"_index":2036,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["literal",{"_index":1250,"title":{},"body":{"directives/MainMapDirective.html":{},"components/NotFoundComponent.html":{}}}],["lng",{"_index":1026,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["load",{"_index":559,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["loadchildren",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":1144,"title":{},"body":{"interfaces/IPassageStatus.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopsModule.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loader",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loc",{"_index":945,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/StopLocationMapDirective.html":{}}}],["loc.vehicle",{"_index":1002,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["location",{"_index":595,"title":{},"body":{"interfaces/Bounds.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["location(loc",{"_index":965,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.latitude",{"_index":1025,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.longitude",{"_index":1015,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.name",{"_index":1017,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.name.split",{"_index":1010,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["location.prepareexternalurl(stop_icon_shadow_url",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location.prepareexternalurl(stop_icon_url",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location.service",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["location.service.ts",{"_index":2186,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["location.service.ts:10",{"_index":2201,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:14",{"_index":2202,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:17",{"_index":2204,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:20",{"_index":2206,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:24",{"_index":2199,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:26",{"_index":2193,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:42",{"_index":2196,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location_off",{"_index":1485,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["locationerrorobservable",{"_index":2191,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationerrorsubject",{"_index":2187,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationobservable",{"_index":2192,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationobservable.subscribe(new",{"_index":1109,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["locations",{"_index":1978,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["locationservice",{"_index":1939,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["locationsubject",{"_index":2188,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["m.errormodule",{"_index":581,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.searchmodule",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.stopmodule",{"_index":577,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.stopsmodule",{"_index":579,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.trippassagesmodule",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mainmap",{"_index":1256,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mainmapdirective",{"_index":350,"title":{"directives/MainMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["mainmapmodule",{"_index":438,"title":{"modules/MainMapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainMapModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarcomponent",{"_index":316,"title":{"components/MainToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintoolbarmodule",{"_index":439,"title":{"modules/MainToolbarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainToolbarModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map((a",{"_index":1881,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map((passages",{"_index":1194,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["map((stops",{"_index":1704,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["map((value",{"_index":539,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map(appmainmap",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["map(appstoplocation,[location]=\"stoplocation\",role=\"none",{"_index":1899,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map(appstoplocation,[location]=\"stoplocation\",role=\"none\")mat",{"_index":1918,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map(apptrippassages,[location]=\"tripdata?.location\",role=\"none",{"_index":2135,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["map(apptrippassages,[location]=\"tripdata?.location\",role=\"none\")div.error",{"_index":2167,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["map.component",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map.component.ts",{"_index":1046,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["map.component.ts:115",{"_index":1221,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:119",{"_index":1220,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:123",{"_index":1223,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:32",{"_index":2232,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["map.component.ts:37",{"_index":2233,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["map.component.ts:47",{"_index":1226,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:50",{"_index":1217,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:51",{"_index":1218,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:52",{"_index":1216,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:53",{"_index":1219,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:54",{"_index":1215,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:60",{"_index":1222,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:91",{"_index":1224,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.directive",{"_index":1369,"title":{},"body":{"modules/MainMapModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{}}}],["map.directive.ts",{"_index":914,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["map.directive.ts:109",{"_index":1248,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:119",{"_index":932,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:12",{"_index":1640,"title":{},"body":{"classes/RoutesSubscriber.html":{}}}],["map.directive.ts:135",{"_index":1243,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:141",{"_index":1241,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:152",{"_index":1239,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:16",{"_index":1641,"title":{},"body":{"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map.directive.ts:182",{"_index":1251,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:189",{"_index":1245,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:19",{"_index":1941,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:21",{"_index":2235,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["map.directive.ts:22",{"_index":1946,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:24",{"_index":1945,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:25",{"_index":929,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:26",{"_index":1940,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:29",{"_index":943,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:31",{"_index":1252,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:32",{"_index":941,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:33",{"_index":1238,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:34",{"_index":938,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:35",{"_index":1942,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:36",{"_index":939,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:37",{"_index":927,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:46",{"_index":934,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:53",{"_index":1944,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:64",{"_index":1244,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:66",{"_index":931,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:80",{"_index":930,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:85",{"_index":1943,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.module.ts",{"_index":1367,"title":{},"body":{"modules/MainMapModule.html":{}}}],["map/main",{"_index":1228,"title":{},"body":{"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["map[appmainmap",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map[appmainmap]'},{'name",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["map[appstoplocation",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["map[apptrippassages",{"_index":916,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["map[apptrippassages]'},{'name",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mapbounds",{"_index":1066,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapbox",{"_index":1096,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapcontainer",{"_index":1069,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapheaderboxcomponent",{"_index":318,"title":{"components/MapHeaderBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapheaderboxmodule",{"_index":1515,"title":{"modules/MapHeaderBoxModule.html":{}},"body":{"modules/MapHeaderBoxModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["mapmove",{"_index":1070,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mapmoveevent",{"_index":1057,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/typealiases.html":{}}}],["mapmoveeventtype",{"_index":1049,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["mapmoveeventtype.end",{"_index":1056,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mapmoveeventtype.start",{"_index":1054,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["margin",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:#{$boxmarginvertical",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:$boxmarginvertical",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:0px",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/StopInfoComponent.html":{}}}],["margin:15px",{"_index":714,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["margin:auto",{"_index":619,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["marker",{"_index":1012,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["marker's",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marker.addto(this.stopmarkerlayer",{"_index":1021,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["marker.patch",{"_index":1048,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["markeronclick",{"_index":1232,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["markeronclick(event",{"_index":1242,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markers",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markert",{"_index":1335,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markert.data",{"_index":1341,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mat",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mat_dialog_data",{"_index":1557,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["matautocompletemodule",{"_index":1464,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["matbuttonmodule",{"_index":1465,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/TripPassagesModule.html":{}}}],["matching",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":2060,"title":{},"body":{"guards/StopsResolver.html":{}}}],["matdialogmodule",{"_index":1584,"title":{},"body":{"modules/RetryDialogModule.html":{},"modules/StopsModule.html":{}}}],["matdialogref",{"_index":1549,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"miscellaneous/typealiases.html":{}}}],["matdividermodule",{"_index":1466,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/SidebarModule.html":{}}}],["material",{"_index":1276,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["math.ceil(time",{"_index":786,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["math.max(value[1",{"_index":672,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["math.round((ticksleft",{"_index":1869,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["math.round(bounds.bottom",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.left",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.right",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.top",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(iconsize",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/MainToolbarModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":905,"title":{},"body":{"modules/ErrorModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["matprogressbarmodule",{"_index":1467,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["matprogressspinnermodule",{"_index":1959,"title":{},"body":{"modules/StopModule.html":{},"modules/TripPassagesModule.html":{}}}],["matsidenav",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavcontainer",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":501,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["matsnackbardismiss",{"_index":522,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["matsnackbarmodule",{"_index":1368,"title":{},"body":{"modules/MainMapModule.html":{}}}],["mattabsmodule",{"_index":1960,"title":{},"body":{"modules/StopModule.html":{}}}],["mattoolbarmodule",{"_index":1468,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{}}}],["max",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{}}}],["maximumage",{"_index":2228,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["maxzoom",{"_index":1097,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mdaiighlawdodd0imtawiibmawxspsijzmzmiibvcgfjaxr5psiwii8+dqo8",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mdelay",{"_index":722,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mdeparture",{"_index":723,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mdepartures",{"_index":691,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["media",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["menu",{"_index":1420,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["merge",{"_index":1858,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["merge(refreshobservable",{"_index":1888,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mergemap",{"_index":949,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["mergemap(boundsa",{"_index":1031,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["message",{"_index":403,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"guards/StopsResolver.html":{}}}],["metadata",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["miliseconds",{"_index":1849,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["min",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["minutes",{"_index":2230,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["miscellaneous",{"_index":2319,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["modify",{"_index":2340,"title":{},"body":{"index.html":{}}}],["module",{"_index":424,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["moduleimports",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":426,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/common/leaflet",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["modules/main",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/sidebar/sidebar.module",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":765,"title":{},"body":{"components/DepartureListItemComponent.html":{},"dependencies.html":{}}}],["moment(data.actualtime",{"_index":792,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment(data.plannedtime",{"_index":795,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment.duration(actual.diff(planned)).asminutes",{"_index":797,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment.moment",{"_index":791,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mousedown",{"_index":824,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousedown(e",{"_index":836,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseenter",{"_index":825,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseenter(e",{"_index":838,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousemove",{"_index":826,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousemove(e",{"_index":840,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseup",{"_index":827,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseup(e",{"_index":842,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["ms4wiiblbmnvzgluzz0ivvrgltgipz4ncjwhre9dvflqrsbzdmcgifbvqkxj",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms9eveqvc3znmteuzhrkjz4ncjxzdmcgd2lkdgg9ijy0iibozwlnahq9ijy0iibiyxnlu",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msearchopen",{"_index":1374,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["msettings",{"_index":1727,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["msidebarstatussubject",{"_index":1795,"title":{},"body":{"injectables/SidebarService.html":{}}}],["mstopinfo",{"_index":1818,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mstoplocations",{"_index":1979,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["mstops",{"_index":2024,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["mtime",{"_index":724,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mtimerobservable",{"_index":1819,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mtimeuntilrefresh",{"_index":1820,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["multi",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["muserlocationsubscription",{"_index":1072,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["my_location",{"_index":1292,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["name\",i18n",{"_index":2154,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["name.split",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nav",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["nav(#sidenav,mode=\"over",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["navigation",{"_index":1439,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["navigationcancel",{"_index":1622,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationend",{"_index":1392,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationerror",{"_index":1623,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationstart",{"_index":1393,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationsubscriber",{"_index":1397,"title":{"classes/NavigationSubscriber.html":{}},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["navigationsubscriber(this",{"_index":1404,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["navigator",{"_index":391,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["navigator.geolocation",{"_index":2207,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation.getcurrentposition(geosuccess",{"_index":2226,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.online",{"_index":397,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["necessary",{"_index":1078,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["need",{"_index":2338,"title":{},"body":{"index.html":{}}}],["needed",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["needs",{"_index":1312,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["negative",{"_index":740,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["never",{"_index":1653,"title":{},"body":{"components/SearchComponent.html":{}}}],["new",{"_index":516,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["newimage",{"_index":822,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["next",{"_index":410,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/NavigationSubscriber.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["next(event",{"_index":1398,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["next(res",{"_index":1257,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["next(routes",{"_index":962,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["next(stops",{"_index":1971,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["next(value",{"_index":1060,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["ng",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/StopsInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":922,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ngmodule",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["ngondestroy",{"_index":633,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ngoninit",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["ngsw",{"_index":2330,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":926,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["none",{"_index":1050,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["not(:first",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["not_found",{"_index":1147,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundcomponent",{"_index":322,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noti",{"_index":511,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["noti.title",{"_index":545,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["notifcations",{"_index":519,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["notification",{"_index":381,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"miscellaneous/enumerations.html":{}}}],["notification.service",{"_index":396,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["notification.service.ts",{"_index":492,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["notification.service.ts:56",{"_index":517,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:57",{"_index":502,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:68",{"_index":503,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:88",{"_index":509,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:95",{"_index":521,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:99",{"_index":513,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notificationclosedsubject",{"_index":494,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["notificationobservable",{"_index":499,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["notificationservice",{"_index":374,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["notificationservice.notify",{"_index":402,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["notificationsubject",{"_index":495,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["notify",{"_index":497,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notify(noti",{"_index":507,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["null",{"_index":1030,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["num",{"_index":1029,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["number",{"_index":593,"title":{},"body":{"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":745,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{}}}],["observable",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["observable((subscriber",{"_index":2219,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["observables",{"_index":1205,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["occured",{"_index":407,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/CommonErrorComponent.html":{},"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["occuredp",{"_index":625,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["occurs",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offline",{"_index":392,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["ogym9szcazmnb4ihnhbnmtc2vyawy7ignvbg9yonb1cnbsztsgftwvc3r5bgu+dqo8bwfza",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1572,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["onadd",{"_index":1274,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["once",{"_index":1313,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ondestroy",{"_index":629,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ondown(e",{"_index":874,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["one",{"_index":696,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["onenter(e",{"_index":869,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onfocussearch",{"_index":1376,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["onfocussearch(event",{"_index":1381,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["oninit",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["online",{"_index":387,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["onlosefocus",{"_index":2081,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onmove(e",{"_index":872,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onnoclick",{"_index":1547,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["onresize(e",{"_index":889,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onsubmit",{"_index":2082,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onup(e",{"_index":866,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onvoted",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["onvoted(agreed",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["opacity",{"_index":982,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["opacity:0.4",{"_index":1450,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["open",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"miscellaneous/variables.html":{}}}],["open':(searchopen===true),'navigation",{"_index":1411,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["open\\':(searchopen===true),\\'navigation",{"_index":1454,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["opengithub",{"_index":1755,"title":{},"body":{"components/SidebarComponent.html":{}}}],["opensidebar",{"_index":1796,"title":{},"body":{"injectables/SidebarService.html":{},"modules/StopRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["openstreetmap",{"_index":1091,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["option.name.tolowercase().includes(route.queryparams.q",{"_index":1707,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["optional",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["options",{"_index":1301,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["order",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"index.html":{}}}],["order:2",{"_index":1446,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["order:3",{"_index":1448,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["otherwise",{"_index":389,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["ourcustomcontrol",{"_index":1272,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["out",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["outlet",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":860,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["outputs",{"_index":821,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["outside",{"_index":1608,"title":{},"body":{"components/RouteListComponent.html":{}}}],["overflow",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{}}}],["overflow:auto",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow:hidden",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow:none",{"_index":1489,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["overlay",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["overlayzindex",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["overservable",{"_index":1840,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["overview",{"_index":2347,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":609,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/RetryDialogComponent.html":{},"components/StopInfoComponent.html":{}}}],["p(*ngif=\"data.code",{"_index":1564,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["p(matline",{"_index":1773,"title":{},"body":{"components/SidebarComponent.html":{},"components/TripPassagesComponent.html":{}}}],["package",{"_index":1763,"title":{"dependencies.html":{}},"body":{"components/SidebarComponent.html":{},"miscellaneous/functions.html":{}}}],["padding",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["padding:0px",{"_index":1611,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["padding:20px",{"_index":1492,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["padding:5px",{"_index":1914,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["param",{"_index":415,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"classes/UserLocationSubscriber.html":{}}}],["parameter",{"_index":1924,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["params",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{}}}],["paramsorqueryparamschange",{"_index":1712,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["passage",{"_index":709,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{},"components/TripPassagesComponent.html":{}}}],["passage.directions",{"_index":1602,"title":{},"body":{"components/RouteListComponent.html":{}}}],["passage?.actualtime",{"_index":2158,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.shortname",{"_index":1601,"title":{},"body":{"components/RouteListComponent.html":{}}}],["passage?.status",{"_index":2161,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.stop?.name",{"_index":2156,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.stop?.shortname]\",role=\"listitem",{"_index":2147,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.component",{"_index":2179,"title":{},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.component.pug",{"_index":1153,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["passages.component.scss",{"_index":1152,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["passages.component.ts",{"_index":1136,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passages.component.ts:109",{"_index":2115,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:116",{"_index":2116,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:141",{"_index":2117,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:150",{"_index":2114,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:39",{"_index":2123,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:50",{"_index":2125,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:61",{"_index":2127,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:71",{"_index":2129,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:78",{"_index":2131,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:85",{"_index":2132,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:88",{"_index":2118,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:89",{"_index":2121,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:90",{"_index":2120,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:91",{"_index":2119,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:92",{"_index":2113,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.module').then(m",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["passages.module.ts",{"_index":2176,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["passages.resolver",{"_index":2181,"title":{},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.resolver.ts",{"_index":2182,"title":{},"body":{"guards/TripPassagesResolver.html":{},"coverage.html":{}}}],["passages.resolver.ts:12",{"_index":2184,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["passages.resolver.ts:9",{"_index":2183,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["passages/follow",{"_index":912,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["passages/trip",{"_index":572,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passages?mode=departure",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"modules/SearchRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["path.color",{"_index":981,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["path.waypoints",{"_index":974,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["paths",{"_index":935,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["paused",{"_index":1145,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["performing",{"_index":610,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["pg0kpc9mawx0zxi+dqo8l2rlznm+dqo8bwfzaybpzd0iysi+dqo8cmvjdcb3",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg0kphrlehqgy2xhc3m9imhlyxz5iib4psiznciget0indyiigzpbgw9imjsywnriibzdhjv",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":538,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pipe(catcherror((err",{"_index":1935,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["pipe(debouncetime(30000",{"_index":2212,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["pipe(map((a",{"_index":1873,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["pipe(map((dismissnotice",{"_index":548,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["pipe(map((loc",{"_index":1001,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pipe(map((tapedvalue",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(map((val",{"_index":1665,"title":{},"body":{"components/SearchComponent.html":{}}}],["pipe(map((value",{"_index":670,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["pipe(take(1",{"_index":1703,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["pipe(tap((value",{"_index":1742,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["place",{"_index":1530,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{}}}],["placeholder",{"_index":635,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["placeholder=\"stopname",{"_index":2109,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["planned",{"_index":794,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["point",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point.service",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["point.service.ts",{"_index":1966,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["point.service.ts:14",{"_index":1972,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:18",{"_index":1970,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:21",{"_index":1969,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:33",{"_index":2017,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:34",{"_index":2018,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:35",{"_index":2013,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:38",{"_index":2014,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:60",{"_index":2020,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:68",{"_index":2015,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:8",{"_index":1968,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:81",{"_index":2016,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:97",{"_index":2022,"title":{},"body":{"injectables/StopPointService.html":{}}}],["pointer",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pointlist",{"_index":972,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pointlist.push(new",{"_index":975,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pollsubscription",{"_index":1179,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["popup",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popupanchor",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pos",{"_index":817,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pos.coords.latitude",{"_index":1297,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pos.coords.longitude",{"_index":1298,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["position",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["position:fixed",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["positionerror",{"_index":2224,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["positive",{"_index":739,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["preceeding",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prediction",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["predictions",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["preload",{"_index":557,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preload(route",{"_index":558,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloading",{"_index":554,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preloadingstrategy",{"_index":556,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["pressed=\"false",{"_index":1419,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["primedmoveobservable",{"_index":1314,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["private",{"_index":493,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["production",{"_index":1040,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":1633,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["projects",{"_index":1779,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1739,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["properties",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["protected",{"_index":1074,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["provide",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":697,"title":{},"body":{"components/DepartureListComponent.html":{},"directives/MainMapDirective.html":{},"guards/StopInfoResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"index.html":{}}}],["providedin",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["providers",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["public",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["publish",{"_index":510,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["pug",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["pwa",{"_index":1041,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["q",{"_index":2100,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["query_builder",{"_index":782,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["queryparams",{"_index":1212,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["queryparams.subscribe((value",{"_index":1660,"title":{},"body":{"components/SearchComponent.html":{}}}],["qyanls8vvzndly9eveqgu1zhideums8vru4nicanahr0cdovl3d3dy53my5v",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["reactiveformsmodule",{"_index":1462,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["readable",{"_index":1832,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["readonly",{"_index":1044,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["reads",{"_index":2325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["red",{"_index":1573,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["redirects",{"_index":1925,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["redirectto",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["refreshobservable",{"_index":1879,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["reject",{"_index":1740,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["relative",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1200,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["remaining",{"_index":1430,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["replaceurl",{"_index":2101,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["replaying",{"_index":518,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["report",{"_index":498,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["report(err",{"_index":512,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["reportable",{"_index":405,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["res",{"_index":2236,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["reset",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["resize",{"_index":828,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["resize(e",{"_index":844,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["resolve",{"_index":1693,"title":{},"body":{"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["resolve(route",{"_index":1696,"title":{},"body":{"guards/SearchResultResolver.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["resolver",{"_index":2058,"title":{},"body":{"guards/StopsResolver.html":{}}}],["resolves",{"_index":1922,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["responds",{"_index":1926,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["response",{"_index":379,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopsResolver.html":{}}}],["result",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.resolver",{"_index":1687,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["result.resolver.ts",{"_index":1692,"title":{},"body":{"guards/SearchResultResolver.html":{},"coverage.html":{}}}],["result.resolver.ts:12",{"_index":1700,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["result.resolver.ts:9",{"_index":1695,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["resultobservable",{"_index":1645,"title":{},"body":{"components/SearchComponent.html":{}}}],["results",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retried",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1169,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["retrieved",{"_index":1159,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["retrieves",{"_index":1994,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["retrieving",{"_index":1977,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{}}}],["retry",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["retrydialogcomponent",{"_index":324,"title":{"components/RetryDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["retrydialogdata",{"_index":1550,"title":{"classes/RetryDialogData.html":{}},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"coverage.html":{}}}],["retrydialogmodule",{"_index":1578,"title":{"modules/RetryDialogModule.html":{}},"body":{"modules/RetryDialogModule.html":{},"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["retrydialogstrategy",{"_index":2068,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["retrydialogstrategyfunc",{"_index":2357,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrydialogstrategyfuncresponse",{"_index":2358,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["retrying",{"_index":2142,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["retrysubject",{"_index":1981,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["retrywhen",{"_index":2067,"title":{},"body":{"guards/StopsResolver.html":{}}}],["retrywhen(retrydialogstrategy((error",{"_index":2074,"title":{},"body":{"guards/StopsResolver.html":{}}}],["return",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/functions.html":{}}}],["rgb(87",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0,0,0,0.7",{"_index":1501,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["rgba(255,255,255,0.1",{"_index":1452,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["right",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["right:$rightpadding",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["right:0px",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["right:unset",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["rightpadding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["riseoffset",{"_index":1349,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["riseonhover",{"_index":1350,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["root",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["root'},{'name",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["rotated",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotatedmarker",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["rotating",{"_index":1047,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["rotationangle",{"_index":1338,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["round",{"_index":881,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["route",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"index.html":{}}}],["route.path.startswith('error",{"_index":564,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["routelistcomponent",{"_index":327,"title":{"components/RouteListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeloadingindicatorcomponent",{"_index":328,"title":{"components/RouteLoadingIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeloadingsubscriber",{"_index":1624,"title":{"classes/RouteLoadingSubscriber.html":{}},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["routeloadingsubscriber(this",{"_index":1631,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["routename",{"_index":1170,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["routepolylines",{"_index":917,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["router",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["routerevent",{"_index":1394,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["routermodule",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainToolbarModule.html":{},"modules/SearchRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["routermodule.forchild(errorroutes",{"_index":910,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["routermodule.forchild(trippassagesroute",{"_index":1713,"title":{},"body":{"modules/SearchRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":1932,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["routerstatesnapshot",{"_index":1699,"title":{},"body":{"guards/SearchResultResolver.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["routes",{"_index":567,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"modules/SearchRoutingModule.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{},"routes.html":{}}}],["routes(*ngif=\"!hasroutes",{"_index":1604,"title":{},"body":{"components/RouteListComponent.html":{}}}],["routes(deps",{"_index":1597,"title":{},"body":{"components/RouteListComponent.html":{}}}],["routesnapshot",{"_index":1931,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["routessubscriber",{"_index":958,"title":{"classes/RoutesSubscriber.html":{}},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["routessubscriber(this",{"_index":1034,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["routes|routes@@routes\",label=\"routes",{"_index":1907,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["routing.module",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorModule.html":{},"modules/SearchModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["routing.module.ts",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["row",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["run",{"_index":641,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["runguardsandresolvers",{"_index":1711,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["rxjs",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":526,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["sa",{"_index":1094,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["same",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["search'},{'name",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["search((focussearch)=\"onfocussearch($event",{"_index":1421,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["search.component",{"_index":1688,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["search.component.pug",{"_index":1644,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1643,"title":{},"body":{"components/SearchComponent.html":{}}}],["search@@stopnametosearch\",(ngsubmit)=\"onsubmit()\",(keyup.enter)=\"onsubmit",{"_index":2111,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["search@@stopnametosearch\",i18n",{"_index":2110,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchborderradius",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["searchboxcomponent",{"_index":1375,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["searchcomponent",{"_index":331,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchcontrol",{"_index":2079,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searches",{"_index":1999,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["searchinput",{"_index":2080,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchmodule",{"_index":1680,"title":{"modules/SearchModule.html":{}},"body":{"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchopen",{"_index":1378,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["searchopen(open",{"_index":1402,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["searchparamsubscription",{"_index":1646,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchresultresolver",{"_index":1686,"title":{"guards/SearchResultResolver.html":{}},"body":{"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"coverage.html":{}}}],["searchroutingmodule",{"_index":1684,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["searchstop",{"_index":2012,"title":{},"body":{"injectables/StopPointService.html":{}}}],["searchstop(stopshortname",{"_index":2002,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["seconds@@refreshinginxseconds\",subtitle=\"refreshing",{"_index":1897,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["seems",{"_index":1077,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["select",{"_index":1488,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["selector",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["self",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":416,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopInfoResolver.html":{}}}],["server_error",{"_index":1149,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":382,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["services",{"_index":1143,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["services/app",{"_index":395,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["services/settings.service",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["services/sidebar.service",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["services/stop",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["services/user",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["serviceworkermodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":660,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setdeparture(deps",{"_index":753,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["setdepartures(deps",{"_index":702,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["setlocation(loc",{"_index":944,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/StopLocationMapDirective.html":{}}}],["setposition",{"_index":820,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["setposition(e",{"_index":850,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["setroutepaths",{"_index":923,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["setroutepaths(paths",{"_index":933,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["setroutes(deps",{"_index":1594,"title":{},"body":{"components/RouteListComponent.html":{}}}],["sets",{"_index":643,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setsearchopen(open",{"_index":1390,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["settargettime(timestamp",{"_index":653,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["settings",{"_index":1075,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["settings.scss",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["settingsinitializer",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsloadsubscriber",{"_index":1714,"title":{"classes/SettingsLoadSubscriber.html":{}},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["settingsloadsubscriber(resolve",{"_index":1744,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":441,"title":{"injectables/SettingsService.html":{}},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":1214,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["setuserlocation(coords",{"_index":1113,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setvehicles",{"_index":1233,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["setvehicles(vehicles",{"_index":1246,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["setview(this.settings.getinitialmapcenter",{"_index":1086,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["shadow",{"_index":1495,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["shadow.png",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowanchor",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowsize",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowurl",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared",{"_index":2007,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["sharedreplay",{"_index":1980,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["sharereplay",{"_index":1973,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["sharereplay(1",{"_index":1992,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["short",{"_index":1167,"title":{},"body":{"interfaces/IPassageStatus.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{}}}],["shortname",{"_index":2001,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["sidebar",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar\",role=\"button\",aria",{"_index":1418,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["sidebar'},{'name",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["sidebar.component",{"_index":1793,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.pug",{"_index":1753,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1752,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar@@togglesidebar\",aria",{"_index":1417,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["sidebarcomponent",{"_index":333,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":440,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidebarobservable",{"_index":1798,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidebaropen",{"_index":1797,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidebarservice",{"_index":137,"title":{"injectables/SidebarService.html":{}},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"coverage.html":{}}}],["sidenav",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav.main",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavcontainer",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":1080,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["size",{"_index":623,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["skiplocationchange",{"_index":2103,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["smoothfactor",{"_index":984,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["snackbar",{"_index":1237,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["snapshot",{"_index":2065,"title":{},"body":{"guards/StopsResolver.html":{}}}],["snapshotdatasubscription",{"_index":1178,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["solid",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["sort((a",{"_index":1708,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["sourcetarget",{"_index":1360,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["space",{"_index":1431,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["span(appcountdowntimer,[targettime]=\"lasttimestamp",{"_index":2143,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(class=\"demo",{"_index":2159,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(role=\"timer",{"_index":2157,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(title=\"angular",{"_index":1782,"title":{},"body":{"components/SidebarComponent.html":{}}}],["span(title=\"app",{"_index":1781,"title":{},"body":{"components/SidebarComponent.html":{}}}],["span.delay",{"_index":715,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["span.pattern",{"_index":803,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["span.subtitle",{"_index":1503,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.subtitle(*ngif=\"subtitle!==undefined\",title=\"{{subtitle",{"_index":1484,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.text",{"_index":2141,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span.title",{"_index":1502,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["span.title(*ngif=\"title!==undefined\",trole=\"heading\",aria",{"_index":1482,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.title(i18n=\"@@anerroroccured",{"_index":2140,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span[appcountdowntimer",{"_index":630,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["span[appcountdowntimer]'},{'name",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["src/.../app",{"_index":2321,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.module.ts",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.example.pwa.ts",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.example.ts",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../icons.ts",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2359,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../leaflet",{"_index":2322,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../retry",{"_index":2354,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../trip",{"_index":2323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":356,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/drawable.directive.ts",{"_index":814,"title":{},"body":{"directives/DrawableDirective.html":{},"coverage.html":{}}}],["src/app/drawable.directive.ts:11",{"_index":831,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:15",{"_index":849,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:21",{"_index":843,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:26",{"_index":839,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:31",{"_index":837,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:36",{"_index":841,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:56",{"_index":845,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:61",{"_index":851,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:66",{"_index":846,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:7",{"_index":858,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:70",{"_index":847,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:8",{"_index":856,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:9",{"_index":854,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/leaflet",{"_index":951,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["src/app/leaflet/constants.ts",{"_index":2248,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/leaflet/icons.ts",{"_index":2253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models",{"_index":952,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["src/app/models/index.ts",{"_index":592,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/ITimestampVehicleLocation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/common/countdown",{"_index":626,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"coverage.html":{}}}],["src/app/modules/common/leaflet",{"_index":1045,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/common/map",{"_index":1471,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"coverage.html":{}}}],["src/app/modules/common/retry",{"_index":1540,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"coverage.html":{}}}],["src/app/modules/error/common",{"_index":601,"title":{},"body":{"components/CommonErrorComponent.html":{},"coverage.html":{}}}],["src/app/modules/error/error",{"_index":908,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["src/app/modules/error/error.module.ts",{"_index":904,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/modules/error/not",{"_index":1523,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/main",{"_index":1227,"title":{},"body":{"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["src/app/modules/routing/search/search",{"_index":1691,"title":{},"body":{"guards/SearchResultResolver.html":{},"modules/SearchRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/routing/search/search.component.ts",{"_index":1642,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/modules/routing/search/search.component.ts:14",{"_index":1656,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/modules/routing/search/search.component.ts:17",{"_index":1652,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/modules/routing/search/search.component.ts:18",{"_index":1654,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/modules/routing/search/search.component.ts:19",{"_index":1649,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/modules/routing/search/search.component.ts:24",{"_index":1651,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/modules/routing/search/search.component.ts:38",{"_index":1650,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/modules/routing/search/search.module.ts",{"_index":1685,"title":{},"body":{"modules/SearchModule.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts",{"_index":1751,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:14",{"_index":1758,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:18",{"_index":1759,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:26",{"_index":1761,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:34",{"_index":1765,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:9",{"_index":1757,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.module.ts",{"_index":1792,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/modules/stop/departure",{"_index":687,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"coverage.html":{}}}],["src/app/modules/stop/route",{"_index":1586,"title":{},"body":{"components/RouteListComponent.html":{},"coverage.html":{}}}],["src/app/modules/stop/stop",{"_index":1813,"title":{},"body":{"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/stop/stop.module.ts",{"_index":1958,"title":{},"body":{"modules/StopModule.html":{}}}],["src/app/modules/stops/stops",{"_index":2023,"title":{},"body":{"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/stops/stops.module.ts",{"_index":2052,"title":{},"body":{"modules/StopsModule.html":{}}}],["src/app/modules/stops/stops.resolver.ts",{"_index":2057,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{}}}],["src/app/modules/stops/stops.resolver.ts:16",{"_index":2061,"title":{},"body":{"guards/StopsResolver.html":{}}}],["src/app/modules/stops/stops.resolver.ts:32",{"_index":2062,"title":{},"body":{"guards/StopsResolver.html":{}}}],["src/app/modules/trip",{"_index":911,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/rxjs",{"_index":2069,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/services",{"_index":953,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:21",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:25",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:29",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:32",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:35",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:38",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:41",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:44",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:54",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:58",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:62",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app",{"_index":491,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/settings.service",{"_index":954,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts",{"_index":1715,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings.service.ts:13",{"_index":1722,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":1720,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts:29",{"_index":1746,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:35",{"_index":1750,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:39",{"_index":1747,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:47",{"_index":1748,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:54",{"_index":1749,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:8",{"_index":1719,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/sidebar.service",{"_index":1395,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/SidebarComponent.html":{}}}],["src/app/services/sidebar.service.ts",{"_index":1794,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/services/sidebar.service.ts:11",{"_index":1807,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:14",{"_index":1799,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:17",{"_index":1802,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:21",{"_index":1801,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:25",{"_index":1800,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:8",{"_index":1805,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/stop",{"_index":1702,"title":{},"body":{"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":955,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["src/environments/app",{"_index":2286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/environments/environment.base.ts",{"_index":1038,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":2288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.example",{"_index":1766,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/environments/environment.example.pwa.ts",{"_index":2289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.example.ts",{"_index":2290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":2030,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["start",{"_index":1051,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2327,"title":{"index.html":{}},"body":{}}],["startupdater",{"_index":1938,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["startvehicleupdater",{"_index":1234,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["startwith",{"_index":525,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["startwith(undefined",{"_index":1984,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["state",{"_index":1698,"title":{},"body":{"guards/SearchResultResolver.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["statements",{"_index":2240,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["station",{"_index":2063,"title":{},"body":{"guards/StopsResolver.html":{}}}],["stations",{"_index":2059,"title":{},"body":{"guards/StopsResolver.html":{}}}],["stationsresponse",{"_index":2071,"title":{},"body":{"guards/StopsResolver.html":{}}}],["status",{"_index":728,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"components/TripPassagesComponent.html":{}}}],["statuscode",{"_index":1164,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["statusicon",{"_index":727,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["statusops",{"_index":1176,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["stop",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.longitude",{"_index":1348,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.name",{"_index":1351,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.shortname",{"_index":1998,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stop_icon_shadow_url",{"_index":2249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stop_icon_shadow_url_base64",{"_index":2250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stop_icon_url",{"_index":2251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stop_icon_url_base64",{"_index":2252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stopicon",{"_index":1950,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["stopid",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{}}}],["stopidobvservable",{"_index":1871,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["stopidobvservable.pipe(map((id",{"_index":1875,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["stopinfo",{"_index":1826,"title":{},"body":{"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{}}}],["stopinfocomponent",{"_index":335,"title":{"components/StopInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopinforesolver",{"_index":1920,"title":{"guards/StopInfoResolver.html":{}},"body":{"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"coverage.html":{}}}],["stoplist",{"_index":1344,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stoplist.push(markert",{"_index":1353,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stoplocation",{"_index":1821,"title":{},"body":{"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["stoplocationmapdirective",{"_index":352,"title":{"directives/StopLocationMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stoplocations",{"_index":1993,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationsobservable",{"_index":2008,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationsubject",{"_index":1937,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["stopmarkerlayer",{"_index":918,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopmarkeronclick",{"_index":1235,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["stopmarkeronclick(event",{"_index":1249,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopmodule",{"_index":1953,"title":{"modules/StopModule.html":{}},"body":{"modules/StopModule.html":{},"modules.html":{},"overview.html":{}}}],["stoppointloadsubscriber",{"_index":1965,"title":{"classes/StopPointLoadSubscriber.html":{}},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["stoppointservice",{"_index":442,"title":{"injectables/StopPointService.html":{}},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["stoproutingmodule",{"_index":1957,"title":{"modules/StopRoutingModule.html":{}},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["stops",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stops.resolver",{"_index":2056,"title":{},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["stops;let",{"_index":2037,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["stopservice",{"_index":1236,"title":{},"body":{"directives/MainMapDirective.html":{},"guards/SearchResultResolver.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopshortname",{"_index":1995,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stopsinfocomponent",{"_index":338,"title":{"components/StopsInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopsmodule",{"_index":2047,"title":{"modules/StopsModule.html":{}},"body":{"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["stopsresolver",{"_index":2055,"title":{"guards/StopsResolver.html":{}},"body":{"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"coverage.html":{}}}],["stopsroutingmodule",{"_index":2051,"title":{"modules/StopsRoutingModule.html":{}},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["strategy",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.ts",{"_index":555,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategy.ts:5",{"_index":561,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stretch",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{}}}],["string",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["stuff",{"_index":1775,"title":{},"body":{"components/SidebarComponent.html":{}}}],["style",{"_index":1606,"title":{},"body":{"components/RouteListComponent.html":{}}}],["styles",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["subdomains",{"_index":1099,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["subheader",{"_index":2040,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["subject",{"_index":515,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{}}}],["subscribe((location",{"_index":1003,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["subscribe((open",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((stop",{"_index":1877,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subscribe((stops",{"_index":1343,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscribe((val",{"_index":2216,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscribe((value",{"_index":534,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["subscribe(new",{"_index":1033,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscribe(this.updatedata.bind(this",{"_index":1891,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subscriber",{"_index":658,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscriber((val",{"_index":1196,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["subscriber.complete",{"_index":2222,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscriber.error(error",{"_index":2225,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscriber.next(position",{"_index":2221,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscription",{"_index":651,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subtitle",{"_index":1477,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["subtitle=\"refreshing",{"_index":1896,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subtitle}}mat",{"_index":1514,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["successfully",{"_index":2337,"title":{},"body":{"index.html":{}}}],["super",{"_index":961,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super(elref",{"_index":968,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super.ngafterviewinit",{"_index":987,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super.ngondestroy",{"_index":1035,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["support",{"_index":2342,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":386,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["svg",{"_index":2343,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":773,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["tab",{"_index":1900,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tab(i18n",{"_index":1903,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["table",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["tabs,[dynamicheight]=\"true",{"_index":1902,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tag",{"_index":388,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["take",{"_index":1701,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["taken",{"_index":1328,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["tap",{"_index":1723,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["tap((value",{"_index":1990,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["tapedvalue",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targettime",{"_index":636,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["targettime(timestamp",{"_index":661,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["template",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["term",{"_index":1705,"title":{},"body":{"guards/SearchResultResolver.html":{}}}],["test",{"_index":2077,"title":{},"body":{"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{}}}],["testmat",{"_index":2169,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["text",{"_index":664,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["text(*ngif=\"delay!==false\",[ngclass]=\"{'late':(delay>0),'early':(delay",{"_index":804,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text(*ngif=\"delay!==false\",[ngclass]=\"{\\'late\\':(delay>0),\\'early\\':(delay",{"_index":813,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.early",{"_index":810,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.late",{"_index":807,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.late:before",{"_index":809,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["thanks",{"_index":1569,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["this.activatedroute",{"_index":1659,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.activatedroute.data",{"_index":1664,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.activatedroute.snapshot.data.stops.stops.sort((a",{"_index":2031,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.addmarker",{"_index":988,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.addvehiclemarker(veh",{"_index":1269,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.api",{"_index":1933,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["this.api.getstations",{"_index":1985,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.api.gettrippassages(route.params.tripid",{"_index":2185,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["this.apiservice.getroutebytripid(boundsa.vehicle.tripid",{"_index":1032,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.apiservice.getsettings",{"_index":1741,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.apiservice.getstoppassages(stopid",{"_index":1884,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.apiservice.gettrippassages(tripid",{"_index":1193,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.apiservice.getvehiclelocations(bounds",{"_index":1325,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.calculatedelay(deps",{"_index":770,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.canvas",{"_index":861,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.canvas.getcontext('2d",{"_index":864,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.cmp.setuserlocation(value",{"_index":1061,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.converttime(deps",{"_index":772,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.createnotificationqueueobservable",{"_index":533,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["this.createpositionrequest",{"_index":2214,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.createstoploadobservable",{"_index":2010,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.ctx",{"_index":863,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.beginpath",{"_index":876,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.canvas.height",{"_index":892,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.canvas.width",{"_index":890,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.clearrect(0",{"_index":897,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.getimagedata(0",{"_index":898,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.linecap",{"_index":880,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.lineto(this.pos.x",{"_index":886,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.linewidth",{"_index":878,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.moveto(this.pos.x",{"_index":884,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.stroke",{"_index":887,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.strokestyle",{"_index":882,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.data",{"_index":1661,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.dialog.open(retrydialogcomponent",{"_index":2075,"title":{},"body":{"guards/StopsResolver.html":{}}}],["this.dialogref.close(false",{"_index":1560,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["this.el.nativeelement",{"_index":862,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.erroroccured",{"_index":1885,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.focussearch.next(false",{"_index":2094,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.followmapinstance.setroutepaths(routes.paths",{"_index":963,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.getmap().addcontrol(new",{"_index":1307,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().doubleclickzoom.disable",{"_index":991,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().dragging.disable",{"_index":989,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().eachlayer((layer",{"_index":993,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().flyto(this.settings.getinitialmapcenter",{"_index":1308,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().panto",{"_index":1022,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().scrollwheelzoom.disable",{"_index":992,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().touchzoom.disable",{"_index":990,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.handlehttperrorresponse(error",{"_index":401,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.http.get(this.baseurl",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.indicatorcmp.loading",{"_index":1626,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.injector.get(appnotificationservice",{"_index":399,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.isclientoffline",{"_index":419,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.locationerrorobservable",{"_index":2211,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.asobservable",{"_index":2209,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.next(err",{"_index":2215,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.next(undefined",{"_index":2217,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.asobservable",{"_index":2210,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.next(val",{"_index":2218,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.value",{"_index":2208,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.mainmap.setvehicles(res",{"_index":1258,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.map",{"_index":1083,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.getbounds",{"_index":1065,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.on('moveend",{"_index":1105,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.on('movestart",{"_index":1103,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.mapbounds.geteast",{"_index":1323,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getnorth",{"_index":1324,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getsouth",{"_index":1321,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getwest",{"_index":1322,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapmove.next",{"_index":1104,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.mapmove.pipe",{"_index":1315,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.markeronclick.bind(this",{"_index":1263,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.matsnackbar.open(noti.title",{"_index":542,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["this.mdelay",{"_index":769,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdeparture",{"_index":768,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdeparture.status",{"_index":774,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdepartures",{"_index":705,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["this.mdepartures.length",{"_index":706,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["this.msearchopen",{"_index":1401,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.msettings",{"_index":1728,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.msidebarstatussubject.asobservable",{"_index":1809,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.msidebarstatussubject.next(!this.msidebarstatussubject.getvalue",{"_index":1810,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.msidebarstatussubject.next(false",{"_index":1812,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.msidebarstatussubject.next(true",{"_index":1811,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.msidebarstatussubject.value",{"_index":1808,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.mstopinfo",{"_index":1861,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mstoplocations",{"_index":1991,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.mstops",{"_index":2032,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.mtime",{"_index":771,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mtimerobservable",{"_index":1863,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mtimerobservable.subscribe((tick",{"_index":1866,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mtimeuntilrefresh",{"_index":1859,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.muserlocationsubscription",{"_index":1107,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.muserlocationsubscription.unsubscribe",{"_index":1134,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.newimage.emit(this.getimgdata",{"_index":867,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.notificationclosedsubject.next",{"_index":535,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["this.notificationclosedsubject.pipe(startwith(undefined",{"_index":537,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["this.notificationservice.report(err",{"_index":1988,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.notificationsubject.asobservable",{"_index":551,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["this.notificationsubject.next(noti",{"_index":550,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["this.pollsubscription",{"_index":1190,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.pollsubscription.unsubscribe",{"_index":1207,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.pos.x",{"_index":894,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.pos.y",{"_index":885,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.resolve",{"_index":1725,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.resultobservable",{"_index":1657,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.retrysubject.next",{"_index":1989,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.retrysubject.pipe(delay(10",{"_index":1983,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.route.data.pipe(map((value",{"_index":1889,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.data.subscribe((data",{"_index":1181,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.route.params",{"_index":1872,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.data.stopinfo",{"_index":1862,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.params.stopid",{"_index":1860,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.params.tripid",{"_index":1166,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.routepolylines",{"_index":970,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.routepolylines.push(firstpolyline",{"_index":986,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.router",{"_index":1629,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.router.events.subscribe(new",{"_index":1403,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.router.navigate(['error",{"_index":2072,"title":{},"body":{"guards/StopsResolver.html":{}}}],["this.router.navigate(['not",{"_index":1211,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{}}}],["this.router.navigate(['passages",{"_index":1331,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.router.navigate(['search",{"_index":2099,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.router.navigate(['stop",{"_index":1361,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.router.navigate(['stops",{"_index":1936,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["this.searchboxcomponent",{"_index":1407,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchboxcomponent.dofocussearch",{"_index":1408,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchcontrol.value",{"_index":2102,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchcontrol.valuechanges",{"_index":2095,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchopen",{"_index":1406,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchparamsubscription",{"_index":1658,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchparamsubscription.unsubscribe",{"_index":1667,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.service",{"_index":1974,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.setposition(e",{"_index":870,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.settings",{"_index":1731,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.getinitialmapzoom",{"_index":1087,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.settings.initial_lat",{"_index":1732,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.initial_lon",{"_index":1733,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.initial_zoom",{"_index":1737,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.sharedreplay",{"_index":2009,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.sidebarservice.closesidebar",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sidebarservice.opensidebar",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarservice.sidebarobservable",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarservice.togglesidebar",{"_index":1405,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.sidenav.close",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.open",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.opened",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.openedchange.subscribe((open",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.toggle",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open('no",{"_index":1299,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.snapshotdatasubscription",{"_index":1180,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.snapshotdatasubscription.unsubscribe",{"_index":1206,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.startupdater",{"_index":1948,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.startvehicleupdater",{"_index":1271,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.status.next",{"_index":1182,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.next(this.status.value",{"_index":1202,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.next(val",{"_index":1198,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.pipe(debouncetime(this.debounce_time",{"_index":1191,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value",{"_index":1156,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.passages",{"_index":1157,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.status",{"_index":1165,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.timestamp",{"_index":1161,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.statuscode",{"_index":1187,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.stopid",{"_index":1893,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stoplocation",{"_index":1878,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stoplocations",{"_index":1997,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationsobservable",{"_index":2003,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationsubject",{"_index":1949,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.stoplocationsubject.next(loc",{"_index":1947,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer",{"_index":1004,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stopmarkerlayer.addto(this.getmap",{"_index":1006,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer.clearlayers",{"_index":1005,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer.remove",{"_index":1354,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stopmarkeronclick.bind(this",{"_index":1359,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stops[idx",{"_index":2034,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.stops[idx].name.charat(0",{"_index":2033,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.stopservice.getstoplocation(id",{"_index":1876,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stopservice.stoplocationsobservable",{"_index":1342,"title":{},"body":{"directives/MainMapDirective.html":{},"guards/SearchResultResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.subscription",{"_index":1628,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.subscription.unsubscribe",{"_index":1632,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.tickinterval",{"_index":1865,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.tickstorefresh",{"_index":1868,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.timestamp",{"_index":665,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.timestampsubject",{"_index":669,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.timestampsubject.next(timestamp",{"_index":662,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.titleservice.settitle('search",{"_index":1663,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.toolbar.closeable",{"_index":1400,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.tripdata",{"_index":1171,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripdata.actual",{"_index":1173,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripdata.routename",{"_index":1172,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripid",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.updateobservable",{"_index":999,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.updateobservable.unsubscribe",{"_index":1036,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.updatesubscription",{"_index":666,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":675,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["this.userlocationlayer",{"_index":1115,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationlayer.addto(this.map",{"_index":1117,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationlayer.clearlayers",{"_index":1116,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationservice",{"_index":1108,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationservice.location",{"_index":1296,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclelocationsubject",{"_index":1000,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclelocationsubject.getvalue",{"_index":967,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclelocationsubject.next(loc",{"_index":966,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclemarkerlayer",{"_index":1259,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.addto(this.getmap",{"_index":1261,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.clearlayers",{"_index":1260,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.on('click",{"_index":1262,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehicleupdatesubscription",{"_index":1316,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehicleupdatesubscription.unsubscribe",{"_index":1363,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.zone.run",{"_index":1330,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.zone.runoutsideangular",{"_index":1076,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["throw",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwerror",{"_index":2066,"title":{},"body":{"guards/StopsResolver.html":{}}}],["throwerror(err",{"_index":2073,"title":{},"body":{"guards/StopsResolver.html":{}}}],["tick",{"_index":1848,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tickinterval",{"_index":1822,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["ticksleft",{"_index":1867,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tickstorefresh",{"_index":1823,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["time",{"_index":640,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["timeout",{"_index":2197,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["timer",{"_index":657,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["timer(this.tickinterval",{"_index":1864,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["timer.directive",{"_index":686,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["timer.directive.ts",{"_index":628,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"coverage.html":{}}}],["timer.directive.ts:17",{"_index":642,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:25",{"_index":644,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:33",{"_index":639,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:35",{"_index":647,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:36",{"_index":652,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:37",{"_index":650,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:39",{"_index":646,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:56",{"_index":645,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.module.ts",{"_index":680,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["timer/countdown",{"_index":627,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"coverage.html":{}}}],["timestamp",{"_index":597,"title":{},"body":{"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"components/TripPassagesComponent.html":{}}}],["timestampsubject",{"_index":631,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timeuntilrefresh",{"_index":1825,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["timeuntilrefresh}}s",{"_index":1898,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["title=\"@@stopname\",i18n",{"_index":1895,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["titleservice",{"_index":1648,"title":{},"body":{"components/SearchComponent.html":{}}}],["toggle",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["toggle(mat",{"_index":1413,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["togglesearch",{"_index":1377,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["togglesidebar",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"injectables/SidebarService.html":{}}}],["toolbar",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["toolbar'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["toolbar(color=\"primary\",[ngclass]=\"{'search",{"_index":1410,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar(color=\"primary\",[ngclass]=\"{\\'search",{"_index":1453,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component",{"_index":1469,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["toolbar.component.pug",{"_index":1372,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["toolbar.component.scss",{"_index":1371,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["toolbar.component.ts",{"_index":1370,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["toolbar.component.ts:12",{"_index":1522,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["toolbar.component.ts:28",{"_index":1389,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":1391,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:35",{"_index":1385,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:37",{"_index":1387,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:39",{"_index":1379,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:46",{"_index":1380,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:49",{"_index":1384,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:53",{"_index":1382,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:56",{"_index":1383,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:7",{"_index":1521,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["toolbar.main",{"_index":1409,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.module",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.module.ts",{"_index":1460,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["toolbar/main",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["toolbar/route",{"_index":1613,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["toolbar/search",{"_index":2078,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["toolbarsearchboxcomponent",{"_index":340,"title":{"components/ToolbarSearchBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["top:0px",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SearchComponent.html":{}}}],["top:100px",{"_index":1677,"title":{},"body":{"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["topleft",{"_index":1304,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["toppadding",{"_index":1675,"title":{},"body":{"components/SearchComponent.html":{}}}],["topright",{"_index":1305,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["transform",{"_index":2165,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["transition",{"_index":1511,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["trapeze",{"_index":2328,"title":{},"body":{"index.html":{}}}],["tree",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["tried",{"_index":1158,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["trigger",{"_index":1199,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["trip",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trip_origin",{"_index":2151,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["tripdata",{"_index":1155,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["tripdata?.directiontext",{"_index":2134,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["tripid",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassages",{"_index":1151,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassages\",[routerlink]=\"['/stop",{"_index":2146,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["trippassages\",[routerlink]=\"[\\'/stop",{"_index":2170,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["trippassagescomponent",{"_index":341,"title":{"components/TripPassagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["trippassageslocation",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["trippassagesmodule",{"_index":2171,"title":{"modules/TripPassagesModule.html":{}},"body":{"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["trippassagesresolver",{"_index":2180,"title":{"guards/TripPassagesResolver.html":{}},"body":{"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{}}}],["trippassagesroute",{"_index":1710,"title":{},"body":{"modules/SearchRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassagesroutingmodule",{"_index":2175,"title":{"modules/TripPassagesRoutingModule.html":{}},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["true",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopRoutingModule.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":409,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2351,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1177,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["types",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"interfaces/ITimestampVehicleLocation.html":{},"directives/MainMapDirective.html":{},"components/SearchComponent.html":{},"guards/SearchResultResolver.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["types/dist/vehicle",{"_index":764,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["types/leaflet",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1605,"title":{},"body":{"components/RouteListComponent.html":{}}}],["uncaught",{"_index":406,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["undefined",{"_index":543,"title":{},"body":{"injectables/AppNotificationService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["unknown",{"_index":1146,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unset",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":1162,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{}}}],["updatedata",{"_index":1824,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["updatedata(data",{"_index":1836,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["updateobservable",{"_index":919,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["updates",{"_index":1079,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["updatestatus",{"_index":1138,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updatestatus.error",{"_index":1188,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.loaded",{"_index":1184,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.loading",{"_index":1163,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.not_found",{"_index":1210,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatesubscription",{"_index":632,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["usage",{"_index":2335,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":383,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1111,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userlocationlayer",{"_index":1073,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userlocationservice",{"_index":443,"title":{"injectables/UserLocationService.html":{}},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["userlocationsubscriber",{"_index":1058,"title":{"classes/UserLocationSubscriber.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["userlocationsubscriber(this",{"_index":1110,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userposition",{"_index":1119,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["uses",{"_index":1435,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["using",{"_index":1433,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["util",{"_index":2070,"title":{},"body":{"guards/StopsResolver.html":{}}}],["util/retry",{"_index":2281,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":674,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["val.passages.tripid",{"_index":1197,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["val.results",{"_index":1666,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SearchComponent.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.coords",{"_index":1062,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["value.length",{"_index":2097,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["value.q",{"_index":1662,"title":{},"body":{"components/SearchComponent.html":{}}}],["value.stopinfo",{"_index":1890,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["value.stops",{"_index":1986,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["value[0",{"_index":540,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["value[1",{"_index":1317,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["values",{"_index":2341,"title":{},"body":{"index.html":{}}}],["var",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["variable",{"_index":2245,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2360,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veh",{"_index":1265,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["veh.isdeleted",{"_index":1267,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle",{"_index":600,"title":{},"body":{"interfaces/Bounds.html":{},"components/DepartureListItemComponent.html":{},"interfaces/ITimestampVehicleLocation.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["vehicle.heading",{"_index":1339,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.longitude",{"_index":1337,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.name",{"_index":1340,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.name.split",{"_index":1334,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle_status",{"_index":761,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.departed",{"_index":778,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.planned",{"_index":781,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.predicted",{"_index":776,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.stopping",{"_index":779,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicleicon",{"_index":1007,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicleid",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["vehicleloadsubscriber",{"_index":1255,"title":{"classes/VehicleLoadSubscriber.html":{}},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["vehicleloadsubscriber(this",{"_index":1327,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehiclelocationsubject",{"_index":920,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["vehiclemarker",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vehiclemarkerlayer",{"_index":1229,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicles",{"_index":1247,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicles.vehicles",{"_index":1266,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicleupdatesubscription",{"_index":1230,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["version",{"_index":1042,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version.full",{"_index":1770,"title":{},"body":{"components/SidebarComponent.html":{}}}],["version.ts",{"_index":2287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["via",{"_index":1930,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["viewchild",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["viewchild('mapcontainer",{"_index":1068,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["viewchild('searchinput",{"_index":2092,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["viewchild(drawabledirective",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsidenav",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsidenavcontainer",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(toolbarsearchboxcomponent",{"_index":1386,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["viewed",{"_index":506,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["void",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SearchComponent.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["waits",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warning",{"_index":1774,"title":{},"body":{"components/SidebarComponent.html":{}}}],["waypoint",{"_index":973,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["waypoint.lon",{"_index":977,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["weight",{"_index":805,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["white",{"_index":1282,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["width",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SearchComponent.html":{},"components/StopsInfoComponent.html":{}}}],["width:#{$boxmaxwidth",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["width:$boxmaxwidth",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["width:100",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["width:100vw",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["width:439px",{"_index":1444,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["width:440px",{"_index":1449,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["width:64px",{"_index":620,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["window.innerheight",{"_index":893,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["window.innerwidth",{"_index":891,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["window.open('https://github.com/donmahallem/trapezeclientng",{"_index":1767,"title":{},"body":{"components/SidebarComponent.html":{}}}],["worker",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["wrapper",{"_index":1064,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["x",{"_index":857,"title":{},"body":{"directives/DrawableDirective.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["y",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"directives/DrawableDirective.html":{},"components/StopsInfoComponent.html":{}}}],["y2lyy2xlign4psizncigy3k9ijm0iibypsizmiigbwfzaz0idxjskcnhksig",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y2xhc3m9imhlyxz5iib4psiznciget0indyiigzpbgw9imjsywnriibzdhjv",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y:auto",{"_index":1783,"title":{},"body":{"components/SidebarComponent.html":{}}}],["ybpzd0iysi+dqo8cmvjdcb3awr0ad0imtawiibozwlnahq9ijewmcigzmlsbd0ii2zmziiv",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1638,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["z",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["zero",{"_index":742,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["zgrszsi+sdwvdgv4dd4ncjwvbwfzaz4ncjxnigzpbhrlcj0idxjskcniksig",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zindexoffset",{"_index":1018,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["zip",{"_index":523,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["zip(this.notificationsubject",{"_index":536,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IAppNotificationDismiss.html":{}}}],["zone",{"_index":925,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["zone.js",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SearchModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":1085,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["zpsjodhrwoi8vd3d3lnczlm9yzy8ymdawl3n2zyi+dqo8c3r5bgu+lmhlyxz5ihsgzm9udd",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                getRouteByTripId\n                            \n                            \n                                    Public\n                                getRouteByVehicleId\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getStations\n                            \n                            \n                                    Public\n                                getStopInfo\n                            \n                            \n                                    Public\n                                getStopPassages\n                            \n                            \n                                    Public\n                                getTripPassages\n                            \n                            \n                                    Public\n                                getVehicleLocation\n                            \n                            \n                                    Public\n                                getVehicleLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            baseUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    baseUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRouteByTripId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteByTripId(tripId: TripId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                            TripId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRouteByVehicleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteByVehicleId(vehicleId: VehicleId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                            VehicleId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopInfo(stopId: StopId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopId\n                                    \n                                            StopId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopPassages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopPassages(stopId: StopId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopId\n                                    \n                                            StopId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTripPassages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTripPassages(tripId: TripId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                            TripId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVehicleLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVehicleLocation(vehicleId: VehicleId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                            VehicleId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVehicleLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVehicleLocations(bounds: IMapBounds)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                IMapBounds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n    ISettings,\n    IStopInfo,\n    IStopLocations,\n    IStopPassage,\n    IVehicleLocation,\n    IVehicleLocationList,\n    StopId,\n    TripId,\n    VehicleId,\n} from '@donmahallem/trapeze-api-types';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { TripPassagesLocation } from '../models';\nimport { IMapBounds } from '../modules/common/leaflet-map.component';\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiService {\n\n    constructor(private http: HttpClient) { }\n\n    public baseUrl(): string {\n        return environment.apiEndpoint.endsWith('\\/') ? environment.apiEndpoint : (environment.apiEndpoint + '\\/');\n    }\n\n    public getTripPassages(tripId: TripId): Observable {\n        return this.http.get(this.baseUrl() + 'api/trip/' + tripId + '/passages?mode=departure');\n    }\n    public getRouteByVehicleId(vehicleId: VehicleId): Observable {\n        return this.http.get(this.baseUrl() + 'api/vehicle/' + vehicleId + '/route');\n    }\n    public getRouteByTripId(tripId: TripId): Observable {\n        return this.http.get(this.baseUrl() + 'api/trip/' + tripId + '/route');\n    }\n    public getStopInfo(stopId: StopId): Observable {\n        return this.http.get(this.baseUrl() + 'api/stop/' + stopId + '/info');\n    }\n    public getStopPassages(stopId: StopId): Observable {\n        return this.http.get(this.baseUrl() + 'api/stop/' + stopId + '/departures');\n    }\n    public getVehicleLocations(bounds: IMapBounds): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/vehicles', {\n            params: {\n                bottom: '' + Math.round(bounds.bottom * 3600000),\n                left: '' + Math.round(bounds.left * 3600000),\n                right: '' + Math.round(bounds.right * 3600000),\n                top: '' + Math.round(bounds.top * 3600000),\n            },\n        });\n    }\n    public getVehicleLocation(vehicleId: VehicleId): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/vehicle/' + vehicleId);\n    }\n\n    public getStations(): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/stops');\n    }\n\n    public getSettings(): Observable {\n        return this.http.get(this.baseUrl() + 'api/settings');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                prediction\n                            \n                            \n                                predictions\n                            \n                            \n                                sidenav\n                            \n                            \n                                sidenavContainer\n                            \n                            \n                                title\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onVoted\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isSidenavOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onVoted\n                        \n                        \n                    \n                \n            \n            \n                \nonVoted(agreed: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    agreed\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(DrawableDirective, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prediction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            predictions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenavContainer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenavContainer, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tripId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isSidenavOpen\n                    \n                \n\n                \n                    \n                        getisSidenavOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavContainer } from '@angular/material';\nimport { DrawableDirective } from './drawable.directive';\nimport { SidebarService } from './services/sidebar.service';\n@Component({\n    selector: 'app-root',\n    styleUrls: ['./app.component.scss'],\n    templateUrl: './app.component.pug',\n})\nexport class AppComponent implements OnInit {\n\n    public get isSidenavOpen(): boolean {\n        return this.sidenav.opened;\n    }\n    title = 'app';\n    prediction: any;\n\n    @ViewChild(MatSidenavContainer, { static: true })\n    sidenavContainer: MatSidenavContainer;\n    @ViewChild(MatSidenav, { static: true })\n    sidenav: MatSidenav;\n    predictions: any;\n    tripId: string;\n    @ViewChild(DrawableDirective, { static: false }) canvas;\n    constructor(private sidebarService: SidebarService) {\n    }\n    ngOnInit() {\n        this.sidebarService.sidebarObservable\n            .subscribe((open) => {\n                if (open) {\n                    this.sidenav.open();\n                } else {\n                    this.sidenav.close();\n                }\n            });\n        this.sidenav.openedChange.subscribe((open) => {\n            if (open) {\n                this.sidebarService.openSidebar();\n            } else {\n                this.sidebarService.closeSidebar();\n            }\n        });\n    }\n    onVoted(agreed: any) {\n        this.tripId = agreed.tripId;\n    }\n\n    public toggleSidebar(): void {\n        this.sidenav.toggle();\n    }\n\n}\n\n    \n\n    \n        mat-sidenav-container.main-container(#sidenavContainer,[hasBackdrop]=\"true\")\n    mat-sidenav.main-nav(#sidenav,mode=\"over\")\n        app-sidebar\n    mat-sidenav-content\n        map(appMainMap)\n        .overlay-box\n            .router-box\n                router-outlet\n            app-main-toolbar\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    padding: 0px;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    overflow: hidden;\n    flex-direction: column;\n    display: flex;\n}\n\n@import './box-settings.scss';\nmat-sidenav-container {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: row;\n}\n\nmat-sidenav-content{\n    align-self: stretch;\n    display:block;\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    position:fixed;\n}\nmap[appMainMap]{\n    height:100%;\n    width:100%;\n    display:block;\n}\n\nbutton.sidebar-toggle {\n    position: absolute;\n    top: 8px;\n    left: 16px;\n    z-index: 10001;\n}\n\nmat-sidenav.main-nav {\n    width: 100%;\n    max-width: 400px;\n    display: flex;\n    overflow: hidden;\n}\n\n@import '~@angular/material/theming';\n\n$searchBorderRadius: 8px;\n\napp-main-toolbar{\n    max-width: $boxMaxWidth;\n    position: absolute;\n    top:0px;\n    left:0px;\n    right:0px;\n    margin:$boxMarginVertical auto 0px auto;\n    z-index: #{$overlayZIndex};\n    border-radius: $searchBorderRadius;\n    border:1px solid rgb(87, 99, 207);\n    @include mat-elevation(4);\n    overflow: hidden;\n}\n@keyframes overlay-box-expand-animation {\n    to {\n        width:100vw;\n    }\n    from {\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n    }\n}\n@keyframes overlay-box-contract-animation {\n    from {\n        width:100vw;\n    }\n    to {\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n    }\n}\n\n.overlay-box{\n    display:block;\n    z-index: #{$overlayZIndex - 1};\n    width: 100vw;\n    position: absolute;\n    top:0px;\n    left:0px;\n    right:0px;\n    bottom:0px;\n    pointer-events:none;\n    animation-name: overlay-box-expand-animation;\n    animation-duration: 1s;\n    app-main-toolbar{\n        margin:#{$boxMarginVertical} auto 0 auto;\n        pointer-events:visible;\n    }\n    .router-box{\n        z-index: #{$overlayZIndex - 1};\n        width: 100%;\n        position: absolute;\n        top:0px;\n        left:0px;\n        right:0px;\n        bottom:0px;\n        overflow:auto;\n        ::ng-deep > *:not(:first-child) {\n            background-color:#F9F9F9;\n            pointer-events:visible;\n            height:100%;\n            background-attachment: fixed;\n            display: flex;\n            flex: 1;\n            flex-direction: column;\n            overflow-y: auto;\n            @include mat-elevation(4);\n        }\n    }\n    @media (max-width: #{$boxMaxWidth + (2 * $boxMarginHorizontal)}) and (min-width: #{$boxMaxWidth + 1}){\n        app-main-toolbar{\n            border-radius: calc( #{$searchBorderRadius /(2 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n            margin-top: calc( #{$boxMarginVertical /(2 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n        }\n    }\n    @media (min-width: $breakpoint){\n        app-main-toolbar{\n            right:unset;\n            margin:$boxMarginVertical 0px 0px $boxMarginHorizontal;\n            width:$boxMaxWidth;\n        }\n    \n        // Needed for dropshadow to appear for nav box\n        $rightPadding: 20px;\n        .router-box{\n            padding-right:$rightPadding;\n        }\n    }\n\n    @media (max-width: #{$boxMaxWidth} ){\n        app-main-toolbar{\n            border-radius: 0px;\n            margin-top: 0px;\n        }\n    }\n}\n\n@media (min-width: #{$breakpoint }){\n    .overlay-box{\n        animation-name: overlay-box-contract-animation;\n        animation-duration: 1s;\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n        right:unset;\n    }\n}\n@media (max-width: #{$boxMaxWidth} ){\n    .overlay-box{\n        display:flex;\n        flex-direction: column;\n        position: absolute;\n        align-items: stretch;\n        app-main-toolbar{\n            margin:0px;\n            position: relative;\n            flex:0 0 auto;\n            order: 1;\n        }\n        .router-box{\n            position: unset;\n            flex:1 1 auto;\n            order: 2;\n            height: 100%;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-sidenav-container.main-container(#sidenavContainer,[hasBackdrop]=\"true\")    mat-sidenav.main-nav(#sidenav,mode=\"over\")        app-sidebar    mat-sidenav-content        map(appMainMap)        .overlay-box            .router-box                router-outlet            app-main-toolbar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppErrorHandler.html":{"url":"injectables/AppErrorHandler.html","title":"injectable - AppErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-error-handler.ts\n        \n\n            \n                Description\n            \n            \n                AppErrorHandler to catch global errors\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                            \n                                    Public\n                                handleHttpErrorResponse\n                            \n                            \n                                    Public\n                                isClientOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-error-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: Error | HttpErrorResponse | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:25\n                \n            \n\n\n            \n                \n                    Handles all errors\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error | HttpErrorResponse | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleHttpErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleHttpErrorResponse(errorResponse: HttpErrorResponse, notificationService: AppNotificationService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:47\n                \n            \n\n\n            \n                \n                    Handles HttpErrorResponses\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response to handle\n\n                                    \n                                \n                                \n                                    notificationService\n                                    \n                                                AppNotificationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the notification service to be used\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isClientOffline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isClientOffline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:18\n                \n            \n\n\n            \n                \n                    If the browser supports the online tag it will\nreturns its value. otherwise it will always be true\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the navigator is offline\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AppNotificationService, AppNotificationType } from './services/app-notification.service';\n\n/**\n * AppErrorHandler to catch global errors\n */\n@Injectable()\nexport class AppErrorHandler implements ErrorHandler {\n\n    public constructor(private injector: Injector) { }\n\n    /**\n     * If the browser supports the online tag it will\n     * returns its value. otherwise it will always be true\n     * @returns true if the navigator is offline\n     */\n    public isClientOffline(): boolean {\n        return (!navigator.onLine);\n    }\n\n    /**\n     * Handles all errors\n     */\n    public handleError(error: Error | HttpErrorResponse | any): void {\n        // The notification service\n        const notificationService: AppNotificationService = this.injector.get(AppNotificationService);\n        if (error instanceof HttpErrorResponse) {\n            return this.handleHttpErrorResponse(error, notificationService);\n        } else {\n            notificationService.notify({\n                message: error.message,\n                reportable: true,\n                title: 'Uncaught error occured',\n                type: AppNotificationType.ERROR,\n            });\n        }\n        // tslint:disable-next-line:no-console\n        console.error('It happens: ', error);\n    }\n\n    /**\n     * Handles HttpErrorResponses\n     * @param errorResponse the response to handle\n     * @param notificationService the notification service to be used\n     */\n    public handleHttpErrorResponse(errorResponse: HttpErrorResponse, notificationService: AppNotificationService): void {\n        // Server or connection error happened\n        if (this.isClientOffline()) {\n            // Handle offline error\n            return notificationService.notify({\n                title: 'No Internet Connection',\n                type: AppNotificationType.ERROR,\n            });\n        } else if (errorResponse.status) {\n            if (errorResponse.status >= 500 && errorResponse.status = 400 && errorResponse.status \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrawableDirective\n\nDrawableDirective\n\nAppModule -->\n\nDrawableDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainMapModule\n\nMainMapModule\n\nAppModule -->\n\nMainMapModule->AppModule\n\n\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nAppModule -->\n\nMainToolbarModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nAppNotificationService\n\nAppNotificationService\n\nAppModule -->\n\nAppNotificationService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nStopPointService\n\nStopPointService\n\nAppModule -->\n\nStopPointService->AppModule\n\n\n\n\n\nUserLocationService\n\nUserLocationService\n\nAppModule -->\n\nUserLocationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DrawableDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppNotificationService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            StopPointService\n                        \n                        \n                            UserLocationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainMapModule\n                        \n                        \n                            MainToolbarModule\n                        \n                        \n                            SidebarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { MatIconModule, MatInputModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AppErrorHandler } from './app-error-handler';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DrawableDirective } from './drawable.directive';\nimport { MainMapModule } from './modules/main-map';\nimport { MainToolbarModule } from './modules/main-toolbar/main-toolbar.module';\nimport { SidebarModule } from './modules/sidebar/sidebar.module';\nimport { AppNotificationService } from './services/app-notification.service';\nimport { SettingsService } from './services/settings.service';\nimport { StopPointService } from './services/stop-point.service';\nimport { UserLocationService } from './services/user-location.service';\n\nexport const SettingsInitializer = (appInitService: SettingsService) =>\n    (): Promise =>\n        appInitService.load();\nconst moduleImports: any[] = [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatInputModule,\n    MainMapModule,\n    MainToolbarModule,\n    SidebarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production && environment.pwa,\n    }),\n];\n@NgModule({\n    bootstrap: [AppComponent],\n    declarations: [\n        AppComponent,\n        DrawableDirective,\n    ],\n    imports: moduleImports,\n    providers: [\n        StopPointService,\n        UserLocationService,\n        SettingsService,\n        AppNotificationService,\n        {\n            deps: [SettingsService],\n            multi: true,\n            provide: APP_INITIALIZER,\n            useFactory: SettingsInitializer,\n        },\n        {\n            provide: ErrorHandler,\n            useClass: AppErrorHandler,\n        },\n    ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppNotificationService.html":{"url":"injectables/AppNotificationService.html","title":"injectable - AppNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notificationClosedSubject\n                            \n                            \n                                    Private\n                                notificationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createNotificationQueueObservable\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                report\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notificationObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matSnackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app-notification.service.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matSnackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createNotificationQueueObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNotificationQueueObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-notification.service.ts:68\n                \n            \n\n\n            \n                \n                    Creates an observable that returns the displayed Notification after it was viewed\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notify(noti: IAppNotification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-notification.service.ts:88\n                \n            \n\n\n            \n                \n                    Will publish the notification\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    noti\n                                    \n                                                IAppNotification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the notification\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            report\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    report(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-notification.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notificationClosedSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/app-notification.service.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notificationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/app-notification.service.ts:56\n                            \n                        \n\n                \n                    \n                        Subject for replaying notifcations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notificationObservable\n                    \n                \n\n                \n                    \n                        getnotificationObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/app-notification.service.ts:95\n                                \n                            \n                    \n                        \n                                The notification observable\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarDismiss } from '@angular/material';\nimport { zip, Observable, Subject } from 'rxjs';\nimport { flatMap, map, startWith } from 'rxjs/operators';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\nexport interface IAppNotificationDismiss {\n    dismissedByAction: boolean;\n    notification: IAppNotification;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    private notificationClosedSubject: Subject = new Subject();\n    constructor(private matSnackBar: MatSnackBar) {\n        this.createNotificationQueueObservable()\n            .subscribe((value): void => {\n                this.notificationClosedSubject.next();\n            });\n    }\n\n    /**\n     * Creates an observable that returns the displayed Notification after it was viewed\n     */\n    public createNotificationQueueObservable(): Observable {\n        return zip(this.notificationSubject, this.notificationClosedSubject.pipe(startWith(undefined)))\n            .pipe(\n                map((value: [IAppNotification, void]) => value[0]),\n                flatMap((noti: IAppNotification): Observable =>\n                    this.matSnackBar.open(noti.title, undefined, {\n                        announcementMessage: noti.title,\n                        duration: 2000,\n                    }).afterDismissed()\n                        .pipe(map((dismissNotice: MatSnackBarDismiss): IAppNotificationDismiss =>\n                            ({\n                                dismissedByAction: dismissNotice.dismissedByAction,\n                                notification: noti,\n                            })))));\n    }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n    public report(err: any) {\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preload\n                        \n                        \n                    \n                \n            \n            \n                \npreload(route: Route, load: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-preloading-strategy.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    load\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n  preload(route: Route, load: Function): Observable {\n    return route.path.startsWith('error') ? load() : EMPTY;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nconst appRoutes: Routes = [\n    {\n        loadChildren: () => \"import('./modules/trip-passages/trip-passages.module').then(m => m.TripPassagesModule)\",\n        path: 'passages',\n    },\n    {\n        loadChildren: () => \"import('./modules/stop/stop.module').then(m => m.StopModule)\",\n        path: 'stop',\n    },\n    {\n        loadChildren: () => \"import('./modules/stops/stops.module').then(m => m.StopsModule)\",\n        path: 'stops',\n    },\n    {\n        loadChildren: () => \"import('./modules/error/error.module').then(m => m.ErrorModule)\",\n        path: 'error',\n    },\n    {\n        loadChildren: () => \"import('./modules/routing/search/search.module').then(m => m.SearchModule)\",\n        path: 'search',\n    },\n    {\n        children: [\n        ],\n        path: '',\n    },\n    {\n        path: '**', redirectTo: '/error/not-found',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes,\n            {\n                enableTracing: false,\n                preloadingStrategy: AppPreloadingStrategy,\n            }, // \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bounds.html":{"url":"interfaces/Bounds.html","title":"interface - Bounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITripPassages, IVehicleLocation } from '@donmahallem/trapeze-api-types';\n\nexport interface Bounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport type TripPassagesLocation = ITripPassages & {\n    location: ITimestampVehicleLocation,\n};\n\nexport interface ITimestampVehicleLocation {\n    /**\n     * Timestamp of last checkup\n     */\n    timestamp: number;\n    /**\n     * Vehicle location\n     */\n    vehicle: IVehicleLocation;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommonErrorComponent.html":{"url":"components/CommonErrorComponent.html","title":"component - CommonErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommonErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/error/common-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-common-error\n            \n\n            \n                styleUrls\n                ./common-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./common-error.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/error/common-error.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n@Component({\n    selector: 'app-common-error',\n    styleUrls: ['./common-error.component.scss'],\n    templateUrl: './common-error.component.pug',\n})\nexport class CommonErrorComponent {\n\n    constructor() {\n    }\n\n}\n\n    \n\n    \n        .header\n    mat-icon help_outline\nh3 Error Occured\np An error occured while performing an action.\n    \n\n    \n                \n                    ./common-error.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    flex-flow: column;\n    height: 100%;\n    background: #F9F9F9;\n}\n\n.header{\n    position: relative;\n    height:calc(100vw / 4 * 3);\n    width:100%;\n    max-height: 250px;\n    min-height:150px;\n    background:#999999;\n    mat-icon{\n        position: absolute;\n        top:0px;\n        right:0px;\n        bottom:0px;\n        left:0px;\n        margin:auto;\n        width:64px;\n        height: 64px;\n        font-size: 64px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.header    mat-icon help_outlineh3 Error Occuredp An error occured while performing an action.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommonErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CountdownTimerDirective.html":{"url":"directives/CountdownTimerDirective.html","title":"directive - CountdownTimerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CountdownTimerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/countdown-timer/countdown-timer.directive.ts\n        \n\n            \n                Description\n            \n            \n                CountdownTimerDirective\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        span[appCountdownTimer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                timestampSubject\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                targetTime\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                innerHTML\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    targetTime\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : '-'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:33\n                            \n                        \n                \n                    \n                        Placeholder if time has run out\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        targetTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:17\n                            \n                        \n                \n                    \n                        Sets the targetTime\n\n                    \n                \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            innerHTML\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:25\n                            \n                        \n\n                \n                    \n                        The innerHtml for the directive\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestampSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        targetTime\n                    \n                \n\n\n                \n                    \n                        settargetTime(timestamp: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:17\n                                \n                            \n                    \n                        \n                                Sets the targetTime\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            timestamp\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { combineLatest, timer, BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * CountdownTimerDirective\n */\n@Directive({\n    selector: 'span[appCountdownTimer]',\n})\nexport class CountdownTimerDirective implements OnInit, OnDestroy {\n\n    /**\n     * Sets the targetTime\n     */\n    @Input()\n    public set targetTime(timestamp: number) {\n        this.timestampSubject.next(timestamp);\n    }\n\n    /**\n     * The innerHtml for the directive\n     */\n    @HostBinding('innerHTML')\n    public get text() {\n        return this.timestamp;\n    }\n\n    /**\n     * Placeholder if time has run out\n     */\n    @Input()\n    public placeholder = '-';\n\n    private timestamp = '';\n    private updateSubscription: Subscription;\n    private timestampSubject: BehaviorSubject = new BehaviorSubject(0);\n\n    public ngOnInit(): void {\n        this.updateSubscription = combineLatest([timer(0, 200), this.timestampSubject])\n            .pipe(map((value: [number, number]): string => {\n                const diff: number = Math.max(value[1] - Date.now(), 0);\n                if (diff  {\n                this.timestamp = val;\n            }));\n\n    }\n\n    public ngOnDestroy(): void {\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CountdownTimerModule.html":{"url":"modules/CountdownTimerModule.html","title":"module - CountdownTimerModule","body":"\n                   \n\n\n\n\n    Modules\n    CountdownTimerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CountdownTimerModule\n\n\n\ncluster_CountdownTimerModule_declarations\n\n\n\ncluster_CountdownTimerModule_exports\n\n\n\n\nCountdownTimerDirective\n\nCountdownTimerDirective\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nCountdownTimerModule -->\n\nCountdownTimerDirective->CountdownTimerModule\n\n\n\n\n\nCountdownTimerDirective \n\nCountdownTimerDirective \n\nCountdownTimerDirective  -->\n\nCountdownTimerModule->CountdownTimerDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/countdown-timer/countdown-timer.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module containing the CountdownDirective\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CountdownTimerDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CountdownTimerDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n} from '@angular/material';\nimport { CountdownTimerDirective } from './countdown-timer.directive';\n\n/**\n * Module containing the CountdownDirective\n */\n@NgModule({\n    declarations: [\n        CountdownTimerDirective,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        CountdownTimerDirective,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class CountdownTimerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartureListComponent.html":{"url":"components/DepartureListComponent.html","title":"component - DepartureListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DepartureListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/departure-list.component.ts\n\n\n    \n        Description\n    \n    \n        List of Departures Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-departure-list\n            \n\n            \n                styleUrls\n                ./departure-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./departure-list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                departures\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    departures\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        departures\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list.component.ts:23\n                            \n                        \n                \n                    \n                        set the departures\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasDepartures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasDepartures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list.component.ts:38\n                \n            \n\n\n            \n                \n                    Returns if the atleast one departure was provided\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if there is atleast one departure\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDepartures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDeparture[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        departures\n                    \n                \n\n                \n                    \n                        getdepartures()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list.component.ts:30\n                                \n                            \n                    \n                        \n                                departures\n\n\n                                \n                                    Returns :     IDeparture[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setdepartures(deps: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list.component.ts:23\n                                \n                            \n                    \n                        \n                                set the departures\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { IDeparture } from '@donmahallem/trapeze-api-types';\n\n/**\n * List of Departures Component\n */\n@Component({\n    selector: 'app-departure-list',\n    styleUrls: ['./departure-list.component.scss'],\n    templateUrl: './departure-list.component.pug',\n})\nexport class DepartureListComponent {\n\n    private mDepartures: IDeparture[] = [];\n\n    /**\n     * set the departures\n     */\n    @Input('departures')\n    public set departures(deps: IDeparture[]) {\n        this.mDepartures = deps ? deps : [];\n    }\n\n    /**\n     * departures\n     */\n    public get departures(): IDeparture[] {\n        return this.mDepartures ? this.mDepartures : [];\n    }\n\n    /**\n     * Returns if the atleast one departure was provided\n     * @returns true if there is atleast one departure\n     */\n    public hasDepartures(): boolean {\n        return this.mDepartures !== undefined && this.mDepartures.length > 0;\n    }\n\n}\n\n    \n\n    \n        mat-nav-list(*ngIf=\"hasDepartures()\",role=\"list\")\n    app-departure-list-item(*ngFor=\"let passage of departures\",[departure]=\"passage\")\n.no-departures(*ngIf=\"!hasDepartures()\")\n    h4 No Departures\n    \n\n    \n                \n                    ./departure-list.component.scss\n                \n                :host{\n    display:block;\n}\ndiv.no-departures{\n    margin:15px;\n}\nspan.delay{\n    color:red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list(*ngIf=\"hasDepartures()\",role=\"list\")    app-departure-list-item(*ngFor=\"let passage of departures\",[departure]=\"passage\").no-departures(*ngIf=\"!hasDepartures()\")    h4 No Departures'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'DepartureListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartureListItemComponent.html":{"url":"components/DepartureListItemComponent.html","title":"component - DepartureListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DepartureListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/departure-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-departure-list-item\n            \n\n            \n                styleUrls\n                ./departure-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./departure-list-item.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDelay\n                            \n                            \n                                    Private\n                                mDeparture\n                            \n                            \n                                    Private\n                                mTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateDelay\n                            \n                            \n                                    Public\n                                convertTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                departure\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    departure\n                                \n                                \n                                    time\n                                \n                                \n                                    statusIcon\n                                \n                                \n                                    status\n                                \n                                \n                                    delay\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        departure\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:35\n                            \n                        \n                \n                    \n                        Sets the departure\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            calculateDelay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateDelay(data: IDeparture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list-item.component.ts:96\n                \n            \n\n\n            \n                \n                    Calculates the delay\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IDeparture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a number except 0 or false\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"undefined\" | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(data: IDeparture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list-item.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IDeparture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean | number\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:24\n                            \n                        \n\n                \n                    \n                        The delay of the departure. Can be positive or negative excluding zero\nor false if no delay is to be expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDeparture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDeparture\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:19\n                            \n                        \n\n                \n                    \n                        Object holding the current departure\nCan be undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:28\n                            \n                        \n\n                \n                    \n                        The time of arrival\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        departure\n                    \n                \n\n                \n                    \n                        getdeparture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:45\n                                \n                            \n                    \n                        \n                                gets the departure\n\n\n                                \n                                \n                                \n                                    Returns :     IDeparture\n\n                                \n                        \n                    \n\n                \n                    \n                        setdeparture(deps)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:35\n                                \n                            \n                    \n                        \n                                Sets the departure\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The departures\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n\n                \n                    \n                        gettime()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusIcon\n                    \n                \n\n                \n                    \n                        getstatusIcon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:71\n                                \n                            \n                    \n                        \n                                Returns the DepartureStatus\n\n\n                                \n                                \n                                \n                                    Returns :     VEHICLE_STATUS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        delay\n                    \n                \n\n                \n                    \n                        getdelay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:88\n                                \n                            \n                    \n                        \n                                Returns the delay\n\n\n                                \n                                \n                                \n                                    Returns :     boolean | number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { IDeparture } from '@donmahallem/trapeze-api-types';\nimport { VEHICLE_STATUS } from '@donmahallem/trapeze-api-types/dist/vehicle-status';\nimport * as moment from 'moment';\n@Component({\n    selector: 'app-departure-list-item',\n    styleUrls: ['./departure-list-item.component.scss'],\n    templateUrl: './departure-list-item.component.pug',\n})\nexport class DepartureListItemComponent {\n\n    /**\n     * Object holding the current departure\n     * Can be undefined\n     */\n    private mDeparture: IDeparture = undefined;\n    /**\n     * The delay of the departure. Can be positive or negative excluding zero\n     * or false if no delay is to be expected\n     */\n    private mDelay: boolean | number = false;\n    /**\n     * The time of arrival\n     */\n    private mTime = '';\n\n    /**\n     * Sets the departure\n     * @param deps The departures\n     */\n    @Input('departure')\n    public set departure(deps: IDeparture) {\n        this.mDeparture = deps;\n        this.mDelay = this.calculateDelay(deps);\n        this.mTime = this.convertTime(deps);\n    }\n\n    /**\n     * gets the departure\n     * @returns the departure or undefined\n     */\n    public get departure(): IDeparture {\n        return this.mDeparture;\n    }\n\n    public get time(): string {\n        return this.mTime;\n    }\n\n    public get statusIcon(): string {\n        switch (this.mDeparture.status) {\n            case VEHICLE_STATUS.PREDICTED:\n                return 'directions_bus';\n            case VEHICLE_STATUS.DEPARTED:\n                return 'directions_bus';\n            case VEHICLE_STATUS.STOPPING:\n                return 'departure_board';\n            case VEHICLE_STATUS.PLANNED:\n            default:\n                return 'query_builder';\n        }\n    }\n\n    /**\n     * Returns the DepartureStatus\n     * @returns vehicle status {@VEHICLE_STATUS}\n     */\n    public get status(): VEHICLE_STATUS {\n        return this.mDeparture.status;\n    }\n\n    public convertTime(data: IDeparture) {\n        const time: number = data.actualRelativeTime;\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n\n    /**\n     * Returns the delay\n     * @returns false or an integer except 0\n     */\n    public get delay(): boolean | number {\n        return this.mDelay;\n    }\n\n    /**\n     * Calculates the delay\n     * @param data a number except 0 or false\n     */\n    public calculateDelay(data: IDeparture): false | number {\n        if (data && data.actualTime && data.plannedTime) {\n            if (data.actualTime !== data.plannedTime) {\n                const actual: moment.Moment = moment(data.actualTime, 'HH:mm');\n                const planned: moment.Moment = moment(data.plannedTime, 'HH:mm');\n                let diffMinutes: number = moment.duration(actual.diff(planned)).asMinutes();\n                if (diffMinutes > 60 * 12) {\n                    diffMinutes -= 60 * 24;\n                } else if (diffMinutes \n    \n\n    \n        a([routerLink]=\"['/passages', departure.tripId]\",role=\"listitem\")\n    mat-list-item\n        mat-icon(matListIcon,title=\"{{status}}\") {{statusIcon}}\n        span.pattern-text(*ngIf=\"delay!==false\",[ngClass]=\"{'late':(delay>0),'early':(delay\n    \n\n    \n                \n                    ./departure-list-item.component.scss\n                \n                :host{\n    display:block;\n}\ndiv.no-departures{\n    margin:15px;\n}\nspan.pattern-text{\n    font-weight: bold;\n}\n\nspan.pattern-text.late{\n    color:#d50000;\n}\nspan.pattern-text.late:before{\n    content: '+';\n}\nspan.pattern-text.early{\n    color:#00d500;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'a([routerLink]=\"[\\'/passages\\', departure.tripId]\",role=\"listitem\")    mat-list-item        mat-icon(matListIcon,title=\"{{status}}\") {{statusIcon}}        span.pattern-text(*ngIf=\"delay!==false\",[ngClass]=\"{\\'late\\':(delay>0),\\'early\\':(delay'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'DepartureListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DrawableDirective.html":{"url":"directives/DrawableDirective.html","title":"directive - DrawableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DrawableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/drawable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDrawable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                ctx\n                            \n                            \n                                pos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getImgData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPosition\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                newImage\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mousedown\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mousemove\n                            \n                            \n                                mouseup\n                            \n                            \n                                resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/drawable.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        newImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mousedown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousedown(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:26\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousemove(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:36\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseup(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nresize(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:56\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ImageData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CanvasRenderingContext2D\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { x: 0, y: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[appDrawable]',\n})\nexport class DrawableDirective implements OnInit {\n    pos = { x: 0, y: 0 };\n    ctx: CanvasRenderingContext2D;\n    canvas: HTMLCanvasElement;\n\n    @Output() newImage = new EventEmitter();\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        this.canvas = this.el.nativeElement as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onUp(e) {\n        this.newImage.emit(this.getImgData());\n    }\n\n    @HostListener('mouseenter', ['$event'])\n    onEnter(e) {\n        this.setPosition(e);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMove(e) {\n        this.setPosition(e);\n    }\n\n    @HostListener('mousemove', ['$event'])\n    onDown(e) {\n\n        if (e.buttons !== 1) {\n            return;\n        }\n\n        this.ctx.beginPath(); // begin\n\n        this.ctx.lineWidth = 10;\n        this.ctx.lineCap = 'round';\n        this.ctx.strokeStyle = '#111111';\n\n        this.ctx.moveTo(this.pos.x, this.pos.y);\n        this.setPosition(e);\n        this.ctx.lineTo(this.pos.x, this.pos.y);\n\n        this.ctx.stroke();\n    }\n\n    @HostListener('resize', ['$event'])\n    onResize(e) {\n        this.ctx.canvas.width = window.innerWidth;\n        this.ctx.canvas.height = window.innerHeight;\n    }\n\n    setPosition(e) {\n        this.pos.x = e.offsetX;\n        this.pos.y = e.offsetY;\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n\n    getImgData(): ImageData {\n        return this.ctx.getImageData(0, 0, 300, 300);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\n\nCommonErrorComponent\n\nCommonErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nCommonErrorComponent->ErrorModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nErrorModule -->\n\nNotFoundComponent->ErrorModule\n\n\n\n\n\nErrorRoutingModule\n\nErrorRoutingModule\n\nErrorModule -->\n\nErrorRoutingModule->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/error/error.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CommonErrorComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule, MatListModule,\n} from '@angular/material';\nimport { CommonErrorComponent } from './common-error.component';\nimport { ErrorRoutingModule } from './error-routing.module';\nimport { NotFoundComponent } from './not-found.component';\n@NgModule({\n    declarations: [\n        NotFoundComponent,\n        CommonErrorComponent,\n    ],\n    imports: [\n        ErrorRoutingModule,\n        CommonModule,\n        MatListModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class ErrorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorRoutingModule.html":{"url":"modules/ErrorRoutingModule.html","title":"module - ErrorRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/error/error-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonErrorComponent } from './common-error.component';\nimport { NotFoundComponent } from './not-found.component';\n\nconst errorRoutes: Routes = [\n    {\n        component: CommonErrorComponent,\n        path: '',\n    },\n    {\n        component: NotFoundComponent,\n        path: 'not-found',\n    },\n    {\n        path: '**',\n        redirectTo: 'not-found',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(errorRoutes),\n    ],\n})\nexport class ErrorRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FollowBusMapDirective.html":{"url":"directives/FollowBusMapDirective.html","title":"directive - FollowBusMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FollowBusMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/follow-bus-map.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appTripPassages]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routePolyLines\n                            \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                updateObservable\n                            \n                            \n                                    Private\n                                vehicleLocationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRoutePaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, userLocationService: UserLocationService, zone: NgZone, apiService: ApiService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRoutePaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRoutePaths(paths: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routePolyLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Polyline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n                \n                    \n                        getlocation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:29\n                                \n                            \n\n                \n                    \n                        setlocation(loc)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            loc\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, mergeMap } from 'rxjs/operators';\nimport { createVehicleIcon } from 'src/app/leaflet';\nimport { ITimestampVehicleLocation } from 'src/app/models';\nimport { ApiService } from 'src/app/services';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\nexport class RoutesSubscriber extends Subscriber {\n    public constructor(private followMapInstance: FollowBusMapDirective) {\n        super();\n    }\n    public next(routes) {\n        this.followMapInstance.setRoutePaths(routes.paths);\n    }\n}\n@Directive({\n    selector: 'map[appTripPassages]',\n})\nexport class FollowBusMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    @Input('location')\n    public set location(loc: ITimestampVehicleLocation) {\n        this.vehicleLocationSubject.next(loc);\n    }\n\n    public get location(): ITimestampVehicleLocation {\n        return this.vehicleLocationSubject.getValue();\n    }\n    private vehicleLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private updateObservable: Subscription;\n    private routePolyLines: L.Polyline[] = [];\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        private apiService: ApiService,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n\n    public setRoutePaths(paths: any[]): void {\n        for (const line of this.routePolyLines) {\n            line.remove();\n        }\n        this.routePolyLines = [];\n        for (const path of paths) {\n            const pointList: any[] = [];\n            for (const wayPoint of path.wayPoints) {\n                pointList.push(new L.LatLng(wayPoint.lat / 3600000, wayPoint.lon / 3600000));\n            }\n            const firstpolyline = L.polyline(pointList, {\n                color: path.color,\n                opacity: 0.5,\n                smoothFactor: 1,\n                weight: 3,\n            });\n            firstpolyline.addTo(this.getMap());\n            this.routePolyLines.push(firstpolyline);\n        }\n    }\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n    public addMarker(): void {\n        this.updateObservable = this.vehicleLocationSubject\n            .pipe(map((loc: ITimestampVehicleLocation) => loc.vehicle))\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n\n                    const vehicleIcon: L.DivIcon = createVehicleIcon(location.heading, location.name.split(' ')[0], 40);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            icon: vehicleIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    (marker as any).setRotationAngle(location.heading - 90);\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n        this.vehicleLocationSubject\n            .pipe(\n                filter(num => num !== null),\n                distinctUntilChanged(),\n                mergeMap(boundsa =>\n                    this.apiService.getRouteByTripId(boundsa.vehicle.tripId)))\n            .subscribe(new RoutesSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.updateObservable.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppNotification.html":{"url":"interfaces/IAppNotification.html","title":"interface - IAppNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        reportable\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification Message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportable\n                                    \n                                \n                                \n                                    \n                                        reportable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reportable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification Title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         AppNotificationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppNotificationType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification Type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarDismiss } from '@angular/material';\nimport { zip, Observable, Subject } from 'rxjs';\nimport { flatMap, map, startWith } from 'rxjs/operators';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\nexport interface IAppNotificationDismiss {\n    dismissedByAction: boolean;\n    notification: IAppNotification;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    private notificationClosedSubject: Subject = new Subject();\n    constructor(private matSnackBar: MatSnackBar) {\n        this.createNotificationQueueObservable()\n            .subscribe((value): void => {\n                this.notificationClosedSubject.next();\n            });\n    }\n\n    /**\n     * Creates an observable that returns the displayed Notification after it was viewed\n     */\n    public createNotificationQueueObservable(): Observable {\n        return zip(this.notificationSubject, this.notificationClosedSubject.pipe(startWith(undefined)))\n            .pipe(\n                map((value: [IAppNotification, void]) => value[0]),\n                flatMap((noti: IAppNotification): Observable =>\n                    this.matSnackBar.open(noti.title, undefined, {\n                        announcementMessage: noti.title,\n                        duration: 2000,\n                    }).afterDismissed()\n                        .pipe(map((dismissNotice: MatSnackBarDismiss): IAppNotificationDismiss =>\n                            ({\n                                dismissedByAction: dismissNotice.dismissedByAction,\n                                notification: noti,\n                            })))));\n    }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n    public report(err: any) {\n\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppNotificationDismiss.html":{"url":"interfaces/IAppNotificationDismiss.html","title":"interface - IAppNotificationDismiss","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppNotificationDismiss\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dismissedByAction\n                                \n                                \n                                        notification\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dismissedByAction\n                                    \n                                \n                                \n                                    \n                                        dismissedByAction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notification\n                                    \n                                \n                                \n                                    \n                                        notification:         IAppNotification\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAppNotification\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarDismiss } from '@angular/material';\nimport { zip, Observable, Subject } from 'rxjs';\nimport { flatMap, map, startWith } from 'rxjs/operators';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\nexport interface IAppNotificationDismiss {\n    dismissedByAction: boolean;\n    notification: IAppNotification;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    private notificationClosedSubject: Subject = new Subject();\n    constructor(private matSnackBar: MatSnackBar) {\n        this.createNotificationQueueObservable()\n            .subscribe((value): void => {\n                this.notificationClosedSubject.next();\n            });\n    }\n\n    /**\n     * Creates an observable that returns the displayed Notification after it was viewed\n     */\n    public createNotificationQueueObservable(): Observable {\n        return zip(this.notificationSubject, this.notificationClosedSubject.pipe(startWith(undefined)))\n            .pipe(\n                map((value: [IAppNotification, void]) => value[0]),\n                flatMap((noti: IAppNotification): Observable =>\n                    this.matSnackBar.open(noti.title, undefined, {\n                        announcementMessage: noti.title,\n                        duration: 2000,\n                    }).afterDismissed()\n                        .pipe(map((dismissNotice: MatSnackBarDismiss): IAppNotificationDismiss =>\n                            ({\n                                dismissedByAction: dismissNotice.dismissedByAction,\n                                notification: noti,\n                            })))));\n    }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n    public report(err: any) {\n\n    }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnvironmentBase.html":{"url":"interfaces/IEnvironmentBase.html","title":"interface - IEnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/environment.base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiEndpoint\n                                \n                                \n                                        production\n                                \n                                \n                                            Optional\n                                        pwa\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pwa\n                                    \n                                \n                                \n                                    \n                                        pwa:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         AppVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppVersion\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AppVersion } from './app-version';\n\nexport interface IEnvironmentBase {\n    readonly apiEndpoint: string;\n    readonly production: boolean;\n    readonly pwa?: boolean;\n    readonly version: AppVersion;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapBounds.html":{"url":"interfaces/IMapBounds.html","title":"interface - IMapBounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n    @ViewChild('mapcontainer', { static: false }) mapContainer;\n    public readonly mapMove: Subject = new Subject();\n    private map: L.Map;\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapMoveEndEvent.html":{"url":"interfaces/IMapMoveEndEvent.html","title":"interface - IMapMoveEndEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapMoveEndEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         MapMoveEventType.END\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapMoveEventType.END\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n    @ViewChild('mapcontainer', { static: false }) mapContainer;\n    public readonly mapMove: Subject = new Subject();\n    private map: L.Map;\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapMoveStartEvent.html":{"url":"interfaces/IMapMoveStartEvent.html","title":"interface - IMapMoveStartEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapMoveStartEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         MapMoveEventType.START\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapMoveEventType.START\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n    @ViewChild('mapcontainer', { static: false }) mapContainer;\n    public readonly mapMove: Subject = new Subject();\n    private map: L.Map;\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPassageStatus.html":{"url":"interfaces/IPassageStatus.html","title":"interface - IPassageStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPassageStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        failures\n                                \n                                \n                                        passages\n                                \n                                \n                                        status\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failures\n                                    \n                                \n                                \n                                    \n                                        failures:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passages\n                                    \n                                \n                                \n                                    \n                                        passages:         TripPassagesLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripPassagesLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         UpdateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UpdateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IActualTripPassage, TripId } from '@donmahallem/trapeze-api-types';\nimport { from, BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, debounceTime, flatMap, map } from 'rxjs/operators';\nimport { TripPassagesLocation } from 'src/app/models';\nimport { ApiService } from '../../services';\n\nenum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status: UpdateStatus;\n    passages: TripPassagesLocation;\n    timestamp: number;\n    failures?: number;\n}\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.pug',\n})\nexport class TripPassagesComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * Returns the TripPassages\n     * @returns undefined or {@link TripPassagesLocation}\n     */\n    public get tripData(): TripPassagesLocation {\n        if (this.status.value) {\n            return this.status.value.passages;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the last timestamp when data was tried to be retrieved\n     * @returns number or 0 if no timestamp is set\n     */\n    public get lastTimestamp(): number {\n        if (this.status.value) {\n            return this.status.value.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns the current set update status or {@link UpdateStatus.LOADING}\n     * @returns the {@link UpdateStatus}\n     */\n    public get statusCode(): UpdateStatus {\n        if (this.status.value) {\n            return this.status.value.status;\n        }\n        return UpdateStatus.LOADING;\n    }\n\n    /**\n     * returns the current tripID\n     */\n    public get tripId(): TripId {\n        return this.route.snapshot.params.tripId;\n    }\n\n    /**\n     * short hand to retrieve route name\n     */\n    public get routeName(): string {\n        return (this.tripData) ? this.tripData.routeName : '';\n    }\n\n    /**\n     * List of passages\n     */\n    public get tripPassages(): IActualTripPassage[] {\n        return (this.tripData !== undefined) ? this.tripData.actual : [];\n    }\n    public readonly DEBOUNCE_TIME: number = 5000;\n    public readonly StatusOps: typeof UpdateStatus = UpdateStatus;\n    private status: BehaviorSubject = new BehaviorSubject(undefined);\n    private snapshotDataSubscription: Subscription;\n    private pollSubscription: Subscription;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private router: Router) {\n        this.snapshotDataSubscription = this.route.data.subscribe((data) => {\n            this.status.next({\n                passages: data.tripPassages,\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n            });\n        });\n    }\n\n    /**\n     * Returns if an error has happened during the last update\n     * @returns true if an error occured\n     */\n    public hasError(): boolean {\n        return this.statusCode >= UpdateStatus.ERROR;\n    }\n\n    /**\n     * Initializes the update observable\n     */\n    public ngAfterViewInit(): void {\n        this.pollSubscription = this.status.pipe(debounceTime(this.DEBOUNCE_TIME),\n            map(() =>\n                this.route.snapshot.params.tripId),\n            flatMap((tripId: TripId) =>\n                this.apiService.getTripPassages(tripId)),\n            map((passages: TripPassagesLocation): IPassageStatus =>\n                ({\n                    passages: passages,\n                    status: UpdateStatus.LOADED,\n                    timestamp: Date.now(),\n                })),\n            catchError(this.handleError.bind(this)))\n            .subscribe(new Subscriber((val: IPassageStatus) => {\n                if (val.passages.tripId === this.tripId) {\n                    this.status.next(val);\n                } else {\n                    // trigger so a reload can execute\n                    this.status.next(this.status.value);\n                }\n            }));\n    }\n    /**\n     * destroys created update observables\n     */\n    public ngOnDestroy(): void {\n        if (this.snapshotDataSubscription) {\n            this.snapshotDataSubscription.unsubscribe();\n        }\n        if (this.pollSubscription) {\n            this.pollSubscription.unsubscribe();\n        }\n    }\n\n    private handleError(err?: any): Observable {\n        let status: UpdateStatus = UpdateStatus.ERROR;\n        if (err.status) {\n            // Http Error\n            const statusCode: number = err.status;\n            if (statusCode === 404) {\n                status = UpdateStatus.NOT_FOUND;\n                this.router.navigate(['not-found'], {\n                    queryParams: {\n                        type: 'passages',\n                    },\n                });\n            } else if (statusCode >= 500 && statusCode \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimestampVehicleLocation.html":{"url":"interfaces/ITimestampVehicleLocation.html","title":"interface - ITimestampVehicleLocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimestampVehicleLocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timestamp\n                                \n                                \n                                        vehicle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of last checkup\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicle\n                                    \n                                \n                                \n                                    \n                                        vehicle:     IVehicleLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IVehicleLocation\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Vehicle location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ITripPassages, IVehicleLocation } from '@donmahallem/trapeze-api-types';\n\nexport interface Bounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport type TripPassagesLocation = ITripPassages & {\n    location: ITimestampVehicleLocation,\n};\n\nexport interface ITimestampVehicleLocation {\n    /**\n     * Timestamp of last checkup\n     */\n    timestamp: number;\n    /**\n     * Vehicle location\n     */\n    vehicle: IVehicleLocation;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeafletMapComponent.html":{"url":"classes/LeafletMapComponent.html","title":"class - LeafletMapComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeafletMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                mapContainer\n                            \n                            \n                                    Public\n                                    Readonly\n                                mapMove\n                            \n                            \n                                    Private\n                                mUserLocationSubscription\n                            \n                            \n                                    Private\n                                userLocationLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addLayer\n                            \n                            \n                                    Public\n                                getMap\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mapBounds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, zone: NgZone, userLocationService: UserLocationService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/leaflet-map.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mapcontainer', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            mapMove\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mUserLocationSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userLocationLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addLayer(layer: L.Layer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                            L.Layer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Layer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.Map | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(coords: Coordinates)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:91\n                \n            \n\n\n            \n                \n                    Sets the user location. To clear the location set it to undefined\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coords\n                                    \n                                            Coordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The coords or undefined\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        mapBounds\n                    \n                \n\n                \n                    \n                        getmapBounds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:47\n                                \n                            \n                    \n                        \n                                wrapper for this.map.getBounds()\n\n\n                                \n                                    Returns :         L.LatLngBounds\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n    @ViewChild('mapcontainer', { static: false }) mapContainer;\n    public readonly mapMove: Subject = new Subject();\n    private map: L.Map;\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MainMapDirective.html":{"url":"directives/MainMapDirective.html","title":"directive - MainMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MainMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appMainMap]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                vehicleMarkerLayer\n                            \n                            \n                                    Private\n                                vehicleUpdateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                addVehicleMarker\n                            \n                            \n                                    Public\n                                markerOnClick\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setVehicles\n                            \n                            \n                                    Public\n                                startVehicleUpdater\n                            \n                            \n                                    Public\n                                stopMarkerOnClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, apiService: ApiService, router: Router, stopService: StopPointService, userLocationService: UserLocationService, location: Location, snackBar: MatSnackBar, settings: SettingsService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-map/main-map.directive.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addVehicleMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicleMarker(vehicle: IVehicleLocation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicle\n                                    \n                                            IVehicleLocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            markerOnClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markerOnClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setVehicles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVehicles(vehicles: IVehicleLocationList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicles\n                                    \n                                            IVehicleLocationList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startVehicleUpdater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startVehicleUpdater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopMarkerOnClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopMarkerOnClick(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleUpdateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { AfterViewInit, Directive, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { combineLatest, from, timer, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map, startWith } from 'rxjs/operators';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { createStopIcon, createVehicleIcon } from '../../leaflet';\nimport { IMapBounds, LeafletMapComponent, MapMoveEvent, MapMoveEventType } from '../../modules/common/leaflet-map.component';\nimport { StopPointService } from '../../services/stop-point.service';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { ApiService } from './../../services';\n\nexport class VehicleLoadSubscriber extends Subscriber {\n\n    public constructor(private mainMap: MainMapDirective) {\n        super();\n    }\n    public next(res: IVehicleLocationList): void {\n        this.mainMap.setVehicles(res);\n    }\n}\n\n@Directive({\n    selector: 'map[appMainMap]',\n})\nexport class MainMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleUpdateSubscription: Subscription;\n    constructor(elRef: ElementRef,\n        private apiService: ApiService,\n        private router: Router,\n        private stopService: StopPointService,\n        userLocationService: UserLocationService,\n        private location: Location,\n        private snackBar: MatSnackBar,\n        settings: SettingsService,\n        zone: NgZone) {\n        super(elRef, zone, userLocationService, settings);\n    }\n\n    public setVehicles(vehicles: IVehicleLocationList): void {\n        if (this.vehicleMarkerLayer !== undefined) {\n            this.vehicleMarkerLayer.clearLayers();\n        } else {\n            this.vehicleMarkerLayer = L.featureGroup();\n            this.vehicleMarkerLayer.addTo(this.getMap());\n            this.vehicleMarkerLayer.on('click', this.markerOnClick.bind(this));\n        }\n        if (vehicles && Array.isArray(vehicles.vehicles)) {\n            for (const veh of vehicles.vehicles) {\n                if (veh.isDeleted === true) {\n                    continue;\n                }\n                this.addVehicleMarker(veh as IVehicleLocation).addTo(this.vehicleMarkerLayer);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.startVehicleUpdater();\n        const ourCustomControl = L.Control.extend({\n            onAdd: () => {\n                const container = L.DomUtil.create('i', 'material-icons leaflet-bar leaflet-control leaflet-control-custom');\n                container.style.backgroundColor = 'white';\n                container.style.width = '42px';\n                container.style.height = '42px';\n                container.style.lineHeight = '42px';\n                container.style.textAlign = 'center';\n                container.style.verticalAlign = 'center';\n                container.style.cursor = 'pointer';\n                container.innerHTML = 'my_location';\n                container.style.userSelect = 'none';\n                container.style.msUserSelect = 'none';\n                container.onclick = () => {\n                    if (this.userLocationService.location) {\n                        const pos: Position = this.userLocationService.location;\n                        this.getMap().panTo({\n                            alt: 5000,\n                            lat: pos.coords.latitude, // / 3600000,\n                            lng: pos.coords.longitude, // / 3600000,\n                        },\n                            { animate: true });\n                    } else {\n                        this.snackBar.open('No location acquired yet!',\n                            undefined,\n                            {\n                                duration: 2000,\n                            });\n                    }\n                };\n                return container;\n            },\n            options: {\n                position: 'bottomright',\n                // control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'\n            },\n        });\n        this.getMap().addControl(new ourCustomControl());\n        // this.getMap().flyTo(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n    }\n\n    public startVehicleUpdater(): void {\n        // as mapMove doesn't emit on init this needs to be provided to load atleast once\n        const primedMoveObservable: Observable = this.mapMove.pipe(\n            startWith({\n                type: MapMoveEventType.END,\n            } as MapMoveEvent));\n        this.vehicleUpdateSubscription = combineLatest([timer(0, 5000), primedMoveObservable])\n            .pipe(\n                map((value: [number, MapMoveEvent]): MapMoveEvent =>\n                    value[1]),\n                filter((event: MapMoveEvent): boolean =>\n                    (event.type === MapMoveEventType.END)),\n                flatMap((moveEvent: MapMoveEvent) => {\n                    const bounds: IMapBounds = {\n                        bottom: this.mapBounds.getSouth(),\n                        left: this.mapBounds.getWest(),\n                        right: this.mapBounds.getEast(),\n                        top: this.mapBounds.getNorth(),\n                    };\n                    return this.apiService.getVehicleLocations(bounds);\n                }),\n                catchError((err: Error) =>\n                    from([{}])))\n            .subscribe(new VehicleLoadSubscriber(this));\n    }\n\n    public markerOnClick(event) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['passages', event.sourceTarget.data.tripId]);\n        });\n    }\n    public addVehicleMarker(vehicle: IVehicleLocation): L.Marker {\n        const vehicleIcon: L.DivIcon = createVehicleIcon(vehicle.heading, vehicle.name.split(' ')[0], 40);\n        const markerT: any = L.marker([vehicle.latitude / 3600000, vehicle.longitude / 3600000], {\n            icon: vehicleIcon,\n            rotationAngle: vehicle.heading - 90,\n            title: vehicle.name,\n            zIndexOffset: 100,\n        } as any);\n        markerT.data = vehicle;\n        return markerT;\n    }\n    public addMarker() {\n        this.stopService.stopLocationsObservable\n            .subscribe((stops: IStopLocation[]) => {\n                const stopList: L.Marker[] = [];\n                for (const stop of stops) {\n                    if (stop === null) {\n                        continue;\n                    }\n                    const greenIcon = createStopIcon(this.location);\n                    const markerT: L.Marker = L.marker([stop.latitude / 3600000, stop.longitude / 3600000],\n                        {\n                            icon: greenIcon,\n                            interactive: true,\n                            riseOffset: 10,\n                            riseOnHover: true,\n                            title: stop.name,\n                            zIndexOffset: 10,\n                        });\n                    (markerT as any).data = stop;\n                    stopList.push(markerT);\n                }\n                if (this.stopMarkerLayer !== undefined) {\n                    this.stopMarkerLayer.remove();\n                }\n                const featureGroup: L.FeatureGroup = L.featureGroup(stopList);\n                this.stopMarkerLayer = featureGroup.addTo(this.getMap());\n                featureGroup.on('click', this.stopMarkerOnClick.bind(this));\n            });\n    }\n\n    public stopMarkerOnClick(event: { sourceTarget: { data: IStopLocation } }) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['stop', event.sourceTarget.data.shortName]);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.vehicleUpdateSubscription) {\n            this.vehicleUpdateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainMapModule.html":{"url":"modules/MainMapModule.html","title":"module - MainMapModule","body":"\n                   \n\n\n\n\n    Modules\n    MainMapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainMapModule\n\n\n\ncluster_MainMapModule_declarations\n\n\n\ncluster_MainMapModule_exports\n\n\n\n\nMainMapDirective\n\nMainMapDirective\n\n\n\nMainMapModule\n\nMainMapModule\n\nMainMapModule -->\n\nMainMapDirective->MainMapModule\n\n\n\n\n\nMainMapDirective \n\nMainMapDirective \n\nMainMapDirective  -->\n\nMainMapModule->MainMapDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainMapDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainMapDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatSnackBarModule,\n} from '@angular/material';\nimport { MainMapDirective } from './main-map.directive';\n@NgModule({\n    declarations: [\n        MainMapDirective,\n    ],\n    exports: [\n        CommonModule,\n        MatSnackBarModule,\n        MainMapDirective,\n    ],\n    imports: [\n        MatSnackBarModule,\n        CommonModule,\n    ],\n})\nexport class MainMapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarComponent.html":{"url":"components/MainToolbarComponent.html","title":"component - MainToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/main-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-toolbar\n            \n\n            \n                styleUrls\n                ./main-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-toolbar.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeable\n                            \n                            \n                                    Private\n                                mSearchOpen\n                            \n                            \n                                    Private\n                                searchBoxComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFocusSearch\n                            \n                            \n                                    Public\n                                toggleSearch\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: SidebarService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFocusSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFocusSearch(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSearchOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBoxComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarSearchBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ToolbarSearchBoxComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchOpen\n                    \n                \n\n                \n                    \n                        getsearchOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:28\n                                \n                            \n\n                \n                    \n                        setsearchOpen(open: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            open\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\nexport class NavigationSubscriber extends Subscriber {\n\n    public constructor(private toolbar: MainToolbarComponent) {\n        super();\n    }\n    public next(event: RouterEvent): void {\n        if (event instanceof NavigationEnd && event.url.length > 1) {\n            this.toolbar.closeable = true;\n        } else if (event instanceof NavigationStart) {\n            this.toolbar.closeable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-main-toolbar',\n    styleUrls: ['./main-toolbar.component.scss'],\n    templateUrl: './main-toolbar.component.pug',\n})\nexport class MainToolbarComponent implements OnInit {\n\n    public get searchOpen(): boolean {\n        return this.mSearchOpen;\n    }\n\n    public set searchOpen(open: boolean) {\n        this.mSearchOpen = open;\n    }\n    public closeable = false;\n    @ViewChild(ToolbarSearchBoxComponent, { static: false })\n    private searchBoxComponent: ToolbarSearchBoxComponent;\n\n    private mSearchOpen = false;\n\n    constructor(private sidebarService: SidebarService,\n        private router: Router) {\n        this.router.events.subscribe(new NavigationSubscriber(this));\n    }\n\n    ngOnInit() {\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarService.toggleSidebar();\n    }\n\n    public onFocusSearch(event) {\n        this.searchOpen = event;\n    }\n    public toggleSearch(): void {\n        if (this.searchBoxComponent) {\n            // this.searchBoxComponent.doFocusSearch();\n        }\n    }\n\n}\n\n    \n\n    \n        mat-toolbar.main-toolbar(color=\"primary\",[ngClass]=\"{'search-open':(searchOpen===true),'navigation-closeable':(closeable===true)}\")\n    button.sidebar-toggle(mat-icon-button,(click)=\"toggleSidebar()\",i18n-aria-label=\"Toggle Sidebar@@toggleSidebar\",aria-label=\"Toggle Sidebar\",role=\"button\",aria-pressed=\"false\")\n        mat-icon menu\n    app-toolbar-search((focusSearch)=\"onFocusSearch($event)\")\n    button#btnSearch(mat-icon-button,(click)=\"toggleSearch()\")\n        mat-icon search\n    mat-divider.close-divider([vertical]=\"true\")\n    button.close(mat-icon-button,[routerLink]=\"['/']\")\n        mat-icon\napp-route-loading-indicator\n    \n\n    \n                \n                    ./main-toolbar.component.scss\n                \n                .fill-remaining-space {\n    /* This fills the remaining space, by using flexbox. \n       Every toolbar row uses a flexbox row layout. */\n    flex: 1 1 auto;\n}\n\n:host {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n.search-open{\n    app-toolbar-search{\n        opacity: 1;\n    }\n}\nbutton.sidebar-toggle{\n    display:block;\n}\n\n@media (max-width: 439px){\n    .navigation-closeable{\n        button.close{\n            display:none;\n        }\n        mat-divider.close-divider{\n            display:none;\n        }\n    }\n}\nbutton.close{\n    display:none;\n    ::after{\n        content: \"close\"\n    }\n}\nmat-divider.close-divider{\n    display:none;\n}\n@media (max-width:439px){\n    .navigation-closeable{\n        button.close{\n            display:block;\n            order: 1;\n            ::after{\n                content: \"arrow_back\"\n            }\n        }\n        mat-divider.close-divider{\n            display:none;\n        }\n        app-toolbar-search{\n            order:2;\n        }\n        button#btnSearch{\n            order:3;\n        }\n        button.sidebar-toggle{\n            display:none;\n        }\n    }\n}\n@media (min-width:440px){\n    .navigation-closeable{\n        button.close{\n            display:block;\n            order: 4;\n        }\n        mat-divider.close-divider{\n            display:block;\n            order: 3;\n        }\n    }\n}\n\napp-toolbar-search{\n    flex:1 1 auto;\n    opacity:0.4;\n}\n\nmat-toolbar mat-divider{\n    height:40px;\n    border-right-color: rgba(255,255,255,0.1);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-toolbar.main-toolbar(color=\"primary\",[ngClass]=\"{\\'search-open\\':(searchOpen===true),\\'navigation-closeable\\':(closeable===true)}\")    button.sidebar-toggle(mat-icon-button,(click)=\"toggleSidebar()\",i18n-aria-label=\"Toggle Sidebar@@toggleSidebar\",aria-label=\"Toggle Sidebar\",role=\"button\",aria-pressed=\"false\")        mat-icon menu    app-toolbar-search((focusSearch)=\"onFocusSearch($event)\")    button#btnSearch(mat-icon-button,(click)=\"toggleSearch()\")        mat-icon search    mat-divider.close-divider([vertical]=\"true\")    button.close(mat-icon-button,[routerLink]=\"[\\'/\\']\")        mat-iconapp-route-loading-indicator'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainToolbarModule.html":{"url":"modules/MainToolbarModule.html","title":"module - MainToolbarModule","body":"\n                   \n\n\n\n\n    Modules\n    MainToolbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainToolbarModule\n\n\n\ncluster_MainToolbarModule_declarations\n\n\n\ncluster_MainToolbarModule_exports\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nMainToolbarModule -->\n\nMainToolbarComponent->MainToolbarModule\n\n\n\n\n\nRouteLoadingIndicatorComponent\n\nRouteLoadingIndicatorComponent\n\nMainToolbarModule -->\n\nRouteLoadingIndicatorComponent->MainToolbarModule\n\n\n\n\n\nToolbarSearchBoxComponent\n\nToolbarSearchBoxComponent\n\nMainToolbarModule -->\n\nToolbarSearchBoxComponent->MainToolbarModule\n\n\n\n\n\nMainToolbarComponent \n\nMainToolbarComponent \n\nMainToolbarComponent  -->\n\nMainToolbarModule->MainToolbarComponent \n\n\n\n\n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent  -->\n\nMainToolbarModule->RouteLoadingIndicatorComponent \n\n\n\n\n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent  -->\n\nMainToolbarModule->ToolbarSearchBoxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-toolbar/main-toolbar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainToolbarComponent\n                        \n                        \n                            RouteLoadingIndicatorComponent\n                        \n                        \n                            ToolbarSearchBoxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainToolbarComponent\n                        \n                        \n                            RouteLoadingIndicatorComponent\n                        \n                        \n                            ToolbarSearchBoxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { MainToolbarComponent } from './main-toolbar.component';\nimport { RouteLoadingIndicatorComponent } from './route-loading-indicator.component';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\n@NgModule({\n    declarations: [\n        MainToolbarComponent,\n        ToolbarSearchBoxComponent,\n        RouteLoadingIndicatorComponent,\n    ],\n    exports: [\n        MainToolbarComponent,\n        CommonModule,\n        MatIconModule,\n        MatToolbarModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        RouterModule,\n        ToolbarSearchBoxComponent,\n        RouteLoadingIndicatorComponent,\n        MatProgressBarModule,\n        MatDividerModule,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatToolbarModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        MatDividerModule,\n        RouterModule,\n        MatProgressBarModule,\n    ],\n    providers: [\n    ],\n})\nexport class MainToolbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapHeaderBoxComponent.html":{"url":"components/MapHeaderBoxComponent.html","title":"component - MapHeaderBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapHeaderBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/common/map-header-box/map-header-box.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-header-box\n            \n\n            \n                styleUrls\n                ./map-header-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-header-box.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\n@Component({\n    selector: 'app-map-header-box',\n    styleUrls: ['./map-header-box.component.scss'],\n    templateUrl: './map-header-box.component.pug',\n})\nexport class MapHeaderBoxComponent {\n\n    @Input()\n    public title: string = undefined;\n    @Input()\n    public subtitle: string = undefined;\n    @Input()\n    @HostBinding('class.no-location')\n    public blur = false;\n}\n\n    \n\n    \n        ng-content\n.title-box\n    span.title(*ngIf=\"title!==undefined\",trole=\"heading\",aria-level=\"2\",title=\"{{title}}\") {{title}}\n    span.subtitle(*ngIf=\"subtitle!==undefined\",title=\"{{subtitle}}\") {{subtitle}}\nmat-icon location_off\n    \n\n    \n                \n                    ./map-header-box.component.scss\n                \n                :host {\n    position: relative;\n    min-height:250px;\n    max-height:300px;\n    height:calc(100vw / 4 * 3);\n    width: 100%;\n    user-select: none;\n    overflow:none;\n    flex:0 0;\n}\n\n:host > ::ng-deep map {\n    position: absolute;\n    display: block;\n    height: 100%;\n    width: 100%;\n    ::ng-deep .leaflet-control-attribution{\n        display:none;\n    }\n}\n\n.title-box{\n    position: absolute;\n    bottom:0px;\n    left:0px;\n    right:0px;\n    z-index: 800;\n    padding:20px 20px 10px 20px;\n    color:white;\n    text-shadow: 0 0 5px black;\n    background-image: linear-gradient(rgba(0,0,0,0.0), rgba(0,0,0,0.7));\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    span.title{\n        font-size: 20px;\n        font-weight: bold;\n    }\n    span.subtitle{\n        font-size: 12px;\n        font-weight: bold;\n    }\n}\nmat-icon{\n    position: absolute;\n    z-index: 799;\n    bottom:0px;\n    left:0px;\n    right:0px;\n    top:0px;\n    margin:auto;\n    font-size: 64px;\n    width:64px;\n    height:64px;\n    display:none;\n    color:white;\n}\n\n\n:host-context(.no-location){\n    ::ng-deep map {\n        filter: blur(2px) grayscale(100%) brightness(0.5);\n        transition: all 1s ease-out;\n    }\n    mat-icon{\n        display:block;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ng-content.title-box    span.title(*ngIf=\"title!==undefined\",trole=\"heading\",aria-level=\"2\",title=\"{{title}}\") {{title}}    span.subtitle(*ngIf=\"subtitle!==undefined\",title=\"{{subtitle}}\") {{subtitle}}mat-icon location_off'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapHeaderBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapHeaderBoxModule.html":{"url":"modules/MapHeaderBoxModule.html","title":"module - MapHeaderBoxModule","body":"\n                   \n\n\n\n\n    Modules\n    MapHeaderBoxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapHeaderBoxModule\n\n\n\ncluster_MapHeaderBoxModule_declarations\n\n\n\ncluster_MapHeaderBoxModule_exports\n\n\n\n\nMapHeaderBoxComponent\n\nMapHeaderBoxComponent\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule -->\n\nMapHeaderBoxComponent->MapHeaderBoxModule\n\n\n\n\n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent  -->\n\nMapHeaderBoxModule->MapHeaderBoxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/map-header-box/map-header-box.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapHeaderBoxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapHeaderBoxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n} from '@angular/material';\nimport { MapHeaderBoxComponent } from './map-header-box.component';\n\n@NgModule({\n    declarations: [\n        MapHeaderBoxComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        MapHeaderBoxComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class MapHeaderBoxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationSubscriber.html":{"url":"classes/NavigationSubscriber.html","title":"class - NavigationSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-toolbar/main-toolbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(toolbar: MainToolbarComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolbar\n                                                  \n                                                        \n                                                                        MainToolbarComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(event: RouterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RouterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\nexport class NavigationSubscriber extends Subscriber {\n\n    public constructor(private toolbar: MainToolbarComponent) {\n        super();\n    }\n    public next(event: RouterEvent): void {\n        if (event instanceof NavigationEnd && event.url.length > 1) {\n            this.toolbar.closeable = true;\n        } else if (event instanceof NavigationStart) {\n            this.toolbar.closeable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-main-toolbar',\n    styleUrls: ['./main-toolbar.component.scss'],\n    templateUrl: './main-toolbar.component.pug',\n})\nexport class MainToolbarComponent implements OnInit {\n\n    public get searchOpen(): boolean {\n        return this.mSearchOpen;\n    }\n\n    public set searchOpen(open: boolean) {\n        this.mSearchOpen = open;\n    }\n    public closeable = false;\n    @ViewChild(ToolbarSearchBoxComponent, { static: false })\n    private searchBoxComponent: ToolbarSearchBoxComponent;\n\n    private mSearchOpen = false;\n\n    constructor(private sidebarService: SidebarService,\n        private router: Router) {\n        this.router.events.subscribe(new NavigationSubscriber(this));\n    }\n\n    ngOnInit() {\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarService.toggleSidebar();\n    }\n\n    public onFocusSearch(event) {\n        this.searchOpen = event;\n    }\n    public toggleSearch(): void {\n        if (this.searchBoxComponent) {\n            // this.searchBoxComponent.doFocusSearch();\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/error/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                endpoints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/error/not-found.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'home',\n        path: '/',\n        title: 'Home',\n    }, {\n        icon: 'place',\n        path: '/stops',\n        title: 'Stops',\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/error/not-found.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n@Component({\n    selector: 'app-not-found',\n    styleUrls: ['./not-found.component.scss'],\n    templateUrl: './not-found.component.pug',\n})\nexport class NotFoundComponent {\n\n    public readonly endpoints: {\n        icon: string;\n        path: string;\n        title: string;\n    }[] = [{\n        icon: 'home',\n        path: '/',\n        title: 'Home',\n    }, {\n        icon: 'place',\n        path: '/stops',\n        title: 'Stops',\n    }];\n    constructor() {\n    }\n\n}\n\n    \n\n    \n        .header\n    mat-icon help_outline\nh3 Not Found\nmat-nav-list(role=\"list\")\n    mat-list-item(*ngFor=\"let endpoint of endpoints\",role=\"listitem\"[routerLink]=\"[endpoint.path]\")\n        mat-icon(matListIcon) {{endpoint.icon}}\n        h3(matLine) {{endpoint.title}}\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    flex-flow: column;\n    height: 100%;\n    background: #F9F9F9;\n}\n\n.header{\n    position: relative;\n    height:calc(100vw / 4 * 3);\n    width:100%;\n    max-height: 250px;\n    min-height:150px;\n    background:#999999;\n    mat-icon{\n        position: absolute;\n        top:0px;\n        right:0px;\n        bottom:0px;\n        left:0px;\n        margin:auto;\n        width:64px;\n        height: 64px;\n        font-size: 64px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.header    mat-icon help_outlineh3 Not Foundmat-nav-list(role=\"list\")    mat-list-item(*ngFor=\"let endpoint of endpoints\",role=\"listitem\"[routerLink]=\"[endpoint.path]\")        mat-icon(matListIcon) {{endpoint.icon}}        h3(matLine) {{endpoint.title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RetryDialogComponent.html":{"url":"components/RetryDialogComponent.html","title":"component - RetryDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RetryDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/common/retry-dialog/retry-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-retry-dialog\n            \n\n            \n                styleUrls\n                ./retry-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./retry-dialog.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: RetryDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        RetryDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RetryDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class RetryDialogData {\n    message?: string;\n    code?: number;\n}\n\n@Component({\n    selector: 'app-retry-dialog',\n    styleUrls: ['./retry-dialog.component.scss'],\n    templateUrl: './retry-dialog.component.pug',\n})\nexport class RetryDialogComponent {\n    constructor(public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: RetryDialogData) { }\n\n    public onNoClick(): void {\n        this.dialogRef.close(false);\n    }\n}\n\n    \n\n    \n        h1(mat-dialog-title) Error\ndiv(mat-dialog-content)\n    p {{data.message}}\n    p(*ngIf=\"data.code\") Code: {{data.code}}\ndiv(mat-dialog-actions)\n    button(mat-button,(click)=\"onNoClick()\") No Thanks\n    button(mat-button,[mat-dialog-close]=\"true\",cdkFocusInitial) Ok\n    \n\n    \n                \n                    ./retry-dialog.component.scss\n                \n                :host{\n    background: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'h1(mat-dialog-title) Errordiv(mat-dialog-content)    p {{data.message}}    p(*ngIf=\"data.code\") Code: {{data.code}}div(mat-dialog-actions)    button(mat-button,(click)=\"onNoClick()\") No Thanks    button(mat-button,[mat-dialog-close]=\"true\",cdkFocusInitial) Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RetryDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RetryDialogData.html":{"url":"classes/RetryDialogData.html","title":"class - RetryDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RetryDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/retry-dialog/retry-dialog.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                code\n                            \n                            \n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class RetryDialogData {\n    message?: string;\n    code?: number;\n}\n\n@Component({\n    selector: 'app-retry-dialog',\n    styleUrls: ['./retry-dialog.component.scss'],\n    templateUrl: './retry-dialog.component.pug',\n})\nexport class RetryDialogComponent {\n    constructor(public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: RetryDialogData) { }\n\n    public onNoClick(): void {\n        this.dialogRef.close(false);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RetryDialogModule.html":{"url":"modules/RetryDialogModule.html","title":"module - RetryDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    RetryDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RetryDialogModule\n\n\n\ncluster_RetryDialogModule_declarations\n\n\n\ncluster_RetryDialogModule_exports\n\n\n\n\nRetryDialogComponent\n\nRetryDialogComponent\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nRetryDialogModule -->\n\nRetryDialogComponent->RetryDialogModule\n\n\n\n\n\nRetryDialogComponent \n\nRetryDialogComponent \n\nRetryDialogComponent  -->\n\nRetryDialogModule->RetryDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/retry-dialog/retry-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule, MatDialogModule, MatIconModule,\n} from '@angular/material';\nimport { RetryDialogComponent } from './retry-dialog.component';\n\n@NgModule({\n    declarations: [\n        RetryDialogComponent,\n    ],\n    entryComponents: [\n        RetryDialogComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n        RetryDialogComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n    ],\n    providers: [\n    ],\n})\nexport class RetryDialogModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteListComponent.html":{"url":"components/RouteListComponent.html","title":"component - RouteListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouteListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/route-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-list\n            \n\n            \n                styleUrls\n                ./route-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./route-list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    routes\n                                \n                                \n                                    hasRoutes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/route-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(time, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/route-list.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDepartures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/route-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n\n                \n                    \n                        getroutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:19\n                                \n                            \n\n                \n                    \n                        setroutes(deps: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hasRoutes\n                    \n                \n\n                \n                    \n                        gethasRoutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-route-list',\n    styleUrls: ['./route-list.component.scss'],\n    templateUrl: './route-list.component.pug',\n})\nexport class RouteListComponent {\n\n    private mDepartures: any[] = [];\n    @Input('routes')\n    public set routes(deps: any[]) {\n        this.mDepartures = deps ? deps : [];\n    }\n\n    public get routes(): any[] {\n        return this.mDepartures;\n    }\n\n    public get hasRoutes(): boolean {\n        return this.mDepartures && this.mDepartures.length > 0;\n    }\n    public convertTime(time, data) {\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n\n}\n\n    \n\n    \n        mat-list(role=\"list\",*ngIf=\"hasRoutes\")\n    ng-container(*ngFor=\"let passage of routes\")\n        h3(matSubheader) {{passage?.shortName}}\n        mat-divider\n        mat-list-item(*ngFor=\"let direction of passage.directions\")\n            h4(matLine) {{direction}}\n.no-routes(*ngIf=\"!hasRoutes\")\n    h4 No Routes\n    \n\n    \n                \n                    ./route-list.component.scss\n                \n                :host{\n    display:block;\n}\nmat-list-item ul{\n    color:red;\n    display:block;\n    list-style-type: circle;\n    list-style-position: outside;\n    li{\n        display:list-item;\n        padding:0px 20px 0px 20px;\n    }\n}\n\ndiv.no-routes{\n    margin:15px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-list(role=\"list\",*ngIf=\"hasRoutes\")    ng-container(*ngFor=\"let passage of routes\")        h3(matSubheader) {{passage?.shortName}}        mat-divider        mat-list-item(*ngFor=\"let direction of passage.directions\")            h4(matLine) {{direction}}.no-routes(*ngIf=\"!hasRoutes\")    h4 No Routes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RouteListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteLoadingIndicatorComponent.html":{"url":"components/RouteLoadingIndicatorComponent.html","title":"component - RouteLoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouteLoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/route-loading-indicator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-loading-indicator\n            \n\n            \n                styleUrls\n                ./route-loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./route-loading-indicator.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router,\n} from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\nexport class RouteLoadingSubscriber extends Subscriber {\n\n    constructor(private indicatorCmp: RouteLoadingIndicatorComponent) {\n        super();\n    }\n    next(value?: Event): void {\n        switch (true) {\n            case value instanceof NavigationStart:\n                this.indicatorCmp.loading = true;\n                break;\n            case value instanceof NavigationEnd:\n            case value instanceof NavigationCancel:\n            case value instanceof NavigationError:\n                this.indicatorCmp.loading = false;\n                break;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-route-loading-indicator',\n    styleUrls: ['./route-loading-indicator.component.scss'],\n    templateUrl: './route-loading-indicator.component.pug',\n})\nexport class RouteLoadingIndicatorComponent implements OnInit, OnDestroy {\n\n    public loading = false;\n    private subscription: Subscription;\n    constructor(private router: Router) {\n\n    }\n    public ngOnInit(): void {\n        this.subscription = this.router\n            .events\n            .subscribe(new RouteLoadingSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        mat-progress-bar(*ngIf=\"loading\",mode=\"indeterminate\",color=\"accent\")\n    \n\n    \n                \n                    ./route-loading-indicator.component.scss\n                \n                :host{\n    display:block;\n    position: relative;\n    bottom:0px;\n    right:0px;\n    left:0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-progress-bar(*ngIf=\"loading\",mode=\"indeterminate\",color=\"accent\")'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RouteLoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteLoadingSubscriber.html":{"url":"classes/RouteLoadingSubscriber.html","title":"class - RouteLoadingSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteLoadingSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-toolbar/route-loading-indicator.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(indicatorCmp: RouteLoadingIndicatorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indicatorCmp\n                                                  \n                                                        \n                                                                        RouteLoadingIndicatorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(value?: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router,\n} from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\nexport class RouteLoadingSubscriber extends Subscriber {\n\n    constructor(private indicatorCmp: RouteLoadingIndicatorComponent) {\n        super();\n    }\n    next(value?: Event): void {\n        switch (true) {\n            case value instanceof NavigationStart:\n                this.indicatorCmp.loading = true;\n                break;\n            case value instanceof NavigationEnd:\n            case value instanceof NavigationCancel:\n            case value instanceof NavigationError:\n                this.indicatorCmp.loading = false;\n                break;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-route-loading-indicator',\n    styleUrls: ['./route-loading-indicator.component.scss'],\n    templateUrl: './route-loading-indicator.component.pug',\n})\nexport class RouteLoadingIndicatorComponent implements OnInit, OnDestroy {\n\n    public loading = false;\n    private subscription: Subscription;\n    constructor(private router: Router) {\n\n    }\n    public ngOnInit(): void {\n        this.subscription = this.router\n            .events\n            .subscribe(new RouteLoadingSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoutesSubscriber.html":{"url":"classes/RoutesSubscriber.html","title":"class - RoutesSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoutesSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/follow-bus-map.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(followMapInstance: FollowBusMapDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        followMapInstance\n                                                  \n                                                        \n                                                                    FollowBusMapDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(routes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, mergeMap } from 'rxjs/operators';\nimport { createVehicleIcon } from 'src/app/leaflet';\nimport { ITimestampVehicleLocation } from 'src/app/models';\nimport { ApiService } from 'src/app/services';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\nexport class RoutesSubscriber extends Subscriber {\n    public constructor(private followMapInstance: FollowBusMapDirective) {\n        super();\n    }\n    public next(routes) {\n        this.followMapInstance.setRoutePaths(routes.paths);\n    }\n}\n@Directive({\n    selector: 'map[appTripPassages]',\n})\nexport class FollowBusMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    @Input('location')\n    public set location(loc: ITimestampVehicleLocation) {\n        this.vehicleLocationSubject.next(loc);\n    }\n\n    public get location(): ITimestampVehicleLocation {\n        return this.vehicleLocationSubject.getValue();\n    }\n    private vehicleLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private updateObservable: Subscription;\n    private routePolyLines: L.Polyline[] = [];\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        private apiService: ApiService,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n\n    public setRoutePaths(paths: any[]): void {\n        for (const line of this.routePolyLines) {\n            line.remove();\n        }\n        this.routePolyLines = [];\n        for (const path of paths) {\n            const pointList: any[] = [];\n            for (const wayPoint of path.wayPoints) {\n                pointList.push(new L.LatLng(wayPoint.lat / 3600000, wayPoint.lon / 3600000));\n            }\n            const firstpolyline = L.polyline(pointList, {\n                color: path.color,\n                opacity: 0.5,\n                smoothFactor: 1,\n                weight: 3,\n            });\n            firstpolyline.addTo(this.getMap());\n            this.routePolyLines.push(firstpolyline);\n        }\n    }\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n    public addMarker(): void {\n        this.updateObservable = this.vehicleLocationSubject\n            .pipe(map((loc: ITimestampVehicleLocation) => loc.vehicle))\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n\n                    const vehicleIcon: L.DivIcon = createVehicleIcon(location.heading, location.name.split(' ')[0], 40);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            icon: vehicleIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    (marker as any).setRotationAngle(location.heading - 90);\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n        this.vehicleLocationSubject\n            .pipe(\n                filter(num => num !== null),\n                distinctUntilChanged(),\n                mergeMap(boundsa =>\n                    this.apiService.getRouteByTripId(boundsa.vehicle.tripId)))\n            .subscribe(new RoutesSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.updateObservable.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                resultObservable\n                            \n                            \n                                    Private\n                                searchParamSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    results\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(activatedRoute: ActivatedRoute, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/search/search.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/search/search.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/search/search.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/search/search.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resultObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : NEVER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchParamSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        results\n                    \n                \n\n                \n                    \n                        getresults()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/routing/search/search.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { NEVER, Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Component({\n    selector: 'app-search',\n    styleUrls: ['./search.component.scss'],\n    templateUrl: './search.component.pug',\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n\n    public get results(): Observable {\n        return this.resultObservable;\n    }\n    public data = '';\n    private searchParamSubscription: Subscription;\n    private resultObservable: Observable = NEVER;\n    public constructor(private activatedRoute: ActivatedRoute, private titleService: Title) {\n\n    }\n\n    public ngOnInit(): void {\n        this.searchParamSubscription = this.activatedRoute\n            .queryParams.subscribe((value) => {\n                this.data = value.q ? value.q : '';\n                this.titleService.setTitle('Search - \\\"' + this.data + '\\\"');\n            });\n        this.resultObservable = this.activatedRoute.data\n            .pipe(map((val: Data): IStopLocation[] => {\n                if (val.results) {\n                    return val.results;\n                }\n                return [];\n            }));\n    }\n    public ngOnDestroy(): void {\n        if (this.searchParamSubscription) {\n            this.searchParamSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        mat-nav-list(role=\"navigation\")\n    a(*ngFor=\"let item of results | async\",[routerLink]=\"['/stop', item.shortName]\",role=\"listitem\")\n        mat-list-item\n            mat-icon(mat-list-icon) place\n            h4(mat-line) {{item?.name}}\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n@import './../../../box-settings.scss';\n$toppadding: 100px;\n:host > mat-nav-list{\n    padding-top:100px;\n}\n@media (max-width: #{$boxMaxWidth + (2 * $boxMarginHorizontal)}) and (min-width: #{$boxMaxWidth + 1}){\n    :host > mat-nav-list{\n        padding-top: calc(50px + #{$toppadding /(4 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n    }\n}\n@media (max-width: #{$boxMaxWidth}){\n    :host > mat-nav-list{\n        padding-top:0px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list(role=\"navigation\")    a(*ngFor=\"let item of results | async\",[routerLink]=\"[\\'/stop\\', item.shortName]\",role=\"listitem\")        mat-list-item            mat-icon(mat-list-icon) place            h4(mat-line) {{item?.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nSearchComponent\n\nSearchComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/routing/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SearchRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatListModule } from '@angular/material';\nimport { SearchResultResolver } from './search-result.resolver';\nimport { SearchRoutingModule } from './search-routing.module';\nimport { SearchComponent } from './search.component';\n@NgModule({\n    declarations: [\n        SearchComponent,\n    ],\n    imports: [\n        CommonModule,\n        SearchRoutingModule,\n        MatIconModule,\n        MatListModule,\n    ],\n    providers: [\n        SearchResultResolver,\n    ],\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SearchResultResolver.html":{"url":"guards/SearchResultResolver.html","title":"guard - SearchResultResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SearchResultResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/routing/search/search-result.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(stopService: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/search/search-result.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/search/search-result.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { StopPointService } from 'src/app/services/stop-point.service';\n\n@Injectable()\nexport class SearchResultResolver implements Resolve {\n\n    public constructor(private stopService: StopPointService) { }\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.stopService.stopLocationsObservable\n            .pipe(take(1),\n                map((stops: IStopLocation[]): IStopLocation[] =>\n                    stops\n                        /**\n                         * Filter by search term\n                         */\n                        .filter(option => option.name.toLowerCase().includes(route.queryParams.q))\n                        .sort((a, b) => a.name.localeCompare(b.name))));\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/routing/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchResultResolver } from './search-result.resolver';\nimport { SearchComponent } from './search.component';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: SearchComponent,\n        path: '',\n        resolve: {\n            results: SearchResultResolver,\n        },\n        runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class SearchRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsLoadSubscriber.html":{"url":"classes/SettingsLoadSubscriber.html","title":"class - SettingsLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(resolve: (arg: void) => void)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolve\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISettings } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { from, Observable, Subscriber } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class SettingsLoadSubscriber extends Subscriber {\n    public constructor(private resolve: (arg: void) => void) {\n        super();\n    }\n\n    public error(err: any): void {\n        this.resolve();\n        // tslint:disable-next-line:no-console\n        console.error(err);\n    }\n\n    public complete(): void {\n        this.resolve();\n    }\n}\n\n@Injectable(\n    { providedIn: 'root' },\n)\nexport class SettingsService {\n\n    private mSettings: ISettings = undefined;\n\n    constructor(private apiService: ApiService) {\n\n    }\n\n    public get settings(): ISettings {\n        return this.mSettings;\n    }\n\n    public getInitialMapCenter(): L.LatLng {\n        if (this.settings &&\n            this.settings.INITIAL_LAT &&\n            this.settings.INITIAL_LON) {\n            return new L.LatLng(this.settings.INITIAL_LAT / 3600000, this.settings.INITIAL_LON / 3600000);\n        }\n        return new L.LatLng(0, 0);\n    }\n    public getInitialMapZoom(): number {\n        if (this.settings && this.settings.INITIAL_ZOOM) {\n            return this.settings.INITIAL_ZOOM;\n        }\n        return 20;\n    }\n\n    public load(): Promise {\n        return new Promise((resolve: (arg: void) => void, reject: (err: any) => void) =>\n            this.apiService.getSettings()\n                .pipe(tap((value: ISettings): void => {\n                    this.mSettings = value;\n                }),\n                    map((value: ISettings): void => {\n                        return;\n                    }),\n                    catchError((err: any): Observable =>\n                        from([undefined])))\n                .subscribe(new SettingsLoadSubscriber(resolve)));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mSettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInitialMapCenter\n                            \n                            \n                                    Public\n                                getInitialMapZoom\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    settings\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitialMapCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMapCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.LatLng\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitialMapZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMapZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ISettings\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n\n                \n                    \n                        getsettings()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/settings.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISettings } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { from, Observable, Subscriber } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class SettingsLoadSubscriber extends Subscriber {\n    public constructor(private resolve: (arg: void) => void) {\n        super();\n    }\n\n    public error(err: any): void {\n        this.resolve();\n        // tslint:disable-next-line:no-console\n        console.error(err);\n    }\n\n    public complete(): void {\n        this.resolve();\n    }\n}\n\n@Injectable(\n    { providedIn: 'root' },\n)\nexport class SettingsService {\n\n    private mSettings: ISettings = undefined;\n\n    constructor(private apiService: ApiService) {\n\n    }\n\n    public get settings(): ISettings {\n        return this.mSettings;\n    }\n\n    public getInitialMapCenter(): L.LatLng {\n        if (this.settings &&\n            this.settings.INITIAL_LAT &&\n            this.settings.INITIAL_LON) {\n            return new L.LatLng(this.settings.INITIAL_LAT / 3600000, this.settings.INITIAL_LON / 3600000);\n        }\n        return new L.LatLng(0, 0);\n    }\n    public getInitialMapZoom(): number {\n        if (this.settings && this.settings.INITIAL_ZOOM) {\n            return this.settings.INITIAL_ZOOM;\n        }\n        return 20;\n    }\n\n    public load(): Promise {\n        return new Promise((resolve: (arg: void) => void, reject: (err: any) => void) =>\n            this.apiService.getSettings()\n                .pipe(tap((value: ISettings): void => {\n                    this.mSettings = value;\n                }),\n                    map((value: ISettings): void => {\n                        return;\n                    }),\n                    catchError((err: any): Observable =>\n                        from([undefined])))\n                .subscribe(new SettingsLoadSubscriber(resolve)));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeSidebar\n                            \n                            \n                                    Public\n                                openGithub\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appVersion\n                                \n                                \n                                    angularVersion\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sidebar/sidebar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/sidebar.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openGithub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/sidebar.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appVersion\n                    \n                \n\n                \n                    \n                        getappVersion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/sidebar.component.ts:26\n                                \n                            \n                    \n                        \n                                The app version found inside the package\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        angularVersion\n                    \n                \n\n                \n                    \n                        getangularVersion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/sidebar.component.ts:34\n                                \n                            \n                    \n                        \n                                The @angular/core version used\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, VERSION } from '@angular/core';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { environment } from 'src/environments/environment.example';\n@Component({\n    selector: 'app-sidebar',\n    styleUrls: ['./sidebar.component.scss'],\n    templateUrl: './sidebar.component.pug',\n})\nexport class SidebarComponent {\n    public constructor(private sidebarService: SidebarService) {\n\n    }\n\n    public closeSidebar(): void {\n        this.sidebarService.closeSidebar();\n    }\n\n    public openGithub(): void {\n        window.open('https://github.com/donmahallem/TrapezeClientNg', '_blank');\n    }\n\n    /**\n     * The app version found inside the package\n     * @returns the package version\n     */\n    public get appVersion(): string {\n        return environment.version;\n    }\n\n    /**\n     * The @angular/core version used\n     * @returns Version {@link VERSION.full}\n     */\n    public get angularVersion(): string {\n        return VERSION.full;\n    }\n}\n\n    \n\n    \n        button(mat-icon-button,(click)=\"closeSidebar()\")\n    mat-icon close\nmat-list\n    h3(matSubheader) Head\n    mat-list-item\n        mat-icon(matListIcon) home\n        h4(matLine) Home\n        p(matLine) Home\n    mat-list-item\n        mat-icon(matListIcon) place\n        h4(matLine) Stops\n        p(matLine) List of stops\n    mat-list-item\n        mat-icon(matListIcon) warning\n        h4(matLine) No Content yet\n        p(matLine) New stuff to come?\n    mat-divider\n    mat-list-item\n        mat-icon(matListIcon) info\n        h4(matLine) Version\n        p(matLine) {{appVersion}}\n    mat-list-item((click)=\"openGithub()\")\n        mat-icon(matListIcon) info\n        h4(matLine) Github\n        p(matLine) The Projects Source Code\n    mat-list-item\n        mat-icon(matListIcon) info\n        h4(matLine) Angular Version\n        p(matLine) {{angularVersion}}\n.info-box\n    span(title=\"App Version\") App: {{appVersion}}\n    span(title=\"Angular Version\") Angular: {{angularVersion}}\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                :host{\n    display:flex;\n    justify-items: stretch;\n    flex-direction: column;\n    height:100%;\n}\nmat-list{\n    flex:1 0 auto;\n    overflow-y:auto;\n}\n.info-box{\n    border-top: 1px solid grey;\n    flex:0 0;\n    display:flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'button(mat-icon-button,(click)=\"closeSidebar()\")    mat-icon closemat-list    h3(matSubheader) Head    mat-list-item        mat-icon(matListIcon) home        h4(matLine) Home        p(matLine) Home    mat-list-item        mat-icon(matListIcon) place        h4(matLine) Stops        p(matLine) List of stops    mat-list-item        mat-icon(matListIcon) warning        h4(matLine) No Content yet        p(matLine) New stuff to come?    mat-divider    mat-list-item        mat-icon(matListIcon) info        h4(matLine) Version        p(matLine) {{appVersion}}    mat-list-item((click)=\"openGithub()\")        mat-icon(matListIcon) info        h4(matLine) Github        p(matLine) The Projects Source Code    mat-list-item        mat-icon(matListIcon) info        h4(matLine) Angular Version        p(matLine) {{angularVersion}}.info-box    span(title=\"App Version\") App: {{appVersion}}    span(title=\"Angular Version\") Angular: {{angularVersion}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sidebar/sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n} from '@angular/material';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    declarations: [\n        SidebarComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        SidebarComponent,\n        MatButtonModule,\n    ],\n    imports: [\n        CommonModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        MatButtonModule,\n    ],\n    providers: [\n    ],\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sidebar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mSidebarStatusSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeSidebar\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarOpen\n                                \n                                \n                                    sidebarObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sidebar.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSidebarStatusSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidebar.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarOpen\n                    \n                \n\n                \n                    \n                        getsidebarOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/sidebar.service.ts:8\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sidebarObservable\n                    \n                \n\n                \n                    \n                        getsidebarObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/sidebar.service.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n    providedIn: 'root',\n})\nexport class SidebarService {\n\n    public get sidebarOpen(): boolean {\n        return this.mSidebarStatusSubject.value;\n    }\n    public get sidebarObservable(): Observable {\n        return this.mSidebarStatusSubject.asObservable();\n    }\n    private mSidebarStatusSubject: BehaviorSubject = new BehaviorSubject(false);\n    public constructor() { }\n\n    public toggleSidebar(): void {\n        this.mSidebarStatusSubject.next(!this.mSidebarStatusSubject.getValue());\n    }\n\n    public openSidebar(): void {\n        this.mSidebarStatusSubject.next(true);\n    }\n\n    public closeSidebar(): void {\n        this.mSidebarStatusSubject.next(false);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopInfoComponent.html":{"url":"components/StopInfoComponent.html","title":"component - StopInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StopInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/stop-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stop-info\n            \n\n            \n                styleUrls\n                ./stop-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stop-info.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccured\n                            \n                            \n                                    Private\n                                mStopInfo\n                            \n                            \n                                    Private\n                                mTimerObservable\n                            \n                            \n                                    Private\n                                mTimeUntilRefresh\n                            \n                            \n                                    Public\n                                routes\n                            \n                            \n                                    Public\n                                stopLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                tickInterval\n                            \n                            \n                                    Public\n                                    Readonly\n                                ticksToRefresh\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertTime\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeUntilRefresh\n                                \n                                \n                                    stopId\n                                \n                                \n                                    stopInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, apiService: ApiService, stopService: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-info.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(time, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:59\n                \n            \n\n\n            \n                \n                    Converts the time to a human readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData(data: IStopPassage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IStopPassage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorOccured\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStopInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopPassage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTimerObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:45\n                            \n                        \n\n                \n                    \n                        The timer overservable dictating the update interval\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTimeUntilRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:37\n                            \n                        \n\n                \n                    \n                        The stop location.\nCan be undefined or an instance of IStopLocation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            tickInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:31\n                            \n                        \n\n                \n                    \n                        Tick interval in miliseconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            ticksToRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscription for the update Observable\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeUntilRefresh\n                    \n                \n\n                \n                    \n                        gettimeUntilRefresh()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:15\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopId\n                    \n                \n\n                \n                    \n                        getstopId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopInfo\n                    \n                \n\n                \n                    \n                        getstopInfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopLocation, IStopPassage, StopId } from '@donmahallem/trapeze-api-types';\nimport { combineLatest, from, merge, timer, Observable, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map } from 'rxjs/operators';\nimport { StopPointService } from 'src/app/services/stop-point.service';\nimport { ApiService } from '../../services';\n@Component({\n    selector: 'app-stop-info',\n    styleUrls: ['./stop-info.component.scss'],\n    templateUrl: './stop-info.component.pug',\n})\nexport class StopInfoComponent implements AfterViewInit, OnDestroy {\n\n    public get timeUntilRefresh(): number {\n        return this.mTimeUntilRefresh;\n    }\n    public get stopId(): string {\n        return this.route.snapshot.params.stopId;\n    }\n\n    public get stopInfo(): IStopPassage {\n        return this.mStopInfo;\n    }\n    public routes: any[] = [];\n    public errorOccured = false;\n    public readonly ticksToRefresh: number = 50;\n    /**\n     * Tick interval in miliseconds\n     */\n    public readonly tickInterval: number = 200;\n\n    /**\n     * The stop location.\n     * Can be undefined or an instance of {@link IStopLocation}\n     */\n    public stopLocation: IStopLocation = undefined;\n    /**\n     * Subscription for the update Observable\n     */\n    private updateSubscription: Subscription;\n    /**\n     * The timer overservable dictating the update interval\n     */\n    private mTimerObservable: Observable;\n    private mTimeUntilRefresh = 0;\n    private mStopInfo: IStopPassage;\n\n    constructor(private route: ActivatedRoute, private apiService: ApiService,\n        private stopService: StopPointService) {\n        this.mStopInfo = this.route.snapshot.data.stopInfo;\n    }\n\n    /**\n     * Converts the time to a human readable format\n     * @param time time\n     * @param data data\n     */\n    public convertTime(time, data) {\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n    public ngAfterViewInit(): void {\n        this.mTimerObservable = timer(this.tickInterval, this.tickInterval);\n        this.mTimerObservable.subscribe((tick: number) => {\n            const ticksLeft: number = this.ticksToRefresh - (tick % this.ticksToRefresh);\n            const diff: number = Math.round((ticksLeft * this.tickInterval) / 1000);\n            if (diff !== this.mTimeUntilRefresh) {\n                this.mTimeUntilRefresh = diff;\n            }\n        });\n        const stopIdObvservable: Observable = this.route.params\n            .pipe(map((a: { stopId: string }): string => a.stopId));\n        stopIdObvservable.pipe(map((id: string) =>\n            this.stopService.getStopLocation(id)))\n            .subscribe((stop) => {\n                this.stopLocation = stop;\n            });\n        const refreshObservable = combineLatest([this.mTimerObservable.pipe(filter((val: number) =>\n            val % this.ticksToRefresh === 0 && val > 0)), stopIdObvservable])\n            .pipe(\n                map((a): string => a[1]),\n                flatMap((stopId: StopId): Observable =>\n                    this.apiService.getStopPassages(stopId)),\n                catchError((err, a) => {\n                    this.errorOccured = true;\n                    return from([undefined]);\n                }),\n                filter((item: IStopPassage) =>\n                    item !== undefined));\n        /**\n         * combine observables\n         */\n        this.updateSubscription = merge(refreshObservable, this.route.data.pipe(map((value) =>\n            value.stopInfo)))\n            .subscribe(this.updateData.bind(this));\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n    private updateData(data: IStopPassage): void {\n        this.errorOccured = false;\n        if ((data as any).stopShortName === this.stopId) {\n            this.mStopInfo = data;\n        }\n    }\n\n}\n\n    \n\n    \n        app-map-header-box([blur]=\"stopLocation===undefined\",title=\"{{stopInfo?.stopName}}\",i18n-title=\"@@stopName\",i18n-subtitle=\"Refreshing in x seconds@@refreshingInXSeconds\",subtitle=\"Refreshing in {{timeUntilRefresh}}s\")\n    map(appStopLocation,[location]=\"stopLocation\",role=\"none\")\nmat-tab-group(mat-stretch-tabs,[dynamicHeight]=\"true\")\n    mat-tab(i18n-label=\"tab header departures|Departures@@departures\",label=\"Departures\")\n        app-departure-list([departures]=\"stopInfo?.actual\")\n    mat-tab(i18n-label=\"tab header routes|Routes@@Routes\",label=\"Routes\")\n        app-route-list([routes]=\"stopInfo?.routes\")\ndiv.error-box(*ngIf=\"errorOccured\")\n    h3 Error occured\n    p Will retry in a {{timeUntilRefresh}}s\n\n    \n\n    \n                \n                    ./stop-info.component.scss\n                \n                mat-tab-group{\n    flex-grow: 1;\n}\ndiv.error-box{\n    flex:0 0 auto;\n    background:#B00020;\n    color:white;\n    padding:5px 20px 5px 20px;\n    h3{\n        font-size: 25px;\n        line-height: 30px;\n        padding:0px;\n        margin:0px;\n    }\n    p{\n        font-size: 15px;\n        line-height: 20px;\n        padding:0px;\n        margin:0px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-map-header-box([blur]=\"stopLocation===undefined\",title=\"{{stopInfo?.stopName}}\",i18n-title=\"@@stopName\",i18n-subtitle=\"Refreshing in x seconds@@refreshingInXSeconds\",subtitle=\"Refreshing in {{timeUntilRefresh}}s\")    map(appStopLocation,[location]=\"stopLocation\",role=\"none\")mat-tab-group(mat-stretch-tabs,[dynamicHeight]=\"true\")    mat-tab(i18n-label=\"tab header departures|Departures@@departures\",label=\"Departures\")        app-departure-list([departures]=\"stopInfo?.actual\")    mat-tab(i18n-label=\"tab header routes|Routes@@Routes\",label=\"Routes\")        app-route-list([routes]=\"stopInfo?.routes\")div.error-box(*ngIf=\"errorOccured\")    h3 Error occured    p Will retry in a {{timeUntilRefresh}}s'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'StopInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StopInfoResolver.html":{"url":"guards/StopInfoResolver.html","title":"guard - StopInfoResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    StopInfoResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/stop/stop-info.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-info.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.resolver.ts:28\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopPassage } from '@donmahallem/trapeze-api-types';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../services';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class StopInfoResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: ApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getStopPassages(route.params.stopId)\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StopLocationMapDirective.html":{"url":"directives/StopLocationMapDirective.html","title":"directive - StopLocationMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StopLocationMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/stop/stop-map.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive displaying a map with the StopLocation\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appStopLocation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopLocationSubject\n                            \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startUpdater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, userLocationService: UserLocationService, zone: NgZone, settingsService: SettingsService, locationService: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-map.directive.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationService\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startUpdater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startUpdater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:53\n                \n            \n\n\n            \n                \n                    Creates the Update Observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n\n                \n                    \n                        setlocation(loc)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            loc\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { createStopIcon } from 'src/app/leaflet';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\n/**\n * Directive displaying a map with the StopLocation\n */\n@Directive({\n    selector: 'map[appStopLocation]',\n})\nexport class StopLocationMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    @Input('location')\n    public set location(loc: IStopLocation) {\n        this.stopLocationSubject.next(loc);\n    }\n    private updateSubscription: Subscription;\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private stopLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        settingsService: SettingsService,\n        private locationService: Location) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.startUpdater();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n\n    /**\n     * Creates the Update Observable\n     */\n    public startUpdater(): void {\n        if (this.updateSubscription) {\n            return;\n        }\n        this.updateSubscription = this.stopLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n                    const stopIcon: L.Icon = createStopIcon(this.locationService);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            icon: stopIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopModule.html":{"url":"modules/StopModule.html","title":"module - StopModule","body":"\n                   \n\n\n\n\n    Modules\n    StopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StopModule\n\n\n\ncluster_StopModule_declarations\n\n\n\ncluster_StopModule_imports\n\n\n\n\nDepartureListComponent\n\nDepartureListComponent\n\n\n\nStopModule\n\nStopModule\n\nStopModule -->\n\nDepartureListComponent->StopModule\n\n\n\n\n\nDepartureListItemComponent\n\nDepartureListItemComponent\n\nStopModule -->\n\nDepartureListItemComponent->StopModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nStopModule -->\n\nRouteListComponent->StopModule\n\n\n\n\n\nStopInfoComponent\n\nStopInfoComponent\n\nStopModule -->\n\nStopInfoComponent->StopModule\n\n\n\n\n\nStopLocationMapDirective\n\nStopLocationMapDirective\n\nStopModule -->\n\nStopLocationMapDirective->StopModule\n\n\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nStopModule -->\n\nMapHeaderBoxModule->StopModule\n\n\n\n\n\nStopRoutingModule\n\nStopRoutingModule\n\nStopModule -->\n\nStopRoutingModule->StopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stop/stop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DepartureListComponent\n                        \n                        \n                            DepartureListItemComponent\n                        \n                        \n                            RouteListComponent\n                        \n                        \n                            StopInfoComponent\n                        \n                        \n                            StopLocationMapDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapHeaderBoxModule\n                        \n                        \n                            StopRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { MapHeaderBoxModule } from '../common';\nimport { DepartureListItemComponent } from './departure-list-item.component';\nimport { DepartureListComponent } from './departure-list.component';\nimport { RouteListComponent } from './route-list.component';\nimport { StopInfoComponent } from './stop-info.component';\nimport { StopInfoResolver } from './stop-info.resolver';\nimport { StopLocationMapDirective } from './stop-map.directive';\nimport { StopRoutingModule } from './stop-routing.module';\n@NgModule({\n    declarations: [\n        StopInfoComponent,\n        DepartureListComponent,\n        RouteListComponent,\n        StopLocationMapDirective,\n        DepartureListItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        StopRoutingModule,\n        MatTabsModule,\n        MapHeaderBoxModule,\n    ],\n    providers: [\n        StopInfoResolver,\n    ],\n})\nexport class StopModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StopPointLoadSubscriber.html":{"url":"classes/StopPointLoadSubscriber.html","title":"class - StopPointLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StopPointLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-point.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(service: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-point.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(stops: IStopLocation[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stops\n                                    \n                                            IStopLocation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { from, Observable, Subject, Subscriber } from 'rxjs';\nimport { catchError, delay, filter, flatMap, map, shareReplay, startWith, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\nimport { AppNotificationService } from './app-notification.service';\n\nexport class StopPointLoadSubscriber extends Subscriber {\n\n    public constructor(private service: StopPointService) {\n        super();\n    }\n\n    public next(stops: IStopLocation[]): void {\n        (this.service as any).mStopLocations = stops;\n    }\n\n    public error(err: any): void {\n    }\n\n    public complete(): void {\n    }\n}\n\n/**\n * Service for caching and retrieving Stop Locations\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class StopPointService {\n\n    private mStopLocations: IStopLocation[];\n    private sharedReplay: Observable = undefined;\n    private retrySubject: Subject = new Subject();\n    constructor(private api: ApiService, private notificationService: AppNotificationService) { }\n\n    public createStopLoadObservable(): Observable {\n        return this.retrySubject.pipe(delay(10 * 1000))\n            .pipe(\n                startWith(undefined),\n                flatMap((): Observable =>\n                    this.api.getStations()\n                        .pipe(\n                            map((value): IStopLocation[] =>\n                                value.stops),\n                            catchError((err: any, caught: Observable): Observable => {\n                                this.notificationService.report(err);\n                                this.retrySubject.next();\n                                return from([[]]);\n                            }))),\n                tap((value: IStopLocation[]) => {\n                    this.mStopLocations = value;\n                }),\n                catchError((err) =>\n                    from([[]])),\n                shareReplay(1));\n    }\n\n    public get stopLocations(): IStopLocation[] {\n        return this.mStopLocations ? this.mStopLocations : [];\n    }\n\n    /**\n     * retrieves the stop or undefined if not loaded yet or undefined\n     * @param stopShortName short name\n     */\n    public getStopLocation(stopShortName: string): IStopLocation {\n        for (const stop of this.stopLocations) {\n            if (stop.shortName === stopShortName) {\n                return stop;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Searches the stops for a given stopShortName\n     * @param stopShortName the stop shortName\n     */\n    public searchStop(stopShortName: string): Observable {\n        return this.stopLocationsObservable\n            .pipe(\n                flatMap((stops: IStopLocation[]): Observable =>\n                    from(stops)),\n                filter((stop: IStopLocation) => {\n                    if (stop) {\n                        return stop.shortName === stopShortName;\n                    }\n                    return false;\n                }));\n    }\n\n    /**\n     * Gets the shared stop location observable\n     */\n    public get stopLocationsObservable(): Observable {\n        if (this.sharedReplay === undefined) {\n            this.sharedReplay = this.createStopLoadObservable();\n        }\n        return this.sharedReplay;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopPointService.html":{"url":"injectables/StopPointService.html","title":"injectable - StopPointService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StopPointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-point.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for caching and retrieving Stop Locations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mStopLocations\n                            \n                            \n                                    Private\n                                retrySubject\n                            \n                            \n                                    Private\n                                sharedReplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createStopLoadObservable\n                            \n                            \n                                    Public\n                                getStopLocation\n                            \n                            \n                                    Public\n                                searchStop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stopLocations\n                                \n                                \n                                    stopLocationsObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, notificationService: AppNotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-point.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        AppNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createStopLoadObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createStopLoadObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopLocation(stopShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:68\n                \n            \n\n\n            \n                \n                    retrieves the stop or undefined if not loaded yet or undefined\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        short name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IStopLocation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchStop(stopShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:81\n                \n            \n\n\n            \n                \n                    Searches the stops for a given stopShortName\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the stop shortName\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStopLocations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            retrySubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sharedReplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stopLocations\n                    \n                \n\n                \n                    \n                        getstopLocations()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopLocationsObservable\n                    \n                \n\n                \n                    \n                        getstopLocationsObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:97\n                                \n                            \n                    \n                        \n                                Gets the shared stop location observable\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { from, Observable, Subject, Subscriber } from 'rxjs';\nimport { catchError, delay, filter, flatMap, map, shareReplay, startWith, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\nimport { AppNotificationService } from './app-notification.service';\n\nexport class StopPointLoadSubscriber extends Subscriber {\n\n    public constructor(private service: StopPointService) {\n        super();\n    }\n\n    public next(stops: IStopLocation[]): void {\n        (this.service as any).mStopLocations = stops;\n    }\n\n    public error(err: any): void {\n    }\n\n    public complete(): void {\n    }\n}\n\n/**\n * Service for caching and retrieving Stop Locations\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class StopPointService {\n\n    private mStopLocations: IStopLocation[];\n    private sharedReplay: Observable = undefined;\n    private retrySubject: Subject = new Subject();\n    constructor(private api: ApiService, private notificationService: AppNotificationService) { }\n\n    public createStopLoadObservable(): Observable {\n        return this.retrySubject.pipe(delay(10 * 1000))\n            .pipe(\n                startWith(undefined),\n                flatMap((): Observable =>\n                    this.api.getStations()\n                        .pipe(\n                            map((value): IStopLocation[] =>\n                                value.stops),\n                            catchError((err: any, caught: Observable): Observable => {\n                                this.notificationService.report(err);\n                                this.retrySubject.next();\n                                return from([[]]);\n                            }))),\n                tap((value: IStopLocation[]) => {\n                    this.mStopLocations = value;\n                }),\n                catchError((err) =>\n                    from([[]])),\n                shareReplay(1));\n    }\n\n    public get stopLocations(): IStopLocation[] {\n        return this.mStopLocations ? this.mStopLocations : [];\n    }\n\n    /**\n     * retrieves the stop or undefined if not loaded yet or undefined\n     * @param stopShortName short name\n     */\n    public getStopLocation(stopShortName: string): IStopLocation {\n        for (const stop of this.stopLocations) {\n            if (stop.shortName === stopShortName) {\n                return stop;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Searches the stops for a given stopShortName\n     * @param stopShortName the stop shortName\n     */\n    public searchStop(stopShortName: string): Observable {\n        return this.stopLocationsObservable\n            .pipe(\n                flatMap((stops: IStopLocation[]): Observable =>\n                    from(stops)),\n                filter((stop: IStopLocation) => {\n                    if (stop) {\n                        return stop.shortName === stopShortName;\n                    }\n                    return false;\n                }));\n    }\n\n    /**\n     * Gets the shared stop location observable\n     */\n    public get stopLocationsObservable(): Observable {\n        if (this.sharedReplay === undefined) {\n            this.sharedReplay = this.createStopLoadObservable();\n        }\n        return this.sharedReplay;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopRoutingModule.html":{"url":"modules/StopRoutingModule.html","title":"module - StopRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stop/stop-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopInfoComponent } from './stop-info.component';\nimport { StopInfoResolver } from './stop-info.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopInfoComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':stopId',\n        resolve: {\n            stopInfo: StopInfoResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopsInfoComponent.html":{"url":"components/StopsInfoComponent.html","title":"component - StopsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StopsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stops/stops-info.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stops-info\n            \n\n            \n                styleUrls\n                ./stops-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stops-info.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mStops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/stops-info.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasHeader(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/stops-info.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStops\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stops/stops-info.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stops/stops-info.component.ts:25\n                                \n                            \n                    \n                        \n                                The stops to be displayed\n\n\n                                \n                                \n                                \n                                    Returns :     IStopLocation[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\n@Component({\n    selector: 'app-stops-info',\n    styleUrls: ['./stops-info.component.scss'],\n    templateUrl: './stops-info.component.pug',\n})\nexport class StopsInfoComponent {\n    private mStops: IStopLocation[] = [];\n    constructor(private activatedRoute: ActivatedRoute) {\n        const st: IStopLocation[] = this.activatedRoute.snapshot.data.stops.stops.sort((a, b) =>\n            a.name.localeCompare(b.name));\n        this.mStops = st;\n\n    }\n\n    public hasHeader(idx: number): boolean {\n        return idx === 0 || this.stops[idx].name.charAt(0) !== this.stops[idx - 1].name.charAt(0);\n    }\n    /**\n     * The stops to be displayed\n     * @returns a list of stops to be used\n     */\n    public get stops(): IStopLocation[] {\n        return this.mStops;\n    }\n\n}\n\n    \n\n    \n        mat-nav-list.stoplist(role=\"list\")\n    ng-container(*ngFor=\"let item of stops;let idx = index;\")\n        mat-divider(*ngIf=\"hasHeader(idx)&&idx>0\")\n        h3(*ngIf=\"hasHeader(idx)\",mat-subheader) {{item.name.charAt(0)}}\n        a([routerLink]=\"['/stop', item.shortName]\",title=\"{{item?.name}}\")\n            mat-list-item(role=\"listitem\")\n                mat-icon(mat-list-icon) place\n                h4(mat-line) {{item?.name}}\n    \n\n    \n                \n                    ./stops-info.component.scss\n                \n                mat-nav-list.stoplist {\n    overflow-y: auto;\n    overflow-x: hidden;\n    flex: 1;\n    \n}\n@import './../../box-settings.scss';\n@media (min-width: #{$boxMaxWidth + 1}){\n    mat-nav-list.stoplist{\n        padding-top:100px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list.stoplist(role=\"list\")    ng-container(*ngFor=\"let item of stops;let idx = index;\")        mat-divider(*ngIf=\"hasHeader(idx)&&idx>0\")        h3(*ngIf=\"hasHeader(idx)\",mat-subheader) {{item.name.charAt(0)}}        a([routerLink]=\"[\\'/stop\\', item.shortName]\",title=\"{{item?.name}}\")            mat-list-item(role=\"listitem\")                mat-icon(mat-list-icon) place                h4(mat-line) {{item?.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'StopsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsModule.html":{"url":"modules/StopsModule.html","title":"module - StopsModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\n\nStopsInfoComponent\n\nStopsInfoComponent\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nStopsInfoComponent->StopsModule\n\n\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nStopsModule -->\n\nRetryDialogModule->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Stops lazy loaded Module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StopsInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RetryDialogModule\n                        \n                        \n                            StopsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatDialogModule,\n    MatIconModule,\n    MatListModule,\n} from '@angular/material';\nimport { RetryDialogModule } from '../common/retry-dialog';\nimport { StopsInfoComponent } from './stops-info.component';\nimport { StopsRoutingModule } from './stops-routing.module';\nimport { StopsResolver } from './stops.resolver';\n\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        StopsInfoComponent,\n    ],\n    imports: [\n        StopsRoutingModule,\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        RetryDialogModule,\n        MatDialogModule,\n    ],\n    providers: [\n        StopsResolver,\n    ],\n})\nexport class StopsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StopsResolver.html":{"url":"guards/StopsResolver.html","title":"guard - StopsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    StopsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/stops/stops.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    A Resolver for the Stations Response\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/stops.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/stops.resolver.ts:32\n                \n            \n\n\n            \n                \n                    Resolves the station response\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The activated RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The router state snapshot\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that resolves the {\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopLocations } from '@donmahallem/trapeze-api-types';\nimport { throwError, EMPTY, Observable } from 'rxjs';\nimport { catchError, retryWhen } from 'rxjs/operators';\nimport { retryDialogStrategy } from 'src/app/rxjs-util';\nimport { ApiService } from '../../services';\nimport { RetryDialogComponent } from '../common/retry-dialog';\n\n/**\n * A Resolver for the Stations Response\n */\n@Injectable()\nexport class StopsResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     */\n    public constructor(private api: ApiService,\n        private router: Router,\n        private dialog: MatDialog) { }\n\n    /**\n     * Resolves the station response\n     * @param route The activated RouteSnapshot\n     * @param state The router state snapshot\n     * @returns An observable that resolves the {@StationsResponse}\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getStations()\n            .pipe(catchError((err: any | HttpErrorResponse): Observable => {\n                if (err.status === 404) {\n                    this.router.navigate(['error', 'not-found']);\n                    return EMPTY;\n                } else {\n                    return throwError(err);\n                }\n            }),\n                retryWhen(retryDialogStrategy((error: any | HttpErrorResponse) =>\n                    this.dialog.open(RetryDialogComponent, {\n                        data: {\n                            code: error.status ? error.status : undefined,\n                            message: 'test',\n                        },\n                    }))));\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsRoutingModule.html":{"url":"modules/StopsRoutingModule.html","title":"module - StopsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopsInfoComponent } from './stops-info.component';\nimport { StopsResolver } from './stops.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopsInfoComponent,\n        path: '',\n        resolve: {\n            stops: StopsResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarSearchBoxComponent.html":{"url":"components/ToolbarSearchBoxComponent.html","title":"component - ToolbarSearchBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarSearchBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/search-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar-search\n            \n\n            \n                styleUrls\n                ./search-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-box.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchControl\n                            \n                            \n                                    Public\n                                searchInput\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLoseFocus\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusSearch\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/search-box.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        focusSearch\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoseFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoseFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('searchInput', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter, startWith } from 'rxjs/operators';\n@Component({\n    selector: 'app-toolbar-search',\n    styleUrls: ['./search-box.component.scss'],\n    templateUrl: './search-box.component.pug',\n})\nexport class ToolbarSearchBoxComponent implements OnInit, OnDestroy {\n\n    searchControl = new FormControl();\n\n    @ViewChild('searchInput', { static: false })\n    public searchInput: ElementRef;\n\n    @Output()\n    public readonly focusSearch: EventEmitter = new EventEmitter();\n    private updateSubscription: Subscription;\n    constructor(private router: Router) {\n    }\n\n    public onLoseFocus(): void {\n        this.focusSearch.next(false);\n    }\n\n    public ngOnInit(): void {\n        this.updateSubscription = this.searchControl.valueChanges\n            .pipe(\n                startWith(''),\n                filter((value: string): boolean =>\n                    value.length > 0),\n                debounceTime(200),\n            )\n            .subscribe((value: string) => {\n                this.router.navigate(['search'], {\n                    queryParams: {\n                        q: value,\n                    },\n                    replaceUrl: value.length > 1,\n                });\n            });\n    }\n\n    public onSubmit(): void {\n        this.router.navigate(['search'], {\n            queryParams: {\n                q: this.searchControl.value,\n            },\n            skipLocationChange: false,\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n    \n        form(role=\"search\")\n    mat-form-field\n        input(#searchInput,(blur)=\"onLoseFocus()\",type=\"search\",aria-label=\"Number\",placeholder=\"Stopname\",matInput,[formControl]=\"searchControl\",i18n-placeholder=\"Stopname to search@@stopnameToSearch\",i18n-aria-placeholder=\"Stopname to search@@stopnameToSearch\",(ngSubmit)=\"onSubmit()\",(keyup.enter)=\"onSubmit()\")\n    \n\n    \n                \n                    ./search-box.component.scss\n                \n                :host{\n    display:block;\n}\nform,mat-form-field{\n    width:100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'form(role=\"search\")    mat-form-field        input(#searchInput,(blur)=\"onLoseFocus()\",type=\"search\",aria-label=\"Number\",placeholder=\"Stopname\",matInput,[formControl]=\"searchControl\",i18n-placeholder=\"Stopname to search@@stopnameToSearch\",i18n-aria-placeholder=\"Stopname to search@@stopnameToSearch\",(ngSubmit)=\"onSubmit()\",(keyup.enter)=\"onSubmit()\")'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarSearchBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripPassagesComponent.html":{"url":"components/TripPassagesComponent.html","title":"component - TripPassagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripPassagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/trip-passages/trip-passages.component.ts\n\n\n    \n        Description\n    \n    \n        Component displaying the TripPassages for a Trip\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-passages\n            \n\n            \n                styleUrls\n                ./trip-passages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trip-passages.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                DEBOUNCE_TIME\n                            \n                            \n                                    Private\n                                pollSubscription\n                            \n                            \n                                    Private\n                                snapshotDataSubscription\n                            \n                            \n                                    Private\n                                status\n                            \n                            \n                                    Public\n                                    Readonly\n                                StatusOps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tripData\n                                \n                                \n                                    lastTimestamp\n                                \n                                \n                                    statusCode\n                                \n                                \n                                    tripId\n                                \n                                \n                                    routeName\n                                \n                                \n                                    tripPassages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/trip-passages.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:109\n                \n            \n\n\n            \n                \n                    Returns if an error has happened during the last update\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if an error occured\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:116\n                \n            \n\n\n            \n                \n                    Initializes the update observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:141\n                \n            \n\n\n            \n                \n                    destroys created update observables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            DEBOUNCE_TIME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pollSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            snapshotDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            StatusOps\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UpdateStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:89\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tripData\n                    \n                \n\n                \n                    \n                        gettripData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:39\n                                \n                            \n                    \n                        \n                                Returns the TripPassages\n\n\n                                \n                                \n                                \n                                    Returns :         TripPassagesLocation\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastTimestamp\n                    \n                \n\n                \n                    \n                        getlastTimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:50\n                                \n                            \n                    \n                        \n                                Returns the last timestamp when data was tried to be retrieved\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusCode\n                    \n                \n\n                \n                    \n                        getstatusCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:61\n                                \n                            \n                    \n                        \n                                Returns the current set update status or UpdateStatus.LOADING\n\n\n                                \n                                \n                                \n                                    Returns :         UpdateStatus\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tripId\n                    \n                \n\n                \n                    \n                        gettripId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:71\n                                \n                            \n                    \n                        \n                                returns the current tripID\n\n\n                                \n                                    Returns :     TripId\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        routeName\n                    \n                \n\n                \n                    \n                        getrouteName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:78\n                                \n                            \n                    \n                        \n                                short hand to retrieve route name\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tripPassages\n                    \n                \n\n                \n                    \n                        gettripPassages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:85\n                                \n                            \n                    \n                        \n                                List of passages\n\n\n                                \n                                    Returns :     IActualTripPassage[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IActualTripPassage, TripId } from '@donmahallem/trapeze-api-types';\nimport { from, BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, debounceTime, flatMap, map } from 'rxjs/operators';\nimport { TripPassagesLocation } from 'src/app/models';\nimport { ApiService } from '../../services';\n\nenum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status: UpdateStatus;\n    passages: TripPassagesLocation;\n    timestamp: number;\n    failures?: number;\n}\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.pug',\n})\nexport class TripPassagesComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * Returns the TripPassages\n     * @returns undefined or {@link TripPassagesLocation}\n     */\n    public get tripData(): TripPassagesLocation {\n        if (this.status.value) {\n            return this.status.value.passages;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the last timestamp when data was tried to be retrieved\n     * @returns number or 0 if no timestamp is set\n     */\n    public get lastTimestamp(): number {\n        if (this.status.value) {\n            return this.status.value.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns the current set update status or {@link UpdateStatus.LOADING}\n     * @returns the {@link UpdateStatus}\n     */\n    public get statusCode(): UpdateStatus {\n        if (this.status.value) {\n            return this.status.value.status;\n        }\n        return UpdateStatus.LOADING;\n    }\n\n    /**\n     * returns the current tripID\n     */\n    public get tripId(): TripId {\n        return this.route.snapshot.params.tripId;\n    }\n\n    /**\n     * short hand to retrieve route name\n     */\n    public get routeName(): string {\n        return (this.tripData) ? this.tripData.routeName : '';\n    }\n\n    /**\n     * List of passages\n     */\n    public get tripPassages(): IActualTripPassage[] {\n        return (this.tripData !== undefined) ? this.tripData.actual : [];\n    }\n    public readonly DEBOUNCE_TIME: number = 5000;\n    public readonly StatusOps: typeof UpdateStatus = UpdateStatus;\n    private status: BehaviorSubject = new BehaviorSubject(undefined);\n    private snapshotDataSubscription: Subscription;\n    private pollSubscription: Subscription;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private router: Router) {\n        this.snapshotDataSubscription = this.route.data.subscribe((data) => {\n            this.status.next({\n                passages: data.tripPassages,\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n            });\n        });\n    }\n\n    /**\n     * Returns if an error has happened during the last update\n     * @returns true if an error occured\n     */\n    public hasError(): boolean {\n        return this.statusCode >= UpdateStatus.ERROR;\n    }\n\n    /**\n     * Initializes the update observable\n     */\n    public ngAfterViewInit(): void {\n        this.pollSubscription = this.status.pipe(debounceTime(this.DEBOUNCE_TIME),\n            map(() =>\n                this.route.snapshot.params.tripId),\n            flatMap((tripId: TripId) =>\n                this.apiService.getTripPassages(tripId)),\n            map((passages: TripPassagesLocation): IPassageStatus =>\n                ({\n                    passages: passages,\n                    status: UpdateStatus.LOADED,\n                    timestamp: Date.now(),\n                })),\n            catchError(this.handleError.bind(this)))\n            .subscribe(new Subscriber((val: IPassageStatus) => {\n                if (val.passages.tripId === this.tripId) {\n                    this.status.next(val);\n                } else {\n                    // trigger so a reload can execute\n                    this.status.next(this.status.value);\n                }\n            }));\n    }\n    /**\n     * destroys created update observables\n     */\n    public ngOnDestroy(): void {\n        if (this.snapshotDataSubscription) {\n            this.snapshotDataSubscription.unsubscribe();\n        }\n        if (this.pollSubscription) {\n            this.pollSubscription.unsubscribe();\n        }\n    }\n\n    private handleError(err?: any): Observable {\n        let status: UpdateStatus = UpdateStatus.ERROR;\n        if (err.status) {\n            // Http Error\n            const statusCode: number = err.status;\n            if (statusCode === 404) {\n                status = UpdateStatus.NOT_FOUND;\n                this.router.navigate(['not-found'], {\n                    queryParams: {\n                        type: 'passages',\n                    },\n                });\n            } else if (statusCode >= 500 && statusCode \n    \n\n    \n        app-map-header-box([blur]=\"hasError()\",title=\"{{routeName}} - {{tripData?.directionText}}\")\n    map(appTripPassages,[location]=\"tripData?.location\",role=\"none\")\ndiv.error-box(*ngIf=\"hasError()\",aria-errormessage=\"Error retrieving data\",i18n-aria-errormessage=\"@@errorUpdatingData\")\n    span.title(i18n=\"@@anErrorOccured\") An error occured (Code: {{statusCode}})\n    span.text Retrying in\n        |\n        span(appCountdownTimer,[targetTime]=\"lastTimestamp + DEBOUNCE_TIME\",[placeholder]=\"'sync'\") test\nmat-nav-list(*ngIf=\"tripId==tripData?.tripId\",role=\"list\")\n    a(*ngFor=\"let passage of tripPassages\",[routerLink]=\"['/stop', passage?.stop?.shortName]\",role=\"listitem\")\n        mat-list-item\n            mat-icon(matListIcon,role=\"figure\",i18n-aria-label=\"@@busStopIcon\",aria-label=\"Bus stop icon\") trip_origin\n            h3(matLine,aria-label=\"Stop name\",i18n-aria-label=\"@@stopName\") {{passage?.stop?.name}}\n            p(matLine)\n                span(role=\"timer\") {{passage?.actualTime}}\n                |\n                span(class=\"demo-2\",role=\"status\") -- {{passage?.status}}\n    \n\n    \n                \n                    ./trip-passages.component.scss\n                \n                h3.route-title {\n    padding: 24px;\n}\n\ndiv.error-box {\n    background: #F44336;\n    padding: 16px;\n    flex:0 0 auto; \n    span.title {\n        text-transform: capitalize;\n        font-weight: bold;\n        display: block;\n        font-size: 16px;\n    }\n    span.text {\n        font-size: 12px;\n    }\n}\n\nmat-nav-list{\n    flex-grow: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-map-header-box([blur]=\"hasError()\",title=\"{{routeName}} - {{tripData?.directionText}}\")    map(appTripPassages,[location]=\"tripData?.location\",role=\"none\")div.error-box(*ngIf=\"hasError()\",aria-errormessage=\"Error retrieving data\",i18n-aria-errormessage=\"@@errorUpdatingData\")    span.title(i18n=\"@@anErrorOccured\") An error occured (Code: {{statusCode}})    span.text Retrying in        |        span(appCountdownTimer,[targetTime]=\"lastTimestamp + DEBOUNCE_TIME\",[placeholder]=\"\\'sync\\'\") testmat-nav-list(*ngIf=\"tripId==tripData?.tripId\",role=\"list\")    a(*ngFor=\"let passage of tripPassages\",[routerLink]=\"[\\'/stop\\', passage?.stop?.shortName]\",role=\"listitem\")        mat-list-item            mat-icon(matListIcon,role=\"figure\",i18n-aria-label=\"@@busStopIcon\",aria-label=\"Bus stop icon\") trip_origin            h3(matLine,aria-label=\"Stop name\",i18n-aria-label=\"@@stopName\") {{passage?.stop?.name}}            p(matLine)                span(role=\"timer\") {{passage?.actualTime}}                |                span(class=\"demo-2\",role=\"status\") -- {{passage?.status}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripPassagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TripPassagesModule.html":{"url":"modules/TripPassagesModule.html","title":"module - TripPassagesModule","body":"\n                   \n\n\n\n\n    Modules\n    TripPassagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TripPassagesModule\n\n\n\ncluster_TripPassagesModule_declarations\n\n\n\ncluster_TripPassagesModule_imports\n\n\n\n\nFollowBusMapDirective\n\nFollowBusMapDirective\n\n\n\nTripPassagesModule\n\nTripPassagesModule\n\nTripPassagesModule -->\n\nFollowBusMapDirective->TripPassagesModule\n\n\n\n\n\nTripPassagesComponent\n\nTripPassagesComponent\n\nTripPassagesModule -->\n\nTripPassagesComponent->TripPassagesModule\n\n\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nTripPassagesModule -->\n\nCountdownTimerModule->TripPassagesModule\n\n\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nTripPassagesModule -->\n\nMapHeaderBoxModule->TripPassagesModule\n\n\n\n\n\nTripPassagesRoutingModule\n\nTripPassagesRoutingModule\n\nTripPassagesModule -->\n\nTripPassagesRoutingModule->TripPassagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FollowBusMapDirective\n                        \n                        \n                            TripPassagesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CountdownTimerModule\n                        \n                        \n                            MapHeaderBoxModule\n                        \n                        \n                            TripPassagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatIconModule, MatListModule, MatProgressSpinnerModule, MatToolbarModule } from '@angular/material';\nimport { MapHeaderBoxModule } from '../common';\nimport { CountdownTimerModule } from '../common/countdown-timer';\nimport { FollowBusMapDirective } from './follow-bus-map.directive';\nimport { TripPassagesRoutingModule } from './trip-passages-routing.module';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n@NgModule({\n    declarations: [\n        TripPassagesComponent,\n        FollowBusMapDirective,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        TripPassagesRoutingModule,\n        MapHeaderBoxModule,\n        CountdownTimerModule,\n    ],\n    providers: [\n        TripPassagesResolver,\n    ],\n})\nexport class TripPassagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TripPassagesResolver.html":{"url":"guards/TripPassagesResolver.html","title":"guard - TripPassagesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TripPassagesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/trip-passages/trip-passages.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/trip-passages.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../services';\n\n@Injectable()\nexport class TripPassagesResolver implements Resolve {\n\n    public constructor(private api: ApiService, private router: Router) { }\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api.getTripPassages(route.params.tripId)\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['not-found']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TripPassagesRoutingModule.html":{"url":"modules/TripPassagesRoutingModule.html","title":"module - TripPassagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TripPassagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: TripPassagesComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':tripId',\n        resolve: {\n            tripPassages: TripPassagesResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class TripPassagesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLocationService.html":{"url":"injectables/UserLocationService.html","title":"injectable - UserLocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-location.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                locationErrorSubject\n                            \n                            \n                                    Private\n                                locationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPositionRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    featureAvailable\n                                \n                                \n                                    location\n                                \n                                \n                                    locationErrorObservable\n                                \n                                \n                                    locationObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-location.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPositionRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPositionRequest(timeout: number, highAccuracy: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-location.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                \n                                \n                                    highAccuracy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationErrorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        featureAvailable\n                    \n                \n\n                \n                    \n                        getfeatureAvailable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n                \n                    \n                        getlocation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        locationErrorObservable\n                    \n                \n\n                \n                    \n                        getlocationErrorObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        locationObservable\n                    \n                \n\n                \n                    \n                        getlocationObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, debounceTime, flatMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserLocationService {\n\n    public get featureAvailable(): boolean {\n        return (navigator.geolocation) ? true : false;\n    }\n\n    public get location(): Position {\n        return this.locationSubject.value;\n    }\n    public get locationErrorObservable(): Observable {\n        return this.locationErrorSubject.asObservable();\n    }\n    public get locationObservable(): Observable {\n        return this.locationSubject.asObservable();\n    }\n\n    private locationErrorSubject: BehaviorSubject = new BehaviorSubject(undefined);\n\n    private locationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    public constructor() {\n        this.locationErrorObservable\n            .pipe(debounceTime(30000),\n                flatMap((val) =>\n                    this.createPositionRequest()),\n                catchError((err) => {\n                    this.locationErrorSubject.next(err);\n                    return EMPTY;\n                }))\n            .subscribe((val) => {\n                this.locationErrorSubject.next(undefined);\n                this.locationSubject.next(val);\n            });\n    }\n\n    public createPositionRequest(timeout: number = 10000, highAccuracy: boolean = false) {\n        return new Observable((subscriber) => {\n\n            const geoSuccess = (position: Position): void => {\n                subscriber.next(position);\n                subscriber.complete();\n            };\n            const geoError = (error: PositionError): void => {\n                subscriber.error(error);\n            };\n            navigator.geolocation.getCurrentPosition(geoSuccess, geoError, {\n                enableHighAccuracy: highAccuracy,\n                maximumAge: 5 * 60 * 1000, // Cache 5 minutes\n                timeout: timeout,\n            });\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLocationSubscriber.html":{"url":"classes/UserLocationSubscriber.html","title":"class - UserLocationSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLocationSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(cmp: LeafletMapComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/leaflet-map.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cmp\n                                                  \n                                                        \n                                                                        LeafletMapComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(value: Position)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Position\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n    @ViewChild('mapcontainer', { static: false }) mapContainer;\n    public readonly mapMove: Subject = new Subject();\n    private map: L.Map;\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VehicleLoadSubscriber.html":{"url":"classes/VehicleLoadSubscriber.html","title":"class - VehicleLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VehicleLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mainMap: MainMapDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-map/main-map.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mainMap\n                                                  \n                                                        \n                                                                    MainMapDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(res: IVehicleLocationList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            IVehicleLocationList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { AfterViewInit, Directive, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { combineLatest, from, timer, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map, startWith } from 'rxjs/operators';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { createStopIcon, createVehicleIcon } from '../../leaflet';\nimport { IMapBounds, LeafletMapComponent, MapMoveEvent, MapMoveEventType } from '../../modules/common/leaflet-map.component';\nimport { StopPointService } from '../../services/stop-point.service';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { ApiService } from './../../services';\n\nexport class VehicleLoadSubscriber extends Subscriber {\n\n    public constructor(private mainMap: MainMapDirective) {\n        super();\n    }\n    public next(res: IVehicleLocationList): void {\n        this.mainMap.setVehicles(res);\n    }\n}\n\n@Directive({\n    selector: 'map[appMainMap]',\n})\nexport class MainMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleUpdateSubscription: Subscription;\n    constructor(elRef: ElementRef,\n        private apiService: ApiService,\n        private router: Router,\n        private stopService: StopPointService,\n        userLocationService: UserLocationService,\n        private location: Location,\n        private snackBar: MatSnackBar,\n        settings: SettingsService,\n        zone: NgZone) {\n        super(elRef, zone, userLocationService, settings);\n    }\n\n    public setVehicles(vehicles: IVehicleLocationList): void {\n        if (this.vehicleMarkerLayer !== undefined) {\n            this.vehicleMarkerLayer.clearLayers();\n        } else {\n            this.vehicleMarkerLayer = L.featureGroup();\n            this.vehicleMarkerLayer.addTo(this.getMap());\n            this.vehicleMarkerLayer.on('click', this.markerOnClick.bind(this));\n        }\n        if (vehicles && Array.isArray(vehicles.vehicles)) {\n            for (const veh of vehicles.vehicles) {\n                if (veh.isDeleted === true) {\n                    continue;\n                }\n                this.addVehicleMarker(veh as IVehicleLocation).addTo(this.vehicleMarkerLayer);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.startVehicleUpdater();\n        const ourCustomControl = L.Control.extend({\n            onAdd: () => {\n                const container = L.DomUtil.create('i', 'material-icons leaflet-bar leaflet-control leaflet-control-custom');\n                container.style.backgroundColor = 'white';\n                container.style.width = '42px';\n                container.style.height = '42px';\n                container.style.lineHeight = '42px';\n                container.style.textAlign = 'center';\n                container.style.verticalAlign = 'center';\n                container.style.cursor = 'pointer';\n                container.innerHTML = 'my_location';\n                container.style.userSelect = 'none';\n                container.style.msUserSelect = 'none';\n                container.onclick = () => {\n                    if (this.userLocationService.location) {\n                        const pos: Position = this.userLocationService.location;\n                        this.getMap().panTo({\n                            alt: 5000,\n                            lat: pos.coords.latitude, // / 3600000,\n                            lng: pos.coords.longitude, // / 3600000,\n                        },\n                            { animate: true });\n                    } else {\n                        this.snackBar.open('No location acquired yet!',\n                            undefined,\n                            {\n                                duration: 2000,\n                            });\n                    }\n                };\n                return container;\n            },\n            options: {\n                position: 'bottomright',\n                // control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'\n            },\n        });\n        this.getMap().addControl(new ourCustomControl());\n        // this.getMap().flyTo(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n    }\n\n    public startVehicleUpdater(): void {\n        // as mapMove doesn't emit on init this needs to be provided to load atleast once\n        const primedMoveObservable: Observable = this.mapMove.pipe(\n            startWith({\n                type: MapMoveEventType.END,\n            } as MapMoveEvent));\n        this.vehicleUpdateSubscription = combineLatest([timer(0, 5000), primedMoveObservable])\n            .pipe(\n                map((value: [number, MapMoveEvent]): MapMoveEvent =>\n                    value[1]),\n                filter((event: MapMoveEvent): boolean =>\n                    (event.type === MapMoveEventType.END)),\n                flatMap((moveEvent: MapMoveEvent) => {\n                    const bounds: IMapBounds = {\n                        bottom: this.mapBounds.getSouth(),\n                        left: this.mapBounds.getWest(),\n                        right: this.mapBounds.getEast(),\n                        top: this.mapBounds.getNorth(),\n                    };\n                    return this.apiService.getVehicleLocations(bounds);\n                }),\n                catchError((err: Error) =>\n                    from([{}])))\n            .subscribe(new VehicleLoadSubscriber(this));\n    }\n\n    public markerOnClick(event) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['passages', event.sourceTarget.data.tripId]);\n        });\n    }\n    public addVehicleMarker(vehicle: IVehicleLocation): L.Marker {\n        const vehicleIcon: L.DivIcon = createVehicleIcon(vehicle.heading, vehicle.name.split(' ')[0], 40);\n        const markerT: any = L.marker([vehicle.latitude / 3600000, vehicle.longitude / 3600000], {\n            icon: vehicleIcon,\n            rotationAngle: vehicle.heading - 90,\n            title: vehicle.name,\n            zIndexOffset: 100,\n        } as any);\n        markerT.data = vehicle;\n        return markerT;\n    }\n    public addMarker() {\n        this.stopService.stopLocationsObservable\n            .subscribe((stops: IStopLocation[]) => {\n                const stopList: L.Marker[] = [];\n                for (const stop of stops) {\n                    if (stop === null) {\n                        continue;\n                    }\n                    const greenIcon = createStopIcon(this.location);\n                    const markerT: L.Marker = L.marker([stop.latitude / 3600000, stop.longitude / 3600000],\n                        {\n                            icon: greenIcon,\n                            interactive: true,\n                            riseOffset: 10,\n                            riseOnHover: true,\n                            title: stop.name,\n                            zIndexOffset: 10,\n                        });\n                    (markerT as any).data = stop;\n                    stopList.push(markerT);\n                }\n                if (this.stopMarkerLayer !== undefined) {\n                    this.stopMarkerLayer.remove();\n                }\n                const featureGroup: L.FeatureGroup = L.featureGroup(stopList);\n                this.stopMarkerLayer = featureGroup.addTo(this.getMap());\n                featureGroup.on('click', this.stopMarkerOnClick.bind(this));\n            });\n    }\n\n    public stopMarkerOnClick(event: { sourceTarget: { data: IStopLocation } }) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['stop', event.sourceTarget.data.shortName]);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.vehicleUpdateSubscription) {\n            this.vehicleUpdateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-error-handler.ts\n            \n            injectable\n            AppErrorHandler\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/app-preloading-strategy.ts\n            \n            class\n            AppPreloadingStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            moduleImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            SettingsInitializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/drawable.directive.ts\n            \n            directive\n            DrawableDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_SHADOW_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_SHADOW_URL_BASE64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_URL_BASE64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/icons.ts\n            \n            variable\n            createStopIcon\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/icons.ts\n            \n            variable\n            createVehicleIcon\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Bounds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            ITimestampVehicleLocation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/common/countdown-timer/countdown-timer.directive.ts\n            \n            directive\n            CountdownTimerDirective\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            class\n            LeafletMapComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            class\n            UserLocationSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapBounds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapMoveEndEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapMoveStartEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/common/map-header-box/map-header-box.component.ts\n            \n            component\n            MapHeaderBoxComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/common/retry-dialog/retry-dialog.component.ts\n            \n            component\n            RetryDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/retry-dialog/retry-dialog.component.ts\n            \n            class\n            RetryDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/error/common-error.component.ts\n            \n            component\n            CommonErrorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/error/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-map/main-map.directive.ts\n            \n            directive\n            MainMapDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/main-map/main-map.directive.ts\n            \n            class\n            VehicleLoadSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/main-toolbar.component.ts\n            \n            component\n            MainToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/main-toolbar.component.ts\n            \n            class\n            NavigationSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/route-loading-indicator.component.ts\n            \n            component\n            RouteLoadingIndicatorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/route-loading-indicator.component.ts\n            \n            class\n            RouteLoadingSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/search-box.component.ts\n            \n            component\n            ToolbarSearchBoxComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/routing/search/search-result.resolver.ts\n            \n            guard\n            SearchResultResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/routing/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/departure-list-item.component.ts\n            \n            component\n            DepartureListItemComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/modules/stop/departure-list.component.ts\n            \n            component\n            DepartureListComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/route-list.component.ts\n            \n            component\n            RouteListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-info.component.ts\n            \n            component\n            StopInfoComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-info.resolver.ts\n            \n            guard\n            StopInfoResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-map.directive.ts\n            \n            directive\n            StopLocationMapDirective\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/modules/stops/stops-info.component.ts\n            \n            component\n            StopsInfoComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stops/stops.resolver.ts\n            \n            guard\n            StopsResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/follow-bus-map.directive.ts\n            \n            directive\n            FollowBusMapDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/follow-bus-map.directive.ts\n            \n            class\n            RoutesSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.component.ts\n            \n            component\n            TripPassagesComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.component.ts\n            \n            interface\n            IPassageStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.resolver.ts\n            \n            guard\n            TripPassagesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/rxjs-util/retry-dialog-strategy.ts\n            \n            variable\n            retryDialogStrategy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            injectable\n            AppNotificationService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            interface\n            IAppNotification\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            interface\n            IAppNotificationDismiss\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            class\n            SettingsLoadSubscriber\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/stop-point.service.ts\n            \n            class\n            StopPointLoadSubscriber\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/stop-point.service.ts\n            \n            injectable\n            StopPointService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/services/user-location.service.ts\n            \n            injectable\n            UserLocationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/app-version.ts\n            \n            function\n            getAppVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.base.ts\n            \n            interface\n            IEnvironmentBase\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.pwa.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.0\n        \n            @angular/cdk : ^8.0.0\n        \n            @angular/common : ^8.0.0\n        \n            @angular/compiler : ^8.0.0\n        \n            @angular/core : ^8.0.0\n        \n            @angular/forms : ^8.0.0\n        \n            @angular/material : ^8.0.0\n        \n            @angular/platform-browser : ^8.0.0\n        \n            @angular/platform-browser-dynamic : ^8.0.0\n        \n            @angular/pwa : ^0.803.3\n        \n            @angular/router : ^8.0.0\n        \n            @angular/service-worker : ^8.0.0\n        \n            @donmahallem/trapeze-api-types : ^1.4.0\n        \n            @types/leaflet : 1.5.1\n        \n            core-js : ^3.2.1\n        \n            leaflet : ^1.5.1\n        \n            leaflet-rotatedmarker : ^0.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-cli-pug-loader : ^0.2.0\n        \n            rxjs : ^6.5.3\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppNotificationType   (src/.../app-notification.service.ts)\n                        \n                        \n                            MapMoveEventType   (src/.../leaflet-map.component.ts)\n                        \n                        \n                            UpdateStatus   (src/.../trip-passages.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/app-notification.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AppNotificationType\n                    \n                \n                    \n                        \n                            Notification Type\n\n                        \n                    \n                        \n                            \n                                 ALERT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/modules/common/leaflet-map.component.ts\n    \n        \n            \n                \n                    \n                        \n                        MapMoveEventType\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/modules/trip-passages/trip-passages.component.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdateStatus\n                    \n                \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 LOADED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PAUSED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getAppVersion   (src/.../app-version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/app-version.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getAppVersion\n                        \n                        \n                    \n                \n            \n            \n                \ngetAppVersion()\n                \n            \n\n\n\n\n            \n                \n                    Reads the angular app version from the package file\n\n\n                    \n                    \n                    \n                        Returns :         AppVersion\n\n                    \n                    \n                        The current app version\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ntrapeze-client-ng\n   \nNgsw Disabled: \nNgsw Enabled:  \nDescription\nThis is the angular client for the Trapeze Backend provided by this express route.\nDocumentation\nThe Documentation can be found HERE\nUsage\nIn order to build this client successfully you will need to copy the environment.example.ts file and modify the values as you need.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CountdownTimerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainMapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainToolbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapHeaderBoxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RetryDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TripPassagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TripPassagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CountdownTimerModule\n\n\n\ncluster_CountdownTimerModule_declarations\n\n\n\ncluster_CountdownTimerModule_exports\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_MainMapModule\n\n\n\ncluster_MainMapModule_declarations\n\n\n\ncluster_MainMapModule_exports\n\n\n\ncluster_MainToolbarModule\n\n\n\ncluster_MainToolbarModule_declarations\n\n\n\ncluster_MainToolbarModule_exports\n\n\n\ncluster_MapHeaderBoxModule\n\n\n\ncluster_MapHeaderBoxModule_declarations\n\n\n\ncluster_MapHeaderBoxModule_exports\n\n\n\ncluster_RetryDialogModule\n\n\n\ncluster_RetryDialogModule_declarations\n\n\n\ncluster_RetryDialogModule_exports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_StopModule\n\n\n\ncluster_StopModule_declarations\n\n\n\ncluster_StopModule_imports\n\n\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\ncluster_TripPassagesModule\n\n\n\ncluster_TripPassagesModule_declarations\n\n\n\ncluster_TripPassagesModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrawableDirective\n\nDrawableDirective\n\nAppModule -->\n\nDrawableDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainMapModule\n\nMainMapModule\n\nAppModule -->\n\nMainMapModule->AppModule\n\n\n\n\n\nMainMapDirective \n\nMainMapDirective \n\nMainMapDirective  -->\n\nMainMapModule->MainMapDirective \n\n\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nAppModule -->\n\nMainToolbarModule->AppModule\n\n\n\n\n\nMainToolbarComponent \n\nMainToolbarComponent \n\nMainToolbarComponent  -->\n\nMainToolbarModule->MainToolbarComponent \n\n\n\n\n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent  -->\n\nMainToolbarModule->RouteLoadingIndicatorComponent \n\n\n\n\n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent  -->\n\nMainToolbarModule->ToolbarSearchBoxComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nAppNotificationService\n\nAppNotificationService\n\nAppModule -->\n\nAppNotificationService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nStopPointService\n\nStopPointService\n\nAppModule -->\n\nStopPointService->AppModule\n\n\n\n\n\nUserLocationService\n\nUserLocationService\n\nAppModule -->\n\nUserLocationService->AppModule\n\n\n\n\n\nCountdownTimerDirective\n\nCountdownTimerDirective\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nCountdownTimerModule -->\n\nCountdownTimerDirective->CountdownTimerModule\n\n\n\n\n\nCountdownTimerDirective \n\nCountdownTimerDirective \n\nCountdownTimerDirective  -->\n\nCountdownTimerModule->CountdownTimerDirective \n\n\n\n\n\nTripPassagesModule\n\nTripPassagesModule\n\nTripPassagesModule -->\n\nCountdownTimerModule->TripPassagesModule\n\n\n\n\n\nCommonErrorComponent\n\nCommonErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nCommonErrorComponent->ErrorModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nErrorModule -->\n\nNotFoundComponent->ErrorModule\n\n\n\n\n\nErrorRoutingModule\n\nErrorRoutingModule\n\nErrorModule -->\n\nErrorRoutingModule->ErrorModule\n\n\n\n\n\nMainMapDirective\n\nMainMapDirective\n\nMainMapModule -->\n\nMainMapDirective->MainMapModule\n\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\nMainToolbarModule -->\n\nMainToolbarComponent->MainToolbarModule\n\n\n\n\n\nRouteLoadingIndicatorComponent\n\nRouteLoadingIndicatorComponent\n\nMainToolbarModule -->\n\nRouteLoadingIndicatorComponent->MainToolbarModule\n\n\n\n\n\nToolbarSearchBoxComponent\n\nToolbarSearchBoxComponent\n\nMainToolbarModule -->\n\nToolbarSearchBoxComponent->MainToolbarModule\n\n\n\n\n\nMapHeaderBoxComponent\n\nMapHeaderBoxComponent\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule -->\n\nMapHeaderBoxComponent->MapHeaderBoxModule\n\n\n\n\n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent  -->\n\nMapHeaderBoxModule->MapHeaderBoxComponent \n\n\n\n\n\nStopModule\n\nStopModule\n\nStopModule -->\n\nMapHeaderBoxModule->StopModule\n\n\n\nTripPassagesModule -->\n\nMapHeaderBoxModule->TripPassagesModule\n\n\n\n\n\nRetryDialogComponent\n\nRetryDialogComponent\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nRetryDialogModule -->\n\nRetryDialogComponent->RetryDialogModule\n\n\n\n\n\nRetryDialogComponent \n\nRetryDialogComponent \n\nRetryDialogComponent  -->\n\nRetryDialogModule->RetryDialogComponent \n\n\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nRetryDialogModule->StopsModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nDepartureListComponent\n\nDepartureListComponent\n\nStopModule -->\n\nDepartureListComponent->StopModule\n\n\n\n\n\nDepartureListItemComponent\n\nDepartureListItemComponent\n\nStopModule -->\n\nDepartureListItemComponent->StopModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nStopModule -->\n\nRouteListComponent->StopModule\n\n\n\n\n\nStopInfoComponent\n\nStopInfoComponent\n\nStopModule -->\n\nStopInfoComponent->StopModule\n\n\n\n\n\nStopLocationMapDirective\n\nStopLocationMapDirective\n\nStopModule -->\n\nStopLocationMapDirective->StopModule\n\n\n\n\n\nStopRoutingModule\n\nStopRoutingModule\n\nStopModule -->\n\nStopRoutingModule->StopModule\n\n\n\n\n\nStopsInfoComponent\n\nStopsInfoComponent\n\nStopsModule -->\n\nStopsInfoComponent->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\nFollowBusMapDirective\n\nFollowBusMapDirective\n\nTripPassagesModule -->\n\nFollowBusMapDirective->TripPassagesModule\n\n\n\n\n\nTripPassagesComponent\n\nTripPassagesComponent\n\nTripPassagesModule -->\n\nTripPassagesComponent->TripPassagesModule\n\n\n\n\n\nTripPassagesRoutingModule\n\nTripPassagesRoutingModule\n\nTripPassagesModule -->\n\nTripPassagesRoutingModule->TripPassagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppVersion   (src/.../app-version.ts)\n                        \n                        \n                            CreateDialogFunc   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            CreateDialogFuncResponse   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            ErrorItem   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            MapMoveEvent   (src/.../leaflet-map.component.ts)\n                        \n                        \n                            RetryDialogStrategyFunc   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            RetryDialogStrategyFuncResponse   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            TripPassagesLocation   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/app-version.ts\n    \n    \n        \n            \n                \n                    \n                    AppVersion\n                \n            \n            \n                \n                    App Version\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/rxjs-util/retry-dialog-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    CreateDialogFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CreateDialogFuncResponse\n                \n            \n            \n                \n                            MatDialogRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ErrorItem\n                \n            \n            \n                \n                        any | HttpErrorResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RetryDialogStrategyFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RetryDialogStrategyFuncResponse\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/modules/common/leaflet-map.component.ts\n    \n    \n        \n            \n                \n                    \n                    MapMoveEvent\n                \n            \n            \n                \n                        IMapMoveStartEvent | IMapMoveEndEvent\n\n                \n            \n        \n    \n    src/app/models/index.ts\n    \n    \n        \n            \n                \n                    \n                    TripPassagesLocation\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createStopIcon   (src/.../icons.ts)\n                        \n                        \n                            createVehicleIcon   (src/.../icons.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.example.pwa.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            moduleImports   (src/.../app.module.ts)\n                        \n                        \n                            retryDialogStrategy   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            SettingsInitializer   (src/.../app.module.ts)\n                        \n                        \n                            STOP_ICON_SHADOW_URL   (src/.../constants.ts)\n                        \n                        \n                            STOP_ICON_SHADOW_URL_BASE64   (src/.../constants.ts)\n                        \n                        \n                            STOP_ICON_URL   (src/.../constants.ts)\n                        \n                        \n                            STOP_ICON_URL_BASE64   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/leaflet/icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createStopIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Icon\n\n                        \n                    \n                    \n                        \n                            Default value : (location: Location, iconSize: number = 24): L.Icon =>\n    L.icon({\n        iconAnchor: [iconSize / 2, iconSize / 2], // point of the icon which will correspond to marker's location\n        // shadowUrl: 'leaf-shadow.png',\n        iconSize: [iconSize, iconSize], // size of the icon\n        iconUrl: location.prepareExternalUrl(STOP_ICON_URL),\n        popupAnchor: [iconSize / 2, iconSize / 2], // point from which the popup should open relative to the iconAnchor\n        shadowAnchor: [iconSize / 7 * 3, iconSize / 7 * 3],  // the same for the shadow\n        shadowSize: [iconSize * 1.1, iconSize * 1.1], // size of the shadow\n        shadowUrl: location.prepareExternalUrl(STOP_ICON_SHADOW_URL),\n    })\n                        \n                    \n\n                \n                    \n                        Creates an StopIcon instance to be used for leaflet markers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createVehicleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.DivIcon\n\n                        \n                    \n                    \n                        \n                            Default value : (heading: number, name: string, iconSize: number = 40) =>\n        L.divIcon({\n            className: heading > 180 ? 'vehiclemarker-rotated' : 'vehiclemarker',\n            html: '' + name.split(' ')[0] + '',\n            iconAnchor: [iconSize / 2, Math.round(iconSize / 2 / 68 * 44)], // point of the icon which will correspond to marker's location\n            iconSize: [iconSize, Math.round(iconSize / 68 * 44)], // size of the icon\n            popupAnchor: [12, 12], // point from which the popup should open relative to the iconAnchor\n            shadowAnchor: [32, 32],  // the same for the shadow\n            shadowSize: [24, 24], // size of the shadow\n        })\n                        \n                    \n\n                \n                    \n                        Creates an vehicle icon to be used for leaflet markers\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.example.pwa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: true,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.example.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moduleImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatInputModule,\n    MainMapModule,\n    MainToolbarModule,\n    SidebarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production && environment.pwa,\n    }),\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SettingsInitializer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (appInitService: SettingsService) =>\n    (): Promise =>\n        appInitService.load()\n                        \n                    \n\n\n            \n        \n\n    src/app/rxjs-util/retry-dialog-strategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            retryDialogStrategy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RetryDialogStrategyFunc\n\n                        \n                    \n                    \n                        \n                            Default value : (createDialog: CreateDialogFunc) =>\n    (errors: Observable): Observable => {\n        let dialogOpen = false;\n        return errors.pipe(skipWhile((): boolean => dialogOpen),\n            flatMap((error: ErrorItem): Observable => {\n                dialogOpen = true;\n                const dialogRef: CreateDialogFuncResponse = createDialog(error);\n                return dialogRef.afterClosed()\n                    .pipe(map((tapedValue: boolean): true => {\n                        dialogOpen = false;\n                        if (!tapedValue) {\n                            /**\n                             * Rethrow error if dialog was dismissed\n                             */\n                            throw error;\n                        }\n                        /**\n                         * Retry the preceeding stream\n                         */\n                        return true;\n                    }));\n            }));\n    }\n                        \n                    \n\n                \n                    \n                        If an error occurs it will call the dialog and waits for its result.\nIf the result equals true the stream will be retried\n\n                    \n                \n\n            \n        \n\n    src/app/leaflet/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_SHADOW_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/stop-icon-shadow-64.svg'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_SHADOW_URL_BASE64\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0i' +\n    'MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBzdmcgIFBVQkxJ' +\n    'QyAnLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5v' +\n    'cmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkJz4NCjxzdmcgd2lk' +\n    'dGg9IjY0IiBoZWlnaHQ9IjY0IiBiYXNlUHJvZmlsZT0iZnVsbCIgdmVyc2lv' +\n    'bj0iMS4xIiB2aWV3Qm94PSItMiAtMiA3MiA3MiIgeG1sbnM9Imh0dHA6Ly93' +\n    'd3cudzMub3JnLzIwMDAvc3ZnIj4NCjxzdHlsZT4uaGVhdnkgeyBmb250OiBi' +\n    'b2xkIDMycHggc2Fucy1zZXJpZjsgY29sb3I6cHVycGxlOyB9PC9zdHlsZT4N' +\n    'CjxkZWZzPg0KPGZpbHRlciBpZD0iYiIgeD0iMCIgeT0iMCI+DQo8ZmVHYXVz' +\n    'c2lhbkJsdXIgaW49IlNvdXJjZUdyYXBoaWMiIHN0ZERldmlhdGlvbj0iMyIv' +\n    'Pg0KPC9maWx0ZXI+DQo8L2RlZnM+DQo8bWFzayBpZD0iYSI+DQo8cmVjdCB3' +\n    'aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iI2ZmZiIvPg0KPHRleHQg' +\n    'Y2xhc3M9ImhlYXZ5IiB4PSIzNCIgeT0iNDYiIGZpbGw9ImJsYWNrIiBzdHJv' +\n    'a2U9ImJsYWNrIiBzdHJva2Utd2lkdGg9IjEuNSIgdGV4dC1hbmNob3I9Im1p' +\n    'ZGRsZSI+SDwvdGV4dD4NCjwvbWFzaz4NCjxnIGZpbHRlcj0idXJsKCNiKSIg' +\n    'b3BhY2l0eT0iLjUiPg0KPHJlY3QgeD0iLTEwIiB5PSItMTAiIHdpZHRoPSIx' +\n    'MDAiIGhlaWdodD0iMTAwIiBmaWxsPSIjZmZmIiBvcGFjaXR5PSIwIi8+DQo8' +\n    'Y2lyY2xlIGN4PSIzNCIgY3k9IjM0IiByPSIzMiIgbWFzaz0idXJsKCNhKSIg' +\n    'c3Ryb2tlPSIjMDAwIi8+DQo8L2c+DQo8L3N2Zz4='\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/stop-icon-24.svg'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_URL_BASE64\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiB' +\n    'lbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBzdmcgIFBVQkxJQyAnLS8vVzNDLy9' +\n    'EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEu' +\n    'MS9EVEQvc3ZnMTEuZHRkJz4NCjxzdmcgd2lkdGg9IjY0IiBoZWlnaHQ9IjY0IiBiYXNlU' +\n    'HJvZmlsZT0iZnVsbCIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgNjggNjgiIHhtbG5' +\n    'zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+DQo8c3R5bGU+LmhlYXZ5IHsgZm9udD' +\n    'ogYm9sZCAzMnB4IHNhbnMtc2VyaWY7IGNvbG9yOnB1cnBsZTsgfTwvc3R5bGU+DQo8bWFza' +\n    'yBpZD0iYSI+DQo8cmVjdCB3aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iI2ZmZiIv' +\n    'Pg0KPHRleHQgY2xhc3M9ImhlYXZ5IiB4PSIzNCIgeT0iNDYiIGZpbGw9ImJsYWNrIiBzdHJv' +\n    'a2U9ImJsYWNrIiBzdHJva2Utd2lkdGg9IjEuNSIgdGV4dC1hbmNob3I9Im1pZGRsZSI+SDwv' +\n    'dGV4dD4NCjwvbWFzaz4NCjxjaXJjbGUgY3g9IjM0IiBjeT0iMzQiIHI9IjMyIiBtYXNrPSJ1' +\n    'cmwoI2EpIiBzdHJva2U9IiMwMDAiLz4NCjx0ZXh0IGNsYXNzPSJoZWF2eSIgeD0iMzQiIHk9' +\n    'IjQ2IiBmaWxsPSJ3aGl0ZSIgb3BhY2l0eT0iLjUiIHN0cm9rZT0id2hpdGUiIHN0cm9rZS13' +\n    'aWR0aD0iMS41IiB0ZXh0LWFuY2hvcj0ibWlkZGxlIj5IPC90ZXh0Pg0KPC9zdmc+'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
