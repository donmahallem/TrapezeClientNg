var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.243,1,1.452]],["body/injectables/ApiService.html",[0,1.501,1,1.754,2,1.832,3,0.171,4,0.132,5,0.092,6,2.874,7,0.297,8,0.851,9,1.13,10,6.124,11,4.771,12,4.771,13,5.319,14,5.319,15,4.144,16,4.771,17,4.144,18,4.771,19,4.771,20,0.663,21,3.309,22,6.124,23,1.181,24,3.309,25,1.324,26,0.015,27,1.128,28,0.677,29,1.128,30,3.731,31,3.309,32,1.215,33,2.691,34,4.771,35,3.309,36,7.379,37,2.482,38,4.771,39,3.309,40,3.309,41,3.309,42,4.771,43,2.128,44,3.309,45,4.771,46,3.309,47,4.771,48,3.309,49,3.175,50,4.771,51,3.309,52,4.771,53,3.056,54,3.309,55,2.06,56,0.279,57,2.06,58,0.16,59,2.587,60,3.309,61,2.874,62,2.587,63,2.06,64,2.587,65,1.041,66,1.002,67,1.041,68,0.663,69,2.202,70,3.309,71,2.202,72,3.309,73,2.587,74,2.06,75,1.737,76,1.652,77,0.146,78,0.03,79,0.743,80,1.119,81,3.309,82,4.771,83,7.269,84,4.771,85,3.309,86,3.309,87,1.341,88,4.771,89,2.587,90,3.309,91,3.309,92,1.652,93,3.309,94,3.39,95,1.652,96,3.309,97,1.574,98,3.309,99,1.652,100,3.309,101,3.309,102,3.309,103,3.309,104,0.006,105,0.008,106,0.006]],["title/components/AppComponent.html",[107,0.677,108,1.396]],["body/components/AppComponent.html",[3,0.081,4,0.09,5,0.063,7,0.493,8,0.638,9,0.702,20,0.453,23,1.097,25,0.663,26,0.015,27,0.967,28,0.601,29,0.565,32,0.73,33,1.506,49,2.951,56,0.233,58,0.109,76,1.784,77,0.1,78,0.02,79,0.508,80,0.343,87,1.004,92,1.128,95,1.784,97,1.075,99,2.516,104,0.004,105,0.006,106,0.004,107,0.76,108,1.781,109,1.425,110,0.94,111,0.94,112,0.94,113,0.94,114,1.962,115,0.932,116,2.454,117,0.768,118,2.043,119,2.268,120,1.263,121,4.434,122,1.263,123,3.574,124,0.773,125,3.851,126,4.434,127,4.434,128,6.528,129,4.434,130,1.926,131,2.79,132,3.574,133,3.615,134,1.214,135,4.434,136,1.767,137,3.42,138,3.574,139,2.259,140,0.899,141,3.574,142,2.259,143,2.259,144,2.259,145,2.951,146,3.574,147,2.259,148,2.259,149,2.259,150,4.434,151,3.574,152,2.259,153,4.434,154,3.574,155,2.259,156,0.635,157,0.527,158,2.259,159,2.259,160,2.259,161,1.186,162,0.768,163,1.214,164,1.962,165,2.259,166,2.259,167,2.259,168,2.379,169,2.259,170,2.259,171,2.259,172,2.259,173,1.962,174,1.767,175,2.259,176,2.259,177,0.711,178,2.259,179,2.963,180,3.574,181,3.574,182,4.434,183,3.574,184,3.104,185,2.76,186,3.574,187,6.528,188,4.846,189,2.657,190,3.574,191,2.4,192,2.604,193,1.075,194,2.755,195,4.565,196,4.976,197,2.882,198,2.563,199,4.434,200,5.924,201,2.794,202,4.377,203,3.851,204,3.916,205,3.355,206,3.18,207,3.355,208,1.962,209,1.767,210,2.24,211,4.22,212,1.962,213,3.104,214,2.259,215,2.794,216,2.327,217,2.563,218,4.434,219,2.259,220,2.259,221,1.767,222,1.962,223,1.962,224,3.574,225,1.962,226,4.377,227,2.259,228,2.379,229,3.938,230,2.259,231,2.259,232,4.434,233,5.311,234,3.467,235,3.18,236,3.18,237,3.574,238,4.434,239,3.851,240,2.76,241,2.259,242,2.259,243,2.259,244,2.259,245,2.259,246,3.574,247,3.574,248,3.574,249,3.574,250,6.341,251,3.574,252,4.434,253,2.778,254,5.491,255,3.574,256,2.259,257,2.563,258,3.467,259,2.259,260,2.794,261,3.104,262,2.259,263,0.865,264,3.574,265,2.259,266,1.251,267,1.962,268,2.259,269,2.259,270,2.379,271,2.259,272,2.259,273,2.259,274,1.767,275,4.293,276,2.454,277,3.574,278,3.574,279,2.259,280,3.574,281,3.574,282,2.259,283,2.259,284,2.259,285,2.259,286,2.259,287,1.62,288,2.259,289,2.259,290,1.962,291,1.962,292,1.504,293,1.62,294,2.794,295,2.259,296,1.962,297,0.589,298,1.425,299,1.487,300,0.568,301,2.097,302,0.94,303,0.94,304,0.798,305,1.425,306,1.487,307,0.798,308,0.831,309,0.94,310,0.768,311,0.94,312,0.798,313,0.471,314,0.865,315,0.94,316,0.768,317,0.94,318,0.739,319,0.831,320,0.94,321,0.798,322,0.768,323,0.768,324,0.94,325,0.798,326,0.94,327,0.768,328,0.684,329,1.487,330,0.768,331,0.684,332,0.768,333,0.94,334,0.739,335,0.831,336,0.798,337,0.739,338,0.768,339,0.94,340,0.94,341,0.739,342,0.94,343,0.739,344,0.94,345,0.768,346,0.901,347,0.94]],["title/injectables/AppErrorHandler.html",[0,1.243,348,2.833]],["body/injectables/AppErrorHandler.html",[0,1.663,2,2.118,3,0.137,4,0.153,5,0.107,7,0.344,8,0.943,9,1.07,20,0.767,23,1.033,25,1.124,26,0.015,27,0.957,28,0.65,29,0.957,32,1.168,56,0.242,57,2.382,58,0.185,77,0.169,78,0.034,79,0.86,80,0.918,104,0.007,105,0.009,106,0.007,115,0.998,130,2.297,140,1.165,157,1.233,177,1.663,348,4.685,349,4.917,350,3.007,351,3.323,352,2.199,353,5.286,354,5.286,355,5.674,356,4.591,357,5.286,358,6.532,359,3.827,360,7.089,361,3.827,362,5.286,363,4.929,364,3.827,365,6.532,366,5.286,367,7.089,368,4.016,369,3.827,370,5.286,371,5.286,372,4.591,373,6.057,374,4.344,375,4.736,376,3.792,377,3.827,378,3.792,379,5.286,380,5.286,381,5.286,382,5.286,383,5.286,384,2.329,385,5.286,386,6.057,387,4.591,388,2.745,389,3.323,390,3.323,391,3.827,392,1.251,393,0.962,394,3.827,395,2.118,396,3.827,397,5.286,398,2.382,399,3.827,400,2.992,401,3.827,402,2.745,403,5.286,404,2.992,405,2.009,406,2.992,407,2.992,408,3.827,409,3.827,410,2.401,411,3.323,412,5.286,413,2.992,414,3.827,415,3.827,416,6.532,417,2.745,418,3.827]],["title/modules/AppModule.html",[419,0.956,420,2.833]],["body/modules/AppModule.html",[3,0.136,4,0.151,5,0.106,26,0.015,56,0.32,57,2.356,58,0.183,69,2.518,77,0.231,78,0.034,80,0.795,104,0.007,105,0.009,106,0.007,108,2.733,119,1.53,162,1.286,163,2.4,164,3.286,297,0.987,313,0.788,348,3.762,350,1.448,368,4.138,378,2.714,384,1.782,387,4.556,389,3.286,390,3.286,393,1.318,419,0.916,420,5.836,421,1.286,422,1.574,423,2.735,424,2.735,425,2.735,426,1.391,427,3.286,428,3.286,429,3.286,430,3.286,431,3.286,432,4.398,433,4.398,434,4.398,435,4.398,436,2.715,437,3.526,438,2.818,439,2.383,440,1.719,441,1.574,442,2.958,443,2.008,444,4.556,445,5.245,446,2.008,447,2.495,448,3.762,449,4.556,450,3.784,451,4.556,452,4.556,453,4.556,454,3.784,455,3.784,456,3.286,457,3.286,458,3.784,459,3.784,460,2.518,461,3.784,462,5.245,463,2.518,464,3.784,465,3.784,466,3.784,467,2.958,468,2.518,469,2.958,470,1.8,471,4.101,472,3.286,473,2.714,474,3.286,475,4.101,476,3.286,477,3.286,478,2.958,479,3.286,480,3.286,481,2.714,482,3.784,483,5.245,484,3.784,485,3.784]],["title/injectables/AppNotificationService.html",[0,1.243,368,2.313]],["body/injectables/AppNotificationService.html",[0,1.827,2,2.433,3,0.233,4,0.176,5,0.123,7,0.395,8,1.036,9,0.963,20,1.303,23,1.093,25,0.816,26,0.015,27,0.695,28,0.682,29,0.695,32,0.956,33,1.972,37,2.262,56,0.232,58,0.212,68,0.881,75,2.307,76,2.194,77,0.287,78,0.039,80,0.667,104,0.008,105,0.01,106,0.008,124,1.256,130,2.522,134,1.972,140,1.036,156,1.235,157,1.025,177,1.383,210,1.553,253,1.997,350,2.222,352,1.829,368,3.4,374,5.601,388,4.164,398,3.614,400,4.539,410,1.997,486,5.156,487,3.152,488,1.254,489,5.646,490,5.805,491,5.646,492,5.805,493,5.042,494,4.959,495,4.395,496,5.042,497,5.042,498,4.411,499,1.694,500,5.042,501,5.042,502,4.395,503,4.395,504,2.307,505,4.539,506,1.997,507,1.493,508,3.817,509,3.817]],["title/classes/AppPreloadingStrategy.html",[78,0.035,510,2.833]],["body/classes/AppPreloadingStrategy.html",[3,0.2,4,0.223,5,0.155,7,0.5,8,1.203,23,0.88,25,1.033,26,0.015,27,0.88,28,0.528,29,0.88,32,0.917,37,2.282,56,0.27,68,1.116,77,0.246,78,0.05,80,0.844,87,2.17,104,0.01,105,0.012,106,0.01,115,1.759,349,4.836,510,4.836,511,2.649,512,5.273,513,3.994,514,6.3,515,6.743,516,6.743,517,5.018,518,5.202,519,5.568,520,1.687,521,4.488,522,5.568,523,2.649]],["title/modules/AppRoutingModule.html",[419,0.956,432,2.459]],["body/modules/AppRoutingModule.html",[3,0.192,4,0.214,5,0.149,26,0.015,56,0.285,58,0.258,104,0.009,105,0.012,106,0.009,119,1.56,328,1.62,331,1.62,336,1.889,349,3.835,392,1.748,393,1.344,421,1.817,426,1.966,432,3.329,443,2.047,446,2.518,510,4.718,512,4.181,514,4.644,520,1.62,523,3.129,524,3.559,525,4.095,526,3.129,527,5.347,528,6.578,529,7.435,530,5.347,531,2.96,532,5.347,533,4.302,534,5.347,535,5.347,536,5.347,537,3.559,538,5.347,539,5.347,540,5.347,541,5.347,542,5.347]],["title/interfaces/Bounds.html",[55,2.459,507,1.342]],["body/interfaces/Bounds.html",[3,0.2,4,0.223,5,0.155,7,0.5,26,0.015,28,0.732,43,2.575,55,4.198,56,0.223,63,4.198,65,1.752,66,1.687,67,1.752,71,3.706,77,0.298,92,3.763,95,3.763,97,3.586,99,3.763,104,0.01,105,0.012,106,0.01,124,1.459,507,1.892,543,3.082,544,4.354,545,6.743,546,2.221]],["title/directives/CountdownTimerDirective.html",[300,0.993,338,1.342]],["body/directives/CountdownTimerDirective.html",[3,0.14,4,0.156,5,0.109,7,0.35,8,0.954,9,1.051,23,1.193,25,0.722,26,0.015,27,0.615,28,0.654,29,0.615,32,1.006,33,1.818,43,2.297,56,0.244,58,0.188,68,0.781,77,0.172,78,0.035,80,0.59,104,0.007,105,0.009,106,0.007,115,1.395,116,3.383,117,1.323,118,1.448,124,1.157,131,3.642,134,1.818,140,1.231,156,1.718,157,1.425,263,0.943,300,1.654,313,0.811,337,1.273,338,2.236,352,1.62,393,0.978,441,2.226,488,1.456,499,1.561,547,5.969,548,5.969,549,3.381,550,2.247,551,5.349,552,5.145,553,6.112,554,4.779,555,2.419,556,3.133,557,6.898,558,7.3,559,5.349,560,6.58,561,3.893,562,2.808,563,3.33,564,5.349,565,3.58,566,3.893,567,3.893,568,3.893,569,3.893,570,3.05,571,5.349,572,3.893,573,2.159,574,3.893,575,3.893,576,3.381,577,3.383,578,2.792,579,2.591,580,1.273,581,3.044,582,1.431,583,1.323,584,3.893,585,3.893,586,3.893,587,2.792,588,5.349,589,4.183,590,3.044,591,3.381,592,3.893,593,3.044,594,4.646,595,3.893,596,3.044,597,3.381,598,3.044]],["title/modules/CountdownTimerModule.html",[419,0.956,599,2.629]],["body/modules/CountdownTimerModule.html",[3,0.189,4,0.21,5,0.147,26,0.015,56,0.296,58,0.254,77,0.232,78,0.047,104,0.009,105,0.012,106,0.009,162,1.788,297,1.373,338,2.761,352,2.19,419,1.713,421,1.788,422,2.19,423,3.214,424,2.391,425,2.959,426,2.601,439,2.959,440,2.391,441,2.19,443,2.015,446,2.494,447,3.366,547,4.115,548,4.115,599,5.223,600,4.571,601,4.571,602,4.571,603,5.263,604,6.515,605,6.515,606,3.532,607,2.504,608,5.263,609,5.263]],["title/components/DepartureListComponent.html",[107,0.677,304,1.396]],["body/components/DepartureListComponent.html",[3,0.126,4,0.14,5,0.098,7,0.315,8,0.887,9,0.924,23,1.05,25,0.651,26,0.015,27,0.994,28,0.548,29,0.554,32,1.136,56,0.199,58,0.17,65,1.104,66,1.063,67,1.104,77,0.155,78,0.031,80,0.754,87,1.398,89,6.099,104,0.006,105,0.009,106,0.006,107,1.138,108,1.239,109,1.984,110,1.459,111,1.459,112,1.459,113,1.459,117,1.192,118,2.166,119,2.309,120,1.757,122,1.757,124,1.076,134,1.69,140,0.626,156,0.986,157,0.818,163,1.192,177,1.565,179,2.161,191,1.289,192,1.399,193,1.669,216,1.841,228,3.31,263,0.849,297,0.915,298,1.984,299,2.069,300,0.881,301,2.616,302,1.459,303,1.459,304,2.222,305,3.111,306,2.069,307,1.239,308,2.607,309,1.459,310,1.192,311,1.459,312,1.239,313,0.731,314,1.343,315,1.459,316,1.192,317,1.459,318,1.147,319,1.289,320,1.459,321,1.239,322,1.192,323,1.192,324,1.459,325,1.239,326,1.459,327,1.192,328,1.063,329,2.069,330,1.192,331,1.063,332,1.192,333,1.459,334,1.147,335,1.289,336,1.239,337,1.147,338,1.192,339,1.459,340,1.459,341,1.147,342,1.459,343,1.147,344,1.459,345,1.192,346,1.399,347,1.459,352,1.459,384,1.69,481,4.145,488,1.115,556,2.913,577,1.941,583,2.137,610,5.392,611,2.743,612,5.019,613,4.32,614,5.019,615,6.288,616,4.32,617,3.507,618,4.917,619,6.288,620,3.31,621,5.989,622,3.507,623,3.507,624,3.507,625,3.507,626,3.507,627,3.507,628,5.461,629,1.063,630,3.046,631,4.974,632,4.32,633,3.889,634,3.507,635,4.974,636,4.32,637,2.743,638,2.743,639,3.507,640,3.046,641,3.507]],["title/components/DepartureListItemComponent.html",[107,0.677,307,1.396]],["body/components/DepartureListItemComponent.html",[3,0.09,4,0.1,5,0.07,7,0.225,8,0.69,9,0.991,23,1.125,25,0.878,26,0.015,27,0.963,28,0.546,29,0.748,32,1.187,33,1.608,43,2.166,56,0.213,58,0.121,65,1.217,66,1.172,67,0.787,77,0.11,78,0.022,80,1.044,87,1.087,89,3.7,104,0.004,105,0.007,106,0.004,107,0.811,108,0.884,109,1.543,110,1.04,111,1.04,112,1.04,113,1.04,117,0.85,118,2.075,119,2.166,120,1.367,122,1.367,124,0.837,134,1.315,140,0.446,156,1.497,157,1.104,163,0.85,177,1.676,179,2.314,185,1.557,191,0.919,192,0.997,193,1.19,216,1.313,263,1.146,276,1.384,297,0.652,298,1.543,299,1.61,300,0.628,301,2.216,302,1.04,303,1.04,304,0.884,305,3.097,306,1.61,307,1.882,308,2.843,309,1.04,310,0.85,311,1.04,312,0.884,313,0.521,314,0.957,315,1.04,316,0.85,317,1.04,318,0.817,319,0.919,320,1.04,321,0.884,322,0.85,323,0.85,324,1.04,325,0.884,326,1.04,327,0.85,328,0.758,329,1.61,330,0.85,331,0.758,332,0.85,333,1.04,334,0.817,335,0.919,336,0.884,337,0.817,338,0.85,339,1.04,340,1.04,341,0.817,342,1.04,343,0.817,344,1.04,345,0.85,346,0.997,347,1.04,352,1.61,392,2.146,393,1.189,410,1.758,481,3.394,488,1.3,556,2.266,562,3.334,565,2.772,577,1.384,583,0.85,587,1.793,610,5.635,621,6.178,629,1.846,637,1.955,638,1.955,642,2.172,643,3.316,644,4.733,645,3.869,646,4.733,647,4.733,648,4.733,649,3.869,650,3.025,651,5.761,652,4.132,653,7.007,654,3.869,655,3.869,656,2.501,657,3.869,658,1.958,659,4.733,660,3.869,661,2.501,662,2.501,663,3.869,664,3.869,665,3.869,666,3.869,667,3.869,668,2.501,669,3.36,670,3.869,671,2.775,672,2.501,673,3.869,674,2.501,675,2.501,676,3.869,677,2.501,678,2.501,679,2.501,680,2.501,681,2.501,682,2.501,683,2.501,684,3.869,685,5.327,686,2.501,687,2.501,688,2.501,689,3.36,690,2.501,691,2.501,692,3.869,693,3.869,694,2.501,695,3.869,696,2.501,697,1.955,698,3.869,699,4.165,700,2.501,701,3.869,702,2.501,703,2.501,704,2.501,705,2.501,706,2.501,707,1.793,708,2.501,709,1.793,710,3.7,711,1.955,712,3.394,713,2.501,714,3.869,715,2.501,716,3.869,717,2.501,718,3.869,719,2.501,720,2.501,721,5.327,722,2.501,723,2.172,724,2.172,725,2.501,726,3.869,727,3.869,728,6.092,729,2.501,730,1.664,731,1.664,732,1.955,733,2.501,734,2.501,735,2.501,736,2.501,737,2.501,738,2.501,739,2.501]],["title/directives/DrawableDirective.html",[163,1.342,300,0.993]],["body/directives/DrawableDirective.html",[3,0.139,4,0.154,5,0.108,7,0.347,8,0.949,20,0.774,23,1.243,25,0.987,26,0.015,27,0.841,28,0.652,29,0.841,32,1.08,56,0.154,58,0.187,77,0.17,78,0.035,79,0.867,80,0.806,104,0.007,105,0.009,106,0.007,115,1.387,116,3.368,117,1.311,118,1.44,124,1.15,125,5.284,131,3.629,140,1.085,156,1.085,157,0.9,163,1.807,210,1.364,263,1.721,274,4.158,300,1.336,337,1.262,499,1.126,669,3.352,709,3.814,740,3.352,741,5.318,742,6.084,743,4.757,744,4.082,745,6.556,746,5.318,747,4.619,748,6.084,749,5.318,750,5.318,751,5.318,752,5.318,753,5.318,754,5.318,755,3.86,756,2.978,757,5.318,758,5.318,759,5.284,760,6.877,761,3.626,762,3.86,763,3.86,764,3.86,765,3.86,766,3.86,767,3.86,768,3.86,769,3.86,770,3.86,771,3.86,772,3.86,773,3.86,774,5.318,775,3.86,776,5.318,777,3.86,778,3.86,779,6.084,780,3.86,781,5.318,782,3.86,783,4.158,784,3.86,785,3.86,786,4.619,787,3.86,788,3.86,789,3.86,790,3.86,791,3.86,792,3.86,793,3.86,794,3.86,795,3.86,796,6.084,797,3.86,798,3.86,799,3.86,800,3.86,801,3.86,802,3.86,803,3.86,804,3.86,805,2.768,806,3.86,807,3.86,808,3.86,809,3.86,810,3.86,811,6.084,812,3.86,813,3.86,814,3.86,815,3.86,816,5.318,817,3.86,818,5.318,819,3.86,820,3.86,821,3.86,822,3.86,823,3.86,824,3.86]],["title/directives/FollowBusMapDirective.html",[300,0.993,341,1.291]],["body/directives/FollowBusMapDirective.html",[1,2.458,3,0.104,4,0.116,5,0.081,7,0.26,8,0.773,9,1.061,20,0.581,23,1.162,25,0.962,26,0.015,27,0.819,28,0.612,29,0.819,32,1.013,56,0.286,58,0.14,63,3.226,65,0.912,66,0.878,67,0.912,68,0.581,74,1.805,77,0.191,78,0.039,79,0.651,80,0.657,94,3.571,104,0.005,105,0.008,106,0.005,115,1.129,117,0.985,118,1.172,124,0.937,130,1.26,134,1.471,140,1.226,156,1.456,157,1.209,197,1.522,210,1.024,263,0.702,300,1.088,313,0.604,337,0.948,341,1.694,384,0.985,392,1.415,393,1.621,395,1.605,436,2.527,438,2.742,470,1.379,488,1.434,499,1.512,506,1.317,533,1.605,546,2.574,550,1.905,555,2.113,556,2.536,570,2.586,573,1.831,577,1.605,580,1.415,581,3.385,582,1.066,583,0.985,629,1.312,731,1.93,756,2.611,825,3.902,826,5.812,827,5.331,828,1.805,829,2.251,830,3.76,831,4.501,832,3.449,833,4.501,834,4.501,835,4.122,836,2.611,837,4.33,838,2.696,839,2.869,840,2.869,841,3.76,842,1.605,843,3.76,844,2.899,845,2.518,846,2.899,847,3.76,848,2.899,849,3.76,850,3.76,851,2.518,852,2.586,853,2.518,854,2.899,855,2.696,856,2.518,857,2.899,858,2.899,859,2.899,860,1.317,861,1.156,862,1.805,863,2.518,864,1.805,865,2.267,866,2.518,867,1.447,868,1.447,869,1.967,870,2.267,871,2.079,872,1.53,873,1.066,874,2.518,875,2.518,876,1.93,877,2.267,878,2.518,879,2.518,880,2.518,881,2.518,882,2.518,883,2.518,884,2.518,885,2.518,886,2.518,887,2.518,888,2.518,889,1.605,890,2.518,891,1.605,892,2.518,893,2.518,894,2.518,895,2.518,896,1.93,897,2.079,898,2.267,899,2.267,900,2.267,901,2.267,902,2.267,903,1.605,904,2.079,905,2.267,906,2.267,907,2.267,908,2.518,909,3.76,910,2.267,911,2.882,912,2.267,913,2.267,914,3.105,915,1.93,916,2.518,917,2.518,918,1.93,919,2.267,920,1.93,921,2.267,922,3.385,923,1.93,924,1.317,925,1.605,926,2.267,927,1.93,928,2.518,929,2.079,930,2.267,931,1.93,932,1.93,933,1.93,934,1.93,935,2.267,936,1.93,937,1.93,938,1.805,939,2.518,940,2.518,941,2.079,942,2.518,943,2.518,944,1.317,945,2.518,946,1.93,947,2.518]],["title/interfaces/IAppNotification.html",[494,2.833,507,1.342]],["body/interfaces/IAppNotification.html",[0,1.867,3,0.237,4,0.182,5,0.127,7,0.408,9,0.826,20,0.911,26,0.015,28,0.751,29,1.178,33,2.532,37,2.079,56,0.237,58,0.22,68,0.911,75,2.385,76,2.268,77,0.292,78,0.041,80,0.689,104,0.008,105,0.01,106,0.008,124,1.284,130,3.238,140,0.811,177,2.079,210,1.605,253,2.064,350,2.271,368,2.661,374,5.634,388,5.023,398,4.64,400,5.827,410,2.064,486,3.259,487,3.259,488,0.877,489,3.946,491,3.946,493,3.946,494,4.738,496,3.946,497,3.946,498,4.103,499,1.326,500,3.946,501,3.946,504,2.385,505,4.639,506,2.064,507,1.544,508,3.946,509,3.946,543,2.515]],["title/interfaces/IEnvironmentBase.html",[507,1.342,948,2.833]],["body/interfaces/IEnvironmentBase.html",[3,0.202,4,0.225,5,0.157,7,0.506,26,0.014,28,0.718,29,1.074,33,2.478,56,0.225,77,0.249,104,0.01,105,0.012,106,0.01,119,1.645,124,1.47,177,2.476,507,1.916,543,3.121,948,4.873,949,4.897,950,6.575,951,6.575,952,6.575,953,5.156,954,5.43,955,3.289]],["title/interfaces/IMapBounds.html",[53,1.971,507,1.342]],["body/interfaces/IMapBounds.html",[3,0.123,4,0.137,5,0.096,7,0.308,9,1.003,26,0.015,28,0.695,43,2.446,53,2.444,56,0.274,58,0.166,68,0.688,77,0.311,78,0.044,79,1.1,80,0.944,92,3.108,95,3.108,97,2.962,99,3.108,104,0.006,105,0.009,106,0.006,115,0.895,124,1.059,140,0.874,161,1.801,194,1.491,210,1.212,240,3.555,253,2.224,263,0.831,313,1.189,392,1.601,393,1.231,410,1.559,436,1.8,438,2.277,470,1.632,488,1.102,498,3.344,499,1.001,504,1.801,507,1.94,543,1.899,546,1.953,550,1.8,555,1.262,562,1.801,563,2.136,565,2.01,573,1.73,580,1.601,583,1.166,629,2.074,658,1.262,744,2.136,756,2.224,761,1.632,829,2.127,836,1.559,839,1.713,840,2.85,842,1.899,852,2.444,860,1.559,861,1.369,867,1.713,868,1.713,869,2.224,872,1.212,873,1.262,889,1.899,891,1.899,903,2.711,925,1.899,955,1.491,956,1.899,957,1.899,958,2.284,959,2.284,960,1.899,961,1.801,962,2.01,963,2.136,964,2.711,965,3.259,966,2.711,967,2.868,968,1.899,969,2.01,970,2.284,971,2.01,972,2.284,973,2.284,974,2.284,975,3.8,976,1.801,977,2.284,978,2.284,979,3.259,980,2.01,981,2.284,982,2.284,983,2.284,984,2.284,985,2.284,986,2.284,987,2.284,988,2.284,989,2.284,990,3.259,991,2.284,992,2.284,993,2.284,994,2.01,995,2.284,996,2.136,997,2.136,998,2.284,999,2.284,1000,2.284,1001,2.284,1002,2.284,1003,2.284,1004,2.284,1005,2.284,1006,2.284,1007,2.136,1008,2.284,1009,2.284,1010,2.284,1011,3.259,1012,2.284,1013,2.284,1014,3.259,1015,2.284,1016,2.284,1017,2.284,1018,2.01,1019,3.8,1020,2.284,1021,2.284,1022,3.259,1023,2.284,1024,2.284,1025,2.284,1026,2.284,1027,2.284,1028,2.284,1029,2.284,1030,3.259,1031,2.284,1032,3.259,1033,2.284,1034,2.284,1035,2.284,1036,2.284,1037,1.713,1038,2.284,1039,2.284,1040,2.284,1041,2.284,1042,3.259,1043,2.284,1044,2.284,1045,2.284]],["title/interfaces/IMapMoveEndEvent.html",[507,1.342,966,2.186]],["body/interfaces/IMapMoveEndEvent.html",[3,0.127,4,0.141,5,0.098,7,0.317,9,1.01,26,0.015,28,0.7,43,2.235,53,1.76,56,0.276,58,0.17,68,0.707,77,0.313,78,0.045,79,1.121,80,0.956,92,1.76,95,1.76,97,1.677,99,1.76,104,0.006,105,0.009,106,0.006,115,0.92,124,1.08,140,0.891,161,1.851,194,1.532,210,1.246,240,3.608,253,2.268,263,0.854,313,1.207,392,1.632,393,1.255,410,1.602,436,1.835,438,2.312,470,1.677,488,1.118,498,3.395,499,1.029,504,1.851,507,1.969,543,1.952,546,1.991,550,1.835,555,1.296,562,1.851,563,2.195,565,2.065,573,1.764,580,1.632,583,1.198,629,2.093,658,1.296,744,2.195,756,2.268,761,1.677,829,2.169,836,1.602,839,1.76,840,2.893,842,1.952,852,2.492,860,1.602,861,1.406,867,1.76,868,1.76,869,2.268,872,1.246,873,1.296,889,1.952,891,1.952,903,2.763,925,1.952,955,1.532,956,1.952,957,1.952,958,2.347,959,2.347,960,1.952,961,1.851,962,2.065,963,2.195,964,2.763,965,3.323,966,3.208,967,3.692,968,1.952,969,2.065,970,2.347,971,2.065,972,2.347,973,2.347,974,2.347,975,3.857,976,1.851,977,2.347,978,2.347,979,3.323,980,2.065,981,2.347,982,2.347,983,2.347,984,2.347,985,2.347,986,2.347,987,2.347,988,2.347,989,2.347,990,3.323,991,2.347,992,2.347,993,2.347,994,2.065,995,2.347,996,2.195,997,2.195,998,2.347,999,2.347,1000,2.347,1001,2.347,1002,2.347,1003,2.347,1004,2.347,1005,2.347,1006,2.347,1007,2.195,1008,2.347,1009,2.347,1010,2.347,1011,3.323,1012,2.347,1013,2.347,1014,3.323,1015,2.347,1016,2.347,1017,2.347,1018,2.065,1019,3.857,1020,2.347,1021,2.347,1022,3.323,1023,2.347,1024,2.347,1025,2.347,1026,2.347,1027,2.347,1028,2.347,1029,2.347,1030,3.323,1031,2.347,1032,3.323,1033,2.347,1034,2.347,1035,2.347,1036,2.347,1037,1.76,1038,2.347,1039,2.347,1040,2.347,1041,2.347,1042,3.323,1043,2.347,1044,2.347,1045,2.347]],["title/interfaces/IMapMoveStartEvent.html",[507,1.342,964,2.186]],["body/interfaces/IMapMoveStartEvent.html",[3,0.127,4,0.141,5,0.098,7,0.317,9,1.01,26,0.015,28,0.7,43,2.235,53,1.76,56,0.276,58,0.17,68,0.707,77,0.313,78,0.045,79,1.121,80,0.956,92,1.76,95,1.76,97,1.677,99,1.76,104,0.006,105,0.009,106,0.006,115,0.92,124,1.08,140,0.891,161,1.851,194,1.532,210,1.246,240,3.608,253,2.268,263,0.854,313,1.207,392,1.632,393,1.255,410,1.602,436,1.835,438,2.312,470,1.677,488,1.118,498,3.395,499,1.029,504,1.851,507,1.969,543,1.952,546,1.991,550,1.835,555,1.296,562,1.851,563,2.195,565,2.065,573,1.764,580,1.632,583,1.198,629,2.093,658,1.296,744,2.195,756,2.268,761,1.677,829,2.169,836,1.602,839,1.76,840,2.893,842,1.952,852,2.492,860,1.602,861,1.406,867,1.76,868,1.76,869,2.268,872,1.246,873,1.296,889,1.952,891,1.952,903,2.763,925,1.952,955,1.532,956,1.952,957,1.952,958,2.347,959,2.347,960,1.952,961,1.851,962,2.065,963,2.195,964,3.208,965,4.195,966,2.763,967,2.924,968,1.952,969,2.065,970,2.347,971,2.065,972,2.347,973,2.347,974,2.347,975,3.857,976,1.851,977,2.347,978,2.347,979,3.323,980,2.065,981,2.347,982,2.347,983,2.347,984,2.347,985,2.347,986,2.347,987,2.347,988,2.347,989,2.347,990,3.323,991,2.347,992,2.347,993,2.347,994,2.065,995,2.347,996,2.195,997,2.195,998,2.347,999,2.347,1000,2.347,1001,2.347,1002,2.347,1003,2.347,1004,2.347,1005,2.347,1006,2.347,1007,2.195,1008,2.347,1009,2.347,1010,2.347,1011,3.323,1012,2.347,1013,2.347,1014,3.323,1015,2.347,1016,2.347,1017,2.347,1018,2.065,1019,3.857,1020,2.347,1021,2.347,1022,3.323,1023,2.347,1024,2.347,1025,2.347,1026,2.347,1027,2.347,1028,2.347,1029,2.347,1030,3.323,1031,2.347,1032,3.323,1033,2.347,1034,2.347,1035,2.347,1036,2.347,1037,1.76,1038,2.347,1039,2.347,1040,2.347,1041,2.347,1042,3.323,1043,2.347,1044,2.347,1045,2.347]],["title/interfaces/IPassageStatus.html",[507,1.342,1046,2.833]],["body/interfaces/IPassageStatus.html",[1,1.975,3,0.111,4,0.123,5,0.086,7,0.277,9,1.011,26,0.015,27,0.487,28,0.598,29,0.716,30,2.41,32,1.176,33,1.047,37,1.425,43,2.284,49,4.199,56,0.273,58,0.149,65,0.97,66,0.934,67,0.97,68,0.618,71,4.539,77,0.2,78,0.028,79,0.692,80,1.141,87,1.273,104,0.005,105,0.008,106,0.005,107,0.921,115,0.804,118,0.834,119,0.899,120,1.089,122,1.089,124,0.98,140,0.55,174,2.41,177,0.97,189,2.334,210,1.089,253,1.4,263,1.097,308,1.133,313,0.642,323,1.047,334,1.007,335,2.177,336,2.565,350,2.267,384,1.047,393,0.774,402,2.21,413,2.41,417,3.249,488,1.273,499,0.899,504,1.618,506,1.4,507,1.047,520,0.934,523,1.466,531,1.706,543,1.706,550,1.665,552,5.47,555,1.133,570,2.261,573,1.898,580,1.007,582,1.133,583,1.539,596,3.542,629,1.627,652,5.207,658,1.133,671,3.249,825,1.618,829,1.968,855,1.919,944,1.4,955,1.968,1037,1.538,1046,4.247,1047,2.21,1048,5.143,1049,5.583,1050,3.249,1051,3.934,1052,1.466,1053,2.41,1054,1.805,1055,2.677,1056,1.706,1057,2.21,1058,2.41,1059,1.919,1060,2.41,1061,2.41,1062,2.82,1063,2.41,1064,2.41,1065,4.2,1066,2.677,1067,2.677,1068,2.677,1069,2.21,1070,2.677,1071,2.677,1072,2.677,1073,2.677,1074,3.934,1075,2.677,1076,2.677,1077,2.677,1078,3.934,1079,3.853,1080,2.677,1081,4.665,1082,2.677,1083,3.934,1084,2.677,1085,2.677,1086,2.677,1087,2.677,1088,3.853,1089,3.934,1090,5.48,1091,2.677,1092,2.677,1093,2.677,1094,2.677,1095,2.677,1096,2.677,1097,3.934,1098,2.677,1099,2.677,1100,2.677,1101,2.677,1102,2.677,1103,3.934,1104,2.677,1105,3.015,1106,2.677,1107,2.41,1108,2.677,1109,2.677,1110,2.677,1111,2.677,1112,2.677,1113,2.677,1114,2.677,1115,2.677,1116,2.677,1117,2.677,1118,2.677,1119,2.677,1120,2.677,1121,2.677,1122,2.677,1123,2.41,1124,2.677,1125,2.677,1126,2.677]],["title/classes/LeafletMapComponent.html",[78,0.035,869,1.794]],["body/classes/LeafletMapComponent.html",[3,0.103,4,0.115,5,0.08,7,0.257,8,0.766,9,1.072,20,0.574,23,1.16,25,0.955,26,0.015,27,0.813,28,0.696,29,0.813,32,1.058,43,2.096,53,1.43,56,0.257,58,0.139,68,0.574,77,0.294,78,0.038,79,0.964,80,0.867,92,1.43,95,1.43,97,1.363,99,1.43,104,0.005,105,0.008,106,0.005,115,1.119,124,0.928,134,1.458,140,1.092,145,1.907,156,1.206,157,1.001,161,1.504,194,1.245,210,1.012,240,3.204,253,1.95,263,0.694,313,1.275,352,1.192,392,1.403,393,1.078,410,1.302,436,2.101,438,2.657,470,1.363,488,1.351,498,3.585,499,1.252,504,1.504,507,1.748,511,1.363,546,2.279,550,1.892,555,2.101,562,1.504,563,1.784,565,2.514,573,1.818,580,1.403,583,1.458,629,2.161,658,1.053,744,2.672,756,2.596,761,1.363,829,2.235,836,2.596,838,1.784,839,2.568,840,3.055,842,2.376,852,2.568,860,1.302,861,1.143,867,1.43,868,1.43,869,2.337,872,1.012,873,1.053,889,1.586,891,1.586,903,3.387,904,2.055,925,1.586,955,2.235,956,4.105,957,1.586,958,1.907,959,1.907,960,1.586,961,1.504,962,1.678,963,1.784,964,2.376,965,2.856,966,2.376,967,2.514,968,1.586,969,1.678,970,1.907,971,1.678,972,1.907,973,1.907,974,1.907,975,3.425,976,2.701,977,2.856,978,3.425,979,3.803,980,3.014,981,3.425,982,3.425,983,1.907,984,1.907,985,1.907,986,1.907,987,1.907,988,1.907,989,1.907,990,2.856,991,1.907,992,1.907,993,1.907,994,1.678,995,1.907,996,1.784,997,1.784,998,1.907,999,1.907,1000,1.907,1001,1.907,1002,1.907,1003,1.907,1004,1.907,1005,1.907,1006,1.907,1007,1.784,1008,1.907,1009,1.907,1010,1.907,1011,2.856,1012,1.907,1013,1.907,1014,2.856,1015,1.907,1016,1.907,1017,1.907,1018,2.514,1019,4.073,1020,2.856,1021,3.425,1022,2.856,1023,1.907,1024,1.907,1025,1.907,1026,1.907,1027,1.907,1028,1.907,1029,1.907,1030,2.856,1031,1.907,1032,2.856,1033,1.907,1034,1.907,1035,1.907,1036,1.907,1037,1.43,1038,3.803,1039,2.856,1040,1.907,1041,2.856,1042,3.425,1043,3.425,1044,2.856,1045,1.907,1127,4.292,1128,4.292,1129,2.865,1130,2.865,1131,2.865,1132,2.865,1133,2.865,1134,2.865,1135,2.865,1136,2.865,1137,2.865,1138,2.865,1139,2.865,1140,2.865,1141,2.865]],["title/directives/MainMapDirective.html",[300,0.993,343,1.291]],["body/directives/MainMapDirective.html",[1,2.239,3,0.08,4,0.089,5,0.062,7,0.201,8,0.632,9,1.073,20,0.448,23,1.094,25,1.014,26,0.015,27,0.863,28,0.632,29,0.863,32,1.04,37,1.115,43,0.703,53,1.768,55,1.391,56,0.281,58,0.108,63,3.119,64,4.271,65,0.703,66,0.677,67,0.703,68,0.448,73,1.747,74,1.391,77,0.156,78,0.032,79,0.502,80,0.881,92,1.115,94,3.217,95,1.115,97,1.063,99,1.115,104,0.004,105,0.006,106,0.004,115,0.924,117,0.759,118,0.959,124,0.767,130,1.539,140,1.213,156,0.996,157,0.826,162,0.759,177,0.703,189,2.646,194,1.913,197,1.173,209,2.77,221,2.77,258,1.747,260,1.747,263,0.541,266,1.961,300,0.89,313,0.466,328,1.334,331,0.677,337,0.731,343,1.439,350,0.855,384,1.702,393,1.764,436,1.842,437,2.5,438,2.52,467,1.747,468,1.487,469,1.747,470,1.063,488,1.355,517,1.487,520,0.677,546,0.891,550,1.618,555,1.842,573,1.555,578,1.603,579,1.487,580,1.158,582,0.822,590,1.747,618,1.747,620,1.487,629,1.845,658,0.822,707,2.541,743,1.747,756,2.276,761,1.686,805,2.541,828,1.391,829,1.913,832,2.93,835,3.593,836,2.276,838,2.206,839,2.901,840,2.5,842,1.237,845,1.941,851,1.941,852,2.901,853,1.941,860,1.015,861,2.179,862,1.391,864,1.391,867,1.115,869,1.609,872,1.252,873,0.822,876,1.487,896,1.487,897,1.603,911,2.358,914,2.541,915,1.487,918,1.487,920,3.334,923,1.487,924,1.609,927,2.358,929,1.603,931,1.487,932,1.487,933,1.487,934,1.487,936,1.487,937,1.487,938,1.391,941,1.603,944,1.015,946,1.487,960,1.237,961,1.86,967,2.075,968,3.023,976,2.629,980,1.309,994,1.309,1052,1.063,1054,1.309,1056,1.237,1069,2.541,1142,3.505,1143,5.036,1144,3.823,1145,3.823,1146,3.543,1147,3.543,1148,3.543,1149,4.351,1150,3.543,1151,3.157,1152,3.823,1153,4.351,1154,2.235,1155,2.235,1156,3.077,1157,2.235,1158,3.077,1159,2.235,1160,2.235,1161,3.077,1162,3.077,1163,2.235,1164,3.077,1165,3.077,1166,2.235,1167,2.235,1168,2.235,1169,2.437,1170,2.77,1171,2.358,1172,1.603,1173,1.941,1174,1.941,1175,1.941,1176,3.077,1177,1.941,1178,1.941,1179,1.941,1180,1.941,1181,1.941,1182,1.941,1183,1.941,1184,1.941,1185,3.077,1186,1.941,1187,1.941,1188,3.077,1189,1.941,1190,1.941,1191,1.941,1192,1.747,1193,1.747,1194,1.941,1195,3.442,1196,1.941,1197,1.941,1198,1.941,1199,1.941,1200,3.823,1201,1.941,1202,1.941,1203,1.941,1204,3.077,1205,1.941,1206,1.941,1207,1.941,1208,1.941,1209,1.941,1210,1.941,1211,1.941,1212,3.077,1213,1.941,1214,1.941,1215,1.941,1216,1.941,1217,1.941,1218,3.077,1219,1.941,1220,1.941,1221,1.941,1222,1.941,1223,1.941,1224,1.941,1225,1.941,1226,1.941,1227,1.941,1228,3.823,1229,1.941,1230,3.077,1231,1.941,1232,3.077,1233,1.603,1234,1.941,1235,1.941,1236,1.941,1237,1.941,1238,1.941,1239,1.941,1240,1.941,1241,1.941,1242,1.941,1243,1.391,1244,1.941,1245,3.077,1246,3.077,1247,3.077,1248,1.941,1249,1.941,1250,1.941,1251,1.941,1252,3.823,1253,1.941,1254,1.941,1255,1.941,1256,1.941,1257,1.941,1258,1.941,1259,1.747,1260,1.941,1261,1.941,1262,3.077,1263,1.941,1264,1.941,1265,1.941,1266,1.941,1267,1.941,1268,1.941,1269,1.941,1270,1.941,1271,1.941,1272,1.941,1273,1.941,1274,1.941,1275,1.941,1276,1.941,1277,1.941,1278,1.941,1279,1.941]],["title/modules/MainMapModule.html",[419,0.956,433,2.459]],["body/modules/MainMapModule.html",[3,0.194,4,0.216,5,0.151,26,0.015,56,0.298,58,0.261,77,0.238,78,0.048,104,0.01,105,0.012,106,0.01,162,1.835,191,1.985,297,1.409,343,2.665,419,1.307,421,1.835,422,2.247,423,3.251,424,2.453,425,2.453,426,2.631,433,4.912,439,3.007,440,2.453,441,2.247,443,2.067,446,2.534,606,3.572,607,2.569,1142,2.696,1143,3.873,1280,4.69,1281,4.69,1282,4.69,1283,5.401,1284,7.157,1285,4.223]],["title/components/MainToolbarComponent.html",[107,0.677,310,1.342]],["body/components/MainToolbarComponent.html",[3,0.091,4,0.101,5,0.071,7,0.228,8,0.698,9,1.037,20,0.509,23,1.093,25,0.887,26,0.015,27,0.969,28,0.453,29,0.755,32,0.955,56,0.232,58,0.123,68,0.509,77,0.173,78,0.035,79,0.879,80,0.385,87,1.509,97,1.207,104,0.004,105,0.007,106,0.004,107,0.819,108,0.897,109,1.561,110,1.056,111,1.056,112,1.056,113,1.056,115,1.021,116,2.644,117,0.862,118,2.08,119,2.251,120,1.383,122,1.383,124,0.847,131,2.972,133,3.851,134,1.33,136,1.985,137,3.59,140,1.177,145,1.689,156,1.1,157,0.913,161,1.332,163,0.862,168,3.18,177,1.689,179,3.235,185,2.974,189,2.775,191,2.425,192,2.805,193,1.207,196,1.821,204,3.145,205,1.689,206,1.821,207,1.689,210,2.166,211,2.605,212,3.4,216,2.818,222,4.663,223,3.4,229,2.807,239,2.205,275,3.735,276,1.405,294,3.735,296,2.205,297,0.662,298,1.561,299,1.628,300,0.638,301,2.234,302,1.056,303,1.056,304,0.897,305,1.561,306,1.628,307,0.897,308,0.933,309,1.056,310,1.971,311,1.056,312,0.897,313,0.529,314,0.972,315,1.056,316,0.862,317,1.056,318,0.83,319,0.933,320,1.056,321,0.897,322,0.862,323,1.623,324,1.056,325,0.897,326,1.056,327,0.862,328,0.769,329,1.628,330,0.862,331,0.769,332,1.824,333,1.056,334,0.83,335,0.933,336,0.897,337,0.83,338,0.862,339,1.056,340,1.056,341,0.83,342,1.056,343,0.83,344,1.056,345,0.862,346,1.012,347,1.056,384,0.862,392,1.896,395,2.167,463,4.681,488,1.232,506,1.153,520,0.769,580,1.28,583,0.862,761,2.554,872,0.897,873,0.933,889,1.405,891,1.405,924,3.195,962,1.487,1059,1.58,1142,3.511,1286,1.985,1287,4.149,1288,3.4,1289,5.323,1290,4.149,1291,4.149,1292,3.914,1293,4.663,1294,3.735,1295,3.914,1296,2.538,1297,3.4,1298,2.538,1299,2.538,1300,2.538,1301,2.538,1302,3.4,1303,2.538,1304,2.538,1305,2.538,1306,2.205,1307,2.538,1308,2.807,1309,2.807,1310,3.4,1311,1.985,1312,4.581,1313,1.821,1314,1.821,1315,2.205,1316,2.205,1317,3.4,1318,2.205,1319,2.205,1320,3.4,1321,1.985,1322,2.205,1323,1.985,1324,2.205,1325,2.205,1326,3.914,1327,2.538,1328,2.538,1329,2.538,1330,3.914,1331,3.914,1332,3.061,1333,5.369,1334,3.914,1335,3.914,1336,3.914,1337,3.914,1338,3.914,1339,3.914,1340,3.914,1341,6.129,1342,3.914,1343,3.914,1344,3.914,1345,3.061,1346,2.538,1347,3.914,1348,3.914,1349,2.538,1350,2.538,1351,3.914,1352,2.538,1353,2.538,1354,2.538,1355,2.538,1356,4.777,1357,5.369,1358,5.323,1359,4.536,1360,2.205,1361,2.538,1362,2.538,1363,2.538,1364,2.538,1365,2.538,1366,2.538,1367,2.538,1368,2.538,1369,2.538,1370,2.538,1371,2.538,1372,2.538,1373,2.538]],["title/modules/MainToolbarModule.html",[419,0.956,434,2.459]],["body/modules/MainToolbarModule.html",[3,0.166,4,0.185,5,0.129,26,0.015,56,0.309,58,0.224,77,0.204,78,0.042,87,1.301,104,0.008,105,0.011,106,0.008,162,1.573,191,1.702,297,1.208,310,2.713,322,2.713,323,1.573,332,2.713,419,1.121,421,1.573,422,1.926,423,3.028,424,2.103,425,2.728,426,2.451,434,4.996,439,2.728,440,2.103,441,1.926,443,1.772,446,2.299,447,3.171,448,4.781,463,3.081,520,1.403,525,4.15,606,3.327,607,2.202,1142,2.311,1312,3.32,1313,3.32,1374,4.021,1375,4.021,1376,4.021,1377,4.63,1378,6.667,1379,6.667,1380,3.62,1381,6.667,1382,4.781,1383,5.79,1384,6.667,1385,4.781,1386,4.63,1387,4.63]],["title/components/MapHeaderBoxComponent.html",[107,0.677,312,1.396]],["body/components/MapHeaderBoxComponent.html",[3,0.12,4,0.134,5,0.093,7,0.506,9,0.784,23,0.891,26,0.014,27,0.891,28,0.457,33,2.093,56,0.134,58,0.162,77,0.148,78,0.03,87,1.353,104,0.006,105,0.009,106,0.006,107,0.966,108,1.184,109,1.92,110,1.394,111,1.394,112,1.394,113,1.394,117,1.138,118,2.155,119,2.273,120,1.701,122,1.701,130,3.04,156,1.583,157,1.314,163,1.138,179,2.448,185,2.086,188,4.342,191,1.232,192,1.336,193,2.68,194,2.676,195,4.405,196,3.452,197,2.957,198,2.403,204,2.82,205,2.23,206,2.403,207,3.204,213,2.91,215,2.62,216,1.759,226,4.181,229,2.403,234,2.62,235,3.452,236,3.452,257,3.452,261,2.91,263,1.364,266,3.611,267,4.893,270,2.23,276,1.854,287,4.041,290,2.91,292,2.23,293,2.403,297,0.874,298,1.92,299,2.003,300,0.842,301,2.562,302,1.394,303,1.394,304,1.184,305,1.92,306,2.003,307,1.184,308,1.232,309,1.394,310,1.138,311,1.394,312,2.176,313,1.541,314,2.982,315,1.394,316,1.138,317,1.394,318,1.095,319,1.232,320,1.394,321,1.184,322,1.138,323,1.138,324,1.394,325,1.184,326,1.394,327,1.138,328,1.015,329,2.003,330,1.138,331,1.015,332,1.138,333,1.394,334,1.095,335,1.232,336,1.184,337,1.095,338,1.138,339,1.394,340,1.394,341,1.095,342,1.394,343,1.095,344,1.394,345,1.138,346,1.336,347,1.394,392,1.574,441,1.394,506,1.522,546,1.92,556,2.82,576,2.91,577,3.409,587,2.403,629,1.866,730,4.342,731,3.204,732,3.764,861,1.336,862,2.086,924,2.798,961,1.759,996,2.086,1018,1.962,1059,2.086,1195,2.62,1358,4.181,1388,4.816,1389,4.816,1390,2.62,1391,4.893,1392,4.181,1393,5.634,1394,6.159,1395,3.35,1396,3.35,1397,3.35,1398,3.35,1399,4.814,1400,4.814,1401,4.814,1402,4.814,1403,3.35,1404,3.35,1405,2.91,1406,3.35,1407,3.35,1408,2.91,1409,3.35,1410,3.35,1411,3.35,1412,4.181,1413,2.91,1414,2.91,1415,3.35,1416,3.35,1417,3.35,1418,3.35,1419,3.35,1420,2.91,1421,3.75,1422,3.35,1423,2.91,1424,3.35,1425,2.91,1426,2.91,1427,2.91,1428,3.35,1429,3.35,1430,3.35,1431,3.35,1432,3.35,1433,3.35,1434,3.35,1435,3.35,1436,3.35]],["title/modules/MapHeaderBoxModule.html",[419,0.956,1437,2.459]],["body/modules/MapHeaderBoxModule.html",[3,0.192,4,0.213,5,0.149,26,0.015,56,0.297,58,0.258,77,0.235,78,0.048,104,0.009,105,0.012,106,0.009,162,1.813,297,1.392,312,2.876,313,1.112,314,2.725,419,1.292,421,1.813,422,2.22,423,3.234,424,2.424,425,2.985,426,2.617,439,2.985,440,2.424,441,2.22,443,2.043,446,2.515,447,3.387,606,3.553,607,2.539,1313,3.827,1388,4.173,1389,4.173,1437,4.9,1438,4.635,1439,4.635,1440,4.635,1441,5.336]],["title/classes/NavigationSubscriber.html",[78,0.035,1314,2.833]],["body/classes/NavigationSubscriber.html",[3,0.157,4,0.175,5,0.122,7,0.392,8,1.031,9,1.095,20,0.875,23,0.914,25,1.073,26,0.015,27,0.914,28,0.548,29,0.914,32,0.719,56,0.287,58,0.211,68,0.875,77,0.255,78,0.052,79,1.298,80,0.662,104,0.008,105,0.01,106,0.008,107,0.991,115,1.139,116,3.199,118,1.182,119,1.274,120,1.543,122,1.543,131,2.417,133,3.132,137,3.795,140,1.23,161,2.292,168,2.906,177,1.819,189,2.815,191,2.382,192,2.584,210,1.543,310,2.343,332,1.964,384,1.484,392,2.118,395,3.199,405,3.034,463,4.312,488,1.25,511,2.077,520,1.323,580,2.118,583,1.484,761,3.281,872,2.042,873,1.605,1142,3.234,1286,3.414,1287,3.793,1288,3.793,1289,3.793,1290,3.793,1291,3.793,1293,3.793,1294,3.414,1297,3.793,1302,3.793,1308,4.146,1309,4.146,1310,5.99,1311,3.414,1312,3.132,1313,3.132,1314,4.146,1315,5.02,1316,3.793,1317,5.02,1318,3.793,1319,3.793,1320,5.02,1321,3.414,1322,3.793,1323,3.414,1324,3.793,1325,3.793,1442,4.367,1443,4.367,1444,4.367]],["title/components/NotFoundComponent.html",[107,0.677,316,1.342]],["body/components/NotFoundComponent.html",[3,0.134,4,0.149,5,0.104,7,0.335,9,0.832,20,1.198,23,0.821,26,0.015,27,0.945,28,0.493,33,2.03,56,0.149,58,0.18,77,0.165,78,0.033,87,1.46,104,0.007,105,0.009,106,0.007,107,1.025,108,1.318,109,2.072,110,1.552,111,1.552,112,1.552,113,1.552,117,1.268,118,2.18,119,2.307,120,1.835,122,1.835,124,1.124,130,2.951,156,1.049,157,0.87,163,1.268,179,3.197,191,1.372,192,1.488,193,1.775,194,2.257,195,2.917,197,1.958,198,4.286,204,3.5,205,2.483,206,3.726,207,2.483,217,2.676,228,3.457,229,2.676,234,2.917,235,2.676,236,2.676,257,2.676,270,2.483,276,2.065,292,2.483,297,0.973,298,2.072,299,2.161,300,0.938,301,2.688,302,1.552,303,1.552,304,1.318,305,2.072,306,2.161,307,1.318,308,2.197,309,1.552,310,1.268,311,1.552,312,1.318,313,0.777,314,2.473,315,1.552,316,2.196,317,1.552,318,1.22,319,1.372,320,1.552,321,1.318,322,1.268,323,1.268,324,1.552,325,1.318,326,1.552,327,1.268,328,1.13,329,2.161,330,1.268,331,2.058,332,1.268,333,1.552,334,1.22,335,1.372,336,1.318,337,1.22,338,1.268,339,1.552,340,1.552,341,1.22,342,1.552,343,1.22,344,1.552,345,1.268,346,1.488,347,1.552,506,1.695,523,2.843,533,3.76,537,3.977,730,2.483,924,3.343,955,2.596,1059,2.323,1165,3.241,1405,3.241,1421,2.483,1425,3.241,1426,4.512,1427,3.241,1445,4.286,1446,3.241,1447,5.976,1448,5.195,1449,5.976,1450,3.731,1451,6.462,1452,4.512,1453,3.731,1454,3.731,1455,3.241,1456,5.195,1457,4.512,1458,5.195,1459,5.195,1460,5.195,1461,4.512,1462,5.195,1463,5.195,1464,5.195,1465,3.731,1466,3.731,1467,3.731,1468,3.731,1469,3.731,1470,3.731,1471,3.731]],["title/modules/NotFoundModule.html",[419,0.956,1472,2.833]],["body/modules/NotFoundModule.html",[3,0.192,4,0.214,5,0.149,26,0.015,56,0.305,58,0.258,77,0.236,78,0.048,104,0.009,105,0.012,106,0.009,162,1.817,297,1.395,316,2.641,419,1.294,421,1.817,422,2.225,423,3.237,424,2.429,425,2.988,426,1.966,439,2.988,440,2.429,441,2.225,443,2.518,446,2.518,447,3.129,460,3.559,523,2.544,537,3.559,606,3.283,607,2.544,1445,3.835,1472,5.703,1473,4.644,1474,4.644,1475,4.644,1476,5.173,1477,5.347,1478,4.378,1479,4.644]],["title/modules/NotFoundRoutingModule.html",[419,0.956,1476,2.629]],["body/modules/NotFoundRoutingModule.html",[3,0.207,4,0.23,5,0.161,26,0.015,56,0.294,58,0.278,77,0.254,78,0.052,104,0.01,105,0.012,106,0.01,107,0.987,316,2.338,393,1.447,421,1.957,426,2.117,443,2.204,446,2.634,520,1.745,523,2.739,524,3.833,525,4.284,526,3.273,533,3.188,537,3.833,1445,4.13,1476,4.58,1479,5.002,1480,4.13,1481,4.13]],["title/components/RetryDialogComponent.html",[107,0.677,318,1.291]],["body/components/RetryDialogComponent.html",[3,0.136,4,0.152,5,0.106,7,0.341,8,0.938,9,1.029,20,0.761,23,1.029,25,0.704,26,0.014,27,1.029,28,0.572,29,0.6,32,0.625,33,1.289,43,1.194,56,0.21,58,0.183,77,0.232,78,0.047,87,1.477,104,0.007,105,0.009,106,0.007,107,1.034,108,1.341,109,2.096,110,1.579,111,1.579,112,1.579,113,1.579,117,1.289,118,2.184,119,2.313,120,1.857,122,1.857,124,1.137,130,2.283,140,0.938,145,2.525,162,1.289,163,1.289,185,3.272,191,1.395,192,1.513,193,1.805,270,2.525,297,0.99,298,2.096,299,2.186,300,0.953,301,2.708,302,1.579,303,1.579,304,1.341,305,2.096,306,2.186,307,1.341,308,1.395,309,1.579,310,1.289,311,1.579,312,1.341,313,0.79,314,1.452,315,1.579,316,1.289,317,1.579,318,2.128,319,2.717,320,1.579,321,1.341,322,1.289,323,1.289,324,1.579,325,1.341,326,1.579,327,1.289,328,1.149,329,2.186,330,1.289,331,1.149,332,1.289,333,1.579,334,1.24,335,1.395,336,1.341,337,1.24,338,1.289,339,1.579,340,1.579,341,1.24,342,1.579,343,1.24,344,1.579,345,1.289,346,1.513,347,1.579,350,1.452,398,2.362,658,2.513,1482,4.902,1483,4.902,1484,2.967,1485,4.449,1486,5.237,1487,4.564,1488,5.089,1489,5.653,1490,3.794,1491,5.344,1492,4.902,1493,3.794,1494,3.794,1495,4.564,1496,3.794,1497,3.794,1498,3.295,1499,3.295,1500,4.324,1501,3.295,1502,3.295,1503,5.255,1504,5.255,1505,4.564,1506,5.255,1507,5.255,1508,3.794,1509,5.255,1510,5.653,1511,5.255,1512,5.255,1513,5.255,1514,5.255,1515,5.255,1516,3.794,1517,3.794,1518,3.794]],["title/classes/RetryDialogData.html",[78,0.035,1492,2.833]],["body/classes/RetryDialogData.html",[3,0.193,4,0.215,5,0.15,7,0.482,9,0.918,23,1.042,26,0.015,28,0.625,29,1.177,33,2.241,43,2.075,56,0.264,58,0.26,77,0.291,78,0.059,104,0.009,105,0.012,106,0.009,107,1.131,118,1.453,119,1.566,120,1.897,122,1.897,124,1.427,140,0.958,162,1.824,318,1.755,319,2.624,398,4.444,511,2.554,658,1.974,1482,5.12,1483,5.12,1484,4.197,1485,3.144,1486,4.662,1487,4.662,1488,4.197,1489,4.662,1491,5.156,1492,5.12,1495,4.662,1498,4.662,1499,4.662,1500,5.12,1501,4.662,1502,4.662,1519,5.368,1520,5.368]],["title/modules/RetryDialogModule.html",[419,0.956,1521,2.629]],["body/modules/RetryDialogModule.html",[3,0.188,4,0.21,5,0.146,26,0.015,56,0.295,58,0.253,77,0.231,78,0.047,104,0.009,105,0.011,106,0.009,162,1.781,297,1.367,318,2.674,319,1.927,419,1.269,421,1.781,422,2.181,423,3.208,424,2.381,425,2.952,426,2.597,439,2.952,440,2.381,441,2.181,443,2.007,446,2.488,447,3.36,606,3.525,607,2.494,1382,5.066,1482,3.76,1483,3.76,1521,5.219,1522,4.553,1523,4.553,1524,4.553,1525,5.243,1526,6.499,1527,6.134,1528,5.243]],["title/components/RouteListComponent.html",[107,0.677,321,1.396]],["body/components/RouteListComponent.html",[3,0.126,4,0.14,5,0.098,7,0.315,8,0.887,9,0.96,23,1.09,25,0.922,26,0.015,27,1.049,28,0.596,29,0.786,32,0.818,56,0.14,58,0.169,77,0.155,78,0.031,80,0.953,87,2.071,104,0.006,105,0.009,106,0.006,107,0.99,108,1.238,109,1.982,110,1.457,111,1.457,112,1.457,113,1.457,117,1.19,118,2.165,119,2.288,120,1.756,122,1.756,124,1.075,134,1.688,140,0.625,156,0.984,157,0.817,163,1.19,177,1.102,179,3.08,191,1.288,192,1.397,193,1.666,194,1.522,200,3.042,205,3.844,216,2.608,263,0.848,266,2.751,276,1.939,287,3.564,297,0.914,298,1.982,299,2.067,300,0.88,301,2.615,302,1.457,303,1.457,304,1.238,305,1.982,306,2.067,307,1.238,308,2.663,309,1.457,310,1.19,311,1.457,312,1.238,313,0.73,314,1.341,315,1.457,316,1.19,317,1.457,318,1.145,319,1.288,320,1.457,321,2.221,322,1.19,323,1.19,324,1.457,325,1.238,326,1.457,327,1.19,328,1.061,329,2.067,330,1.19,331,1.061,332,1.19,333,1.457,334,1.145,335,1.288,336,1.238,337,1.145,338,1.19,339,1.457,340,1.457,341,1.145,342,1.457,343,1.145,344,1.457,345,1.19,346,1.397,347,1.457,481,4.142,488,1.114,526,3.554,556,2.911,562,2.608,577,1.939,583,1.19,611,2.739,612,5.016,613,4.316,614,5.016,616,3.042,628,5.016,630,3.042,632,4.316,633,3.885,636,4.316,637,2.739,638,2.739,640,3.042,643,3.094,650,3.885,658,2.123,709,2.512,710,2.739,711,2.739,712,2.512,1359,3.885,1529,6.157,1530,5.775,1531,4.969,1532,4.316,1533,3.503,1534,3.503,1535,3.503,1536,3.503,1537,3.503,1538,3.503,1539,3.503,1540,3.503,1541,4.969,1542,4.316,1543,4.316,1544,4.969,1545,4.969,1546,4.316,1547,4.969,1548,3.503,1549,4.969,1550,3.503,1551,3.503,1552,3.503,1553,3.503,1554,3.042,1555,3.503]],["title/components/RouteLoadingIndicatorComponent.html",[107,0.677,322,1.342]],["body/components/RouteLoadingIndicatorComponent.html",[3,0.126,4,0.141,5,0.098,7,0.316,8,0.889,9,1.027,20,0.705,23,1.051,25,0.653,26,0.015,27,0.995,28,0.473,29,0.556,32,0.821,56,0.231,58,0.17,68,0.705,77,0.22,78,0.045,79,1.119,87,2.073,104,0.006,105,0.009,106,0.006,107,0.992,108,1.243,109,1.988,110,1.463,111,1.463,112,1.463,113,1.463,115,1.3,116,3.203,117,1.195,118,2.166,119,2.289,120,1.761,122,1.761,124,1.078,131,3.485,140,1.186,156,0.988,157,1.55,163,1.195,179,2.165,189,2.998,191,1.293,192,1.403,193,1.673,194,1.528,216,1.846,235,2.522,236,2.522,257,2.522,292,2.341,297,0.917,298,1.988,299,2.073,300,0.884,301,2.619,302,1.463,303,1.463,304,1.243,305,1.988,306,2.073,307,1.243,308,1.293,309,1.463,310,1.195,311,1.463,312,1.243,313,0.732,314,1.346,315,1.463,316,1.195,317,1.463,318,1.15,319,1.293,320,1.463,321,1.243,322,2.258,323,2.679,324,1.463,325,1.243,326,1.463,327,1.195,328,1.065,329,2.073,330,1.195,331,1.065,332,1.195,333,1.463,334,1.15,335,1.293,336,1.243,337,1.15,338,1.195,339,1.463,340,1.463,341,1.15,342,1.463,343,1.15,344,1.463,345,1.195,346,1.403,347,1.463,384,1.693,392,1.892,395,3.485,488,1.117,520,1.065,550,2.128,555,2.314,573,2.439,580,1.629,697,2.75,699,4.923,761,2.37,872,1.243,873,1.293,944,1.597,971,2.06,1142,3.445,1308,3.574,1309,3.574,1345,3.896,1556,5.396,1557,2.75,1558,5.026,1559,4.328,1560,3.517,1561,4.983,1562,3.517,1563,3.517,1564,3.517,1565,4.328,1566,4.328,1567,2.522,1568,3.054,1569,4.328,1570,4.328,1571,4.328,1572,3.054,1573,3.054,1574,3.054,1575,3.054,1576,4.983,1577,4.983]],["title/classes/RouteLoadingSubscriber.html",[78,0.035,1567,2.833]],["body/classes/RouteLoadingSubscriber.html",[3,0.164,4,0.183,5,0.128,7,0.411,8,1.063,9,0.923,20,0.917,23,0.942,25,1.106,26,0.015,27,0.942,28,0.565,29,0.942,32,0.753,56,0.265,58,0.221,68,0.917,77,0.263,78,0.053,79,1.339,87,1.863,104,0.008,105,0.011,106,0.008,107,1.022,115,1.193,116,3.299,118,1.238,119,1.335,120,1.616,122,1.616,131,2.532,140,1.253,157,1.698,189,2.88,322,2.386,323,2.584,384,2.025,392,1.948,395,3.887,405,3.128,488,0.883,511,2.176,520,1.386,550,2.191,555,1.682,573,2.342,580,2.167,697,3.577,699,5.491,761,3.341,872,2.106,873,1.682,944,2.078,971,3.491,1142,3.308,1308,4.274,1309,4.274,1345,3.577,1556,5.183,1557,3.577,1558,3.973,1559,3.973,1565,5.176,1566,5.176,1567,4.274,1568,5.176,1569,5.176,1570,5.176,1571,5.176,1572,3.973,1573,3.973,1574,3.973,1575,3.973,1578,4.575,1579,4.575,1580,4.575,1581,3.577]],["title/classes/RoutesSubscriber.html",[78,0.035,871,2.833]],["body/classes/RoutesSubscriber.html",[1,2.116,3,0.125,4,0.139,5,0.097,7,0.313,8,0.883,9,1.051,20,0.698,23,0.782,25,0.918,26,0.015,27,0.782,28,0.33,29,0.782,32,0.573,56,0.298,58,0.168,63,3.583,65,1.095,66,1.054,67,1.095,68,0.698,74,2.167,77,0.218,78,0.044,79,0.782,80,0.75,94,3.807,104,0.006,105,0.009,106,0.006,115,0.908,118,0.942,130,1.512,140,1.118,197,1.827,210,1.23,263,0.843,300,1.243,313,1.03,341,2.049,384,1.183,392,1.617,393,1.728,395,1.926,405,2.596,436,2.304,438,2.499,470,1.656,488,1.277,499,1.443,506,1.581,511,1.656,526,1.656,533,1.926,546,1.973,550,1.818,555,1.279,570,2.469,573,1.748,577,1.926,580,1.881,581,3.868,582,1.279,583,1.183,629,1.054,731,2.316,756,2.247,825,3.02,826,4.499,827,4.127,828,2.167,829,2.149,830,3.023,831,3.023,832,2.316,833,3.023,834,3.023,835,2.496,836,1.581,838,2.167,839,2.469,840,2.469,847,3.023,849,3.023,850,3.023,852,2.469,855,2.167,860,1.581,861,1.388,862,2.167,863,3.023,864,2.167,865,2.721,866,3.023,867,1.737,868,1.737,869,2.247,870,2.721,871,3.548,872,2.033,873,1.279,874,4.296,875,3.023,876,2.316,877,2.721,878,3.023,879,3.023,880,3.023,881,3.023,882,3.023,883,3.023,884,3.023,885,3.023,886,3.023,887,3.023,888,3.023,889,1.926,890,3.023,891,1.926,892,3.023,893,3.023,894,3.023,895,3.023,896,2.316,897,2.496,898,2.721,899,2.721,900,2.721,901,2.721,902,2.721,903,1.926,904,2.496,905,2.721,906,2.721,907,2.721,908,3.023,909,4.296,910,2.721,911,3.292,912,2.721,913,2.721,914,3.548,915,2.316,916,3.023,917,3.023,918,2.316,919,2.721,920,2.316,921,2.721,922,3.868,923,2.316,924,1.581,925,1.926,926,2.721,927,2.316,928,3.023,929,2.496,930,2.721,931,2.316,932,2.316,933,2.316,934,2.316,935,2.721,936,2.316,937,2.316,938,2.167,939,3.023,940,3.023,941,2.496,942,3.023,943,3.023,944,1.581,945,3.023,946,2.316,947,3.023,1582,3.48,1583,3.48,1584,3.023]],["title/classes/SettingsLoadSubscriber.html",[78,0.035,1585,2.833]],["body/classes/SettingsLoadSubscriber.html",[0,1.757,1,2.321,3,0.149,4,0.166,5,0.116,7,0.372,8,0.996,9,1.093,20,0.831,23,0.998,25,1.036,26,0.015,27,0.883,28,0.529,29,0.883,32,0.919,37,1.757,43,1.304,56,0.29,58,0.2,59,5.512,65,1.304,66,1.256,67,1.304,68,0.831,75,2.176,76,2.069,77,0.246,78,0.05,79,1.254,80,1.159,94,3.09,104,0.007,105,0.01,106,0.007,140,1.41,157,0.967,263,1.003,313,0.863,350,2.137,404,3.241,405,2.176,406,3.241,407,3.241,436,1.524,473,2.973,488,0.8,499,1.842,511,1.972,517,2.759,518,2.973,580,2.064,582,1.524,629,1.256,860,1.883,861,1.653,872,1.972,873,1.524,944,1.883,976,2.176,1052,1.972,1233,2.973,1243,2.58,1585,4.004,1586,3.241,1587,4.844,1588,4.145,1589,5.482,1590,4.145,1591,3.09,1592,4.145,1593,4.004,1594,4.145,1595,4.004,1596,3.6,1597,2.973,1598,4.848,1599,3.6,1600,3.6,1601,4.848,1602,3.6,1603,3.6,1604,4.848,1605,3.6,1606,4.848,1607,3.6,1608,3.6,1609,3.6,1610,4.848,1611,3.6,1612,3.6,1613,3.6,1614,3.6,1615,3.6,1616,3.241,1617,3.6]],["title/injectables/SettingsService.html",[0,1.243,436,1.452]],["body/injectables/SettingsService.html",[0,1.721,1,2.646,2,2.226,3,0.144,4,0.161,5,0.112,7,0.361,8,0.976,9,1.095,13,3.492,20,0.806,23,1.138,25,0.746,26,0.015,27,0.636,28,0.519,29,0.636,32,1.024,37,1.721,43,1.721,56,0.288,58,0.194,59,5.627,65,1.265,66,1.218,67,1.265,68,0.806,75,2.111,76,2.007,77,0.241,78,0.049,79,1.229,80,1.152,94,3.027,104,0.007,105,0.01,106,0.007,124,1.183,134,1.858,140,1.355,156,1.13,157,1.276,263,0.973,313,0.838,404,3.144,405,2.111,406,3.144,407,3.144,436,2.011,473,3.922,488,1.199,499,1.813,517,4.439,580,1.788,582,1.478,629,1.657,860,1.827,861,1.604,872,1.421,873,1.478,944,1.827,976,3.262,1052,1.913,1233,2.884,1243,2.503,1585,2.884,1586,3.144,1587,2.884,1589,4.75,1591,2.226,1593,2.884,1595,2.884,1596,3.492,1597,2.884,1598,4.75,1599,3.492,1600,5.398,1601,4.75,1602,5.793,1603,4.75,1604,4.75,1605,3.492,1606,4.75,1607,3.492,1608,3.492,1609,5.793,1610,4.75,1611,3.492,1612,3.492,1613,3.492,1614,3.492,1615,3.492,1616,3.144,1617,3.492,1618,4.021,1619,5.469,1620,4.021,1621,4.021,1622,4.021,1623,4.021]],["title/components/SidebarComponent.html",[107,0.677,325,1.396]],["body/components/SidebarComponent.html",[3,0.238,4,0.14,5,0.097,7,0.314,8,0.885,9,0.986,20,0.7,23,0.992,25,0.648,26,0.015,27,0.992,28,0.331,29,0.552,32,1.092,33,2.133,56,0.231,58,0.279,69,2.325,77,0.154,78,0.031,79,0.785,80,0.752,87,1.394,104,0.006,105,0.009,106,0.006,107,0.989,108,1.234,109,1.978,110,1.454,111,1.454,112,1.454,113,1.454,117,1.187,118,2.165,119,2.308,120,1.753,122,1.753,134,1.685,136,2.732,137,4.034,140,0.885,163,1.187,173,3.034,179,3.422,184,4.308,185,3.088,191,1.284,192,1.394,193,1.662,216,1.834,217,2.506,297,0.911,298,1.978,299,2.064,300,0.878,301,2.612,302,1.454,303,1.454,304,1.234,305,1.978,306,2.064,307,1.234,308,2.707,309,1.454,310,1.187,311,1.454,312,1.234,313,0.728,314,1.337,315,1.454,316,1.187,317,1.454,318,1.142,319,1.284,320,1.454,321,1.234,322,1.187,323,1.187,324,1.454,325,2.218,326,1.454,327,1.187,328,1.058,329,2.064,330,1.187,331,1.058,332,1.187,333,1.454,334,1.142,335,1.284,336,1.234,337,1.142,338,1.187,339,1.454,340,1.454,341,1.142,342,1.454,343,1.142,344,1.454,345,1.187,346,1.394,347,1.454,376,3.557,499,1.447,523,2.36,643,4.288,924,2.851,953,5.028,954,4.755,1079,2.506,1311,2.732,1359,3.878,1360,3.034,1461,5.981,1510,4.308,1543,4.308,1546,5.981,1624,3.034,1625,5.767,1626,4.96,1627,5.452,1628,6.629,1629,3.494,1630,3.494,1631,2.506,1632,3.494,1633,4.308,1634,4.509,1635,3.494,1636,3.494,1637,3.494,1638,3.494,1639,4.96,1640,4.96,1641,4.96,1642,4.96,1643,5.981,1644,4.96,1645,4.96,1646,3.878,1647,3.034,1648,3.034,1649,3.034,1650,3.494]],["title/modules/SidebarModule.html",[419,0.956,435,2.459]],["body/modules/SidebarModule.html",[3,0.19,4,0.212,5,0.148,26,0.015,56,0.296,58,0.256,77,0.234,78,0.048,104,0.009,105,0.012,106,0.009,162,1.802,297,1.384,325,2.874,419,1.284,421,1.802,422,2.207,423,3.225,424,2.41,425,2.974,426,2.61,435,4.894,439,2.974,440,2.41,441,2.207,443,2.031,446,2.506,447,3.378,606,3.544,607,2.524,1382,5.093,1383,6.167,1478,4.726,1651,4.607,1652,4.607,1653,4.607,1654,5.305,1655,5.305]],["title/injectables/SidebarService.html",[0,1.243,137,2.313]],["body/injectables/SidebarService.html",[0,1.94,2,2.668,3,0.173,4,0.193,5,0.135,7,0.433,8,1.1,9,1.132,20,1.362,23,1.217,26,0.015,28,0.585,32,1.119,37,2.138,56,0.246,58,0.233,68,0.966,75,2.53,76,2.406,77,0.213,78,0.043,80,0.731,104,0.009,105,0.011,106,0.009,124,1.334,133,5.137,134,2.094,137,3.611,140,1.351,156,1.732,157,1.438,177,1.517,488,1.311,499,1.798,570,3.392,955,2.952,1627,6.221,1656,4.186,1657,6.796,1658,6.796,1659,5.6,1660,6.796,1661,6.164,1662,4.82,1663,4.82,1664,4.82,1665,6.164,1666,6.164,1667,4.82,1668,4.82,1669,4.82,1670,4.82,1671,4.82,1672,4.82,1673,4.82]],["title/components/StopInfoComponent.html",[107,0.677,327,1.342]],["body/components/StopInfoComponent.html",[1,2.193,3,0.153,4,0.085,5,0.059,7,0.191,8,0.607,9,1.07,15,1.843,20,0.425,23,1.147,25,0.789,26,0.015,27,0.898,28,0.622,29,0.672,32,0.801,33,1.93,37,1.877,43,2.064,56,0.238,58,0.103,62,4.848,65,0.668,66,0.643,67,0.668,68,0.425,77,0.094,78,0.019,79,0.477,80,1.016,87,1.596,104,0.004,105,0.006,106,0.004,107,0.729,108,0.75,109,1.356,110,0.883,111,0.883,112,0.883,113,0.883,115,0.887,117,0.721,118,2.022,119,2.192,120,1.201,122,1.201,124,0.736,134,1.155,140,1.014,156,1.596,157,1.325,163,0.721,179,2.468,188,1.412,191,0.78,192,0.846,198,2.439,204,1.243,210,0.75,211,1.412,215,2.658,263,1.289,276,1.175,287,3.051,291,2.953,293,1.522,297,0.553,298,1.356,299,1.415,300,0.533,301,2.024,302,0.883,303,0.883,304,0.75,305,1.94,306,1.415,307,0.75,308,0.78,309,0.883,310,0.721,311,0.883,312,0.75,313,1.013,314,2.284,315,0.883,316,0.721,317,0.883,318,0.694,319,1.564,320,0.883,321,0.75,322,0.721,323,0.721,324,0.883,325,0.75,326,0.883,327,1.653,328,2.03,329,1.415,330,0.721,331,0.643,332,0.721,333,0.883,334,0.694,335,0.78,336,0.75,337,0.694,338,0.721,339,0.883,340,0.883,341,0.694,342,0.883,343,0.694,344,0.883,345,0.721,346,0.846,347,0.883,350,1.301,352,0.883,384,0.721,392,1.391,393,1.222,402,2.439,410,1.544,437,2.428,468,1.412,488,1.4,520,0.643,526,2.024,546,1.356,550,1.564,554,3.326,555,1.788,562,3.132,573,1.881,578,1.522,579,2.831,582,0.78,589,1.659,591,2.953,594,3.695,597,2.953,598,1.659,629,1.613,643,1.321,650,2.658,658,2.279,709,1.522,710,1.659,711,1.659,712,1.522,730,2.263,783,2.658,829,1.848,836,2.21,862,1.321,938,1.321,955,2.468,1050,3.489,1052,1.009,1054,1.243,1056,1.175,1079,1.522,1088,3.489,1123,1.659,1151,3.051,1169,2.947,1243,1.321,1412,1.843,1414,1.843,1421,2.263,1455,3.695,1505,3.695,1532,2.953,1554,2.953,1616,1.659,1674,4.87,1675,1.659,1676,3.695,1677,2.953,1678,4.254,1679,4.254,1680,4.254,1681,4.254,1682,3.695,1683,4.254,1684,4.254,1685,3.4,1686,4.254,1687,3.804,1688,3.695,1689,1.843,1690,2.122,1691,2.122,1692,3.4,1693,3.4,1694,3.4,1695,3.4,1696,2.122,1697,2.122,1698,3.4,1699,2.122,1700,2.122,1701,2.122,1702,2.122,1703,3.4,1704,3.4,1705,4.865,1706,2.122,1707,2.122,1708,2.122,1709,2.953,1710,2.122,1711,4.254,1712,3.4,1713,2.953,1714,2.122,1715,2.122,1716,2.122,1717,2.122,1718,2.122,1719,2.122,1720,2.122,1721,2.122,1722,1.412,1723,4.254,1724,2.122,1725,4.254,1726,2.122,1727,3.4,1728,2.122,1729,2.122,1730,2.122,1731,2.122,1732,3.4,1733,2.122,1734,2.122,1735,4.254,1736,2.122,1737,1.843,1738,3.4,1739,2.122,1740,2.122,1741,2.122,1742,2.122,1743,2.122,1744,2.122,1745,2.122,1746,2.122,1747,2.122,1748,2.122,1749,2.122,1750,2.122,1751,2.122,1752,2.122,1753,2.122,1754,2.122,1755,2.122,1756,2.122,1757,2.122,1758,3.4,1759,3.4,1760,3.4,1761,3.4,1762,4.865,1763,2.122,1764,4.254,1765,3.4,1766,3.4,1767,4.865,1768,4.865,1769,3.4,1770,3.4,1771,3.4,1772,2.122,1773,2.953,1774,3.4,1775,2.122,1776,1.843,1777,2.122,1778,2.122,1779,2.122,1780,2.953,1781,2.122,1782,2.122,1783,2.122,1784,2.122]],["title/guards/StopInfoResolver.html",[1785,2.833,1786,2.629]],["body/guards/StopInfoResolver.html",[0,1.799,1,2.623,3,0.154,4,0.172,5,0.12,7,0.386,8,1.02,9,0.994,20,1.289,23,0.904,25,1.061,26,0.015,27,0.904,28,0.542,29,0.904,32,0.708,37,2.023,56,0.299,57,2.675,58,0.208,62,3.36,65,1.352,66,2.076,67,1.352,68,0.862,77,0.19,78,0.039,79,0.965,80,0.867,87,2.062,104,0.008,105,0.01,106,0.008,115,1.121,189,3.345,328,2.076,331,1.733,352,2.674,363,3.806,410,3.333,411,4.967,488,0.829,520,1.302,521,3.806,582,1.58,620,3.806,652,4.102,1052,2.044,1056,2.378,1062,4.002,1105,2.86,1591,3.793,1633,4.967,1674,4.278,1687,5.358,1786,3.806,1787,3.082,1788,3.732,1789,5.952,1790,6.853,1791,5.719,1792,5.719,1793,5.719,1794,3.082,1795,4.297,1796,4.472,1797,5.358,1798,5.358,1799,5.358,1800,4.297,1801,5.719,1802,4.967,1803,5.719,1804,3.732,1805,4.297,1806,3.36,1807,4.297]],["title/directives/StopLocationMapDirective.html",[300,0.993,345,1.342]],["body/directives/StopLocationMapDirective.html",[3,0.124,4,0.138,5,0.096,7,0.309,8,0.876,9,1.037,20,0.691,23,1.16,25,0.911,26,0.015,27,0.776,28,0.592,29,0.776,32,1.027,37,1.545,56,0.288,58,0.167,65,1.084,66,1.044,67,1.084,68,0.691,74,2.145,77,0.152,78,0.031,80,0.522,94,3.452,104,0.006,105,0.009,106,0.006,115,1.281,117,1.17,118,1.329,124,1.062,130,1.496,134,1.668,140,1.223,156,1.38,157,1.145,197,1.808,300,1.567,313,1.023,337,1.126,345,1.668,346,1.959,352,1.433,384,1.17,392,1.605,393,1.234,395,1.907,436,2.651,438,2.877,470,1.639,488,1.416,499,1.669,546,2.63,550,2.104,554,4.474,555,2.293,556,2.876,570,2.856,573,2.022,577,1.907,583,1.17,589,4.474,598,2.693,629,1.488,756,2.833,828,2.145,829,2.486,832,3.808,836,2.833,838,3.057,839,3.113,840,3.113,841,4.265,842,1.907,843,2.992,852,2.856,855,3.057,860,1.565,861,1.374,865,2.693,867,1.719,868,1.719,869,2.23,870,2.693,872,1.217,876,2.293,877,2.693,896,2.293,898,2.693,899,2.693,900,2.693,901,2.693,902,2.693,903,1.907,904,2.471,905,2.693,906,2.693,907,2.693,910,2.693,911,3.268,912,2.693,913,2.693,919,2.693,920,2.293,921,2.693,922,3.839,923,2.293,924,1.565,925,1.907,926,2.693,927,2.293,930,2.693,931,2.293,932,2.293,933,2.293,934,2.293,935,2.693,936,2.293,937,2.293,946,2.293,1064,3.839,1088,3.522,1169,2.718,1171,3.268,1584,2.992,1674,4.955,1682,4.265,1808,5.722,1809,6.237,1810,3.445,1811,3.445,1812,4.265,1813,3.445,1814,3.445,1815,3.445,1816,3.445,1817,3.445,1818,3.445,1819,3.445,1820,3.445,1821,3.445,1822,4.265,1823,2.992]],["title/modules/StopModule.html",[419,0.956,1824,2.833]],["body/modules/StopModule.html",[3,0.165,4,0.184,5,0.128,26,0.015,56,0.317,58,0.222,77,0.203,78,0.041,87,1.292,104,0.008,105,0.011,106,0.008,162,1.562,297,1.199,304,2.642,305,2.385,307,2.642,308,1.69,321,2.642,327,2.54,328,2.132,345,2.54,419,1.113,421,1.562,422,1.913,423,3.018,424,2.089,425,2.716,426,1.69,439,2.716,440,2.089,441,1.913,443,2.289,446,2.289,447,2.844,460,3.06,606,2.984,607,2.187,1285,3.595,1385,4.288,1437,4.655,1478,3.98,1786,3.98,1824,5.851,1825,3.993,1826,3.993,1827,3.993,1828,4.976,1829,4.598,1830,4.675,1831,5.979,1832,3.993,1833,4.598,1834,5.979,1835,3.298,1836,3.993]],["title/classes/StopPointLoadSubscriber.html",[78,0.035,1837,2.833]],["body/classes/StopPointLoadSubscriber.html",[0,1.751,1,2.046,3,0.148,4,0.165,5,0.115,7,0.37,8,0.993,9,1.115,20,0.827,23,1.066,25,1.169,26,0.015,27,0.996,28,0.597,29,0.996,32,1.037,33,1.402,37,1.751,56,0.281,58,0.199,65,1.298,66,1.686,67,1.298,68,0.827,75,2.166,76,2.059,77,0.246,78,0.05,79,1.25,80,1.1,104,0.007,105,0.01,106,0.007,140,1.322,177,1.298,263,0.999,313,0.859,328,1.686,331,1.686,350,2.13,375,4.351,393,1.037,405,2.921,437,3.365,488,1.215,499,1.204,511,1.963,570,3.143,573,1.966,580,2.059,582,1.517,583,1.402,593,3.226,629,1.25,872,1.966,873,1.517,944,1.874,1169,4.103,1587,4.835,1593,3.991,1595,2.959,1597,2.959,1722,4.685,1837,3.991,1838,3.226,1839,4.126,1840,4.126,1841,4.126,1842,4.126,1843,4.833,1844,4.126,1845,3.583,1846,3.583,1847,3.583,1848,3.583,1849,4.833,1850,3.583,1851,3.583,1852,3.583,1853,3.583,1854,3.583,1855,3.583,1856,3.583,1857,3.583,1858,3.583,1859,3.583,1860,3.583,1861,3.583,1862,3.583,1863,3.583,1864,3.583,1865,3.583,1866,3.583,1867,3.583,1868,3.583]],["title/injectables/StopPointService.html",[0,1.243,437,1.971]],["body/injectables/StopPointService.html",[0,1.678,1,2.415,2,2.146,3,0.139,4,0.155,5,0.108,7,0.348,8,0.952,9,1.073,20,0.777,23,1.192,25,1.132,26,0.015,27,0.964,28,0.653,29,0.964,32,1.004,33,2.072,37,1.678,56,0.275,58,0.187,65,1.22,66,1.847,67,1.22,68,0.777,75,2.035,76,1.935,77,0.235,78,0.048,79,1.198,80,1.079,104,0.007,105,0.009,106,0.007,124,1.154,134,1.812,140,1.27,156,1.089,157,0.904,177,1.22,263,0.938,313,0.807,328,1.616,331,1.174,375,3.031,393,0.974,437,3.044,488,1.454,499,1.556,570,3.438,573,2.155,580,1.744,582,1.425,583,1.317,593,3.031,629,1.174,872,1.37,873,1.425,944,1.761,1169,3.94,1587,2.78,1593,2.78,1597,2.78,1722,5.077,1794,2.78,1837,2.78,1838,3.031,1843,3.367,1845,3.367,1846,5.296,1847,5.296,1848,5.705,1849,4.632,1850,3.367,1851,3.367,1852,3.367,1853,5.296,1854,3.367,1855,3.367,1856,3.367,1857,4.632,1858,4.632,1859,3.367,1860,3.367,1861,4.632,1862,5.296,1863,3.367,1864,5.296,1865,3.367,1866,3.367,1867,3.367,1868,3.367,1869,5.334,1870,5.334,1871,3.876,1872,3.876,1873,3.876,1874,3.876,1875,3.876,1876,3.876,1877,3.876,1878,3.876,1879,3.876,1880,3.876,1881,3.876]],["title/modules/StopRoutingModule.html",[419,0.956,1828,2.629]],["body/modules/StopRoutingModule.html",[3,0.2,4,0.223,5,0.156,26,0.015,56,0.302,58,0.27,77,0.246,78,0.05,104,0.01,105,0.012,106,0.01,107,0.957,327,2.294,328,2.045,384,1.896,393,1.402,421,1.896,426,2.051,443,2.136,446,2.584,520,1.69,524,3.714,525,4.203,526,3.212,533,3.088,658,2.051,1480,4.002,1481,4.002,1591,3.088,1659,4.363,1674,3.714,1687,4.363,1688,4.846,1786,4.494,1828,4.494,1835,4.002,1836,4.846]],["title/components/StopsInfoComponent.html",[107,0.677,330,1.342]],["body/components/StopsInfoComponent.html",[3,0.205,4,0.137,5,0.096,7,0.513,8,0.874,9,0.867,20,0.688,23,0.984,25,0.909,26,0.015,27,1.041,28,0.542,29,0.774,32,0.94,43,1.797,56,0.249,58,0.166,65,1.08,66,1.04,67,1.08,77,0.151,78,0.031,79,0.771,80,0.866,87,1.376,104,0.006,105,0.009,106,0.006,107,0.979,108,1.212,109,1.953,110,1.428,111,1.428,112,1.428,113,1.428,117,1.166,118,2.161,119,2.281,120,1.73,122,1.73,124,1.059,134,1.664,156,0.964,157,0.8,163,1.166,177,1.541,179,3.231,188,2.284,191,1.262,192,1.369,196,2.461,201,2.683,202,4.253,203,2.98,204,2.01,208,2.98,210,1.73,211,2.284,228,4.144,233,2.98,263,0.831,266,2.711,274,2.683,275,2.683,276,1.899,297,0.895,298,1.953,299,2.037,300,0.862,301,2.59,302,1.428,303,1.428,304,1.212,305,1.953,306,2.037,307,1.212,308,2.517,309,1.428,310,1.166,311,1.428,312,1.212,313,0.715,314,1.313,315,1.428,316,1.166,317,1.428,318,1.122,319,1.262,320,1.428,321,1.212,322,1.166,323,1.166,324,1.428,325,1.212,326,1.428,327,1.166,328,1.04,329,2.037,330,2.116,331,2.34,332,1.166,333,1.428,334,1.122,335,1.262,336,1.212,337,1.122,338,1.166,339,1.428,340,1.428,341,1.122,342,1.428,343,1.122,344,1.428,345,1.166,346,1.369,347,1.428,376,2.461,393,0.862,488,1.102,520,1.04,643,3.049,783,2.683,924,2.224,1007,2.136,1050,4.91,1169,3.789,1452,4.253,1542,4.253,1675,2.683,1676,4.959,1677,4.253,1780,4.253,1882,5.148,1883,5.71,1884,4.897,1885,3.431,1886,4.897,1887,4.897,1888,3.431,1889,6.226,1890,3.431,1891,3.431,1892,4.897,1893,4.897,1894,3.431,1895,3.431,1896,4.897,1897,3.431,1898,3.431,1899,3.431,1900,4.897,1901,4.897,1902,4.897,1903,4.897,1904,4.897,1905,4.897,1906,3.431,1907,4.897,1908,4.897,1909,4.897,1910,4.897,1911,4.897,1912,3.431,1913,3.431]],["title/modules/StopsModule.html",[419,0.956,1914,2.833]],["body/modules/StopsModule.html",[3,0.178,4,0.198,5,0.138,26,0.015,56,0.31,58,0.24,77,0.219,78,0.045,104,0.009,105,0.011,106,0.009,162,1.686,297,1.294,330,2.592,331,2.193,352,2.065,419,1.668,421,1.686,422,2.065,423,3.129,424,2.254,425,2.852,426,1.824,439,2.852,440,2.254,441,2.065,443,2.404,446,2.404,447,2.987,448,4.504,460,3.303,606,3.134,607,2.361,1057,4.504,1385,4.504,1478,4.179,1485,2.907,1521,5.077,1527,5.454,1830,4.91,1835,3.559,1914,5.717,1915,4.31,1916,4.31,1917,4.31,1918,5.077,1919,4.962,1920,6.279,1921,4.31,1922,4.179,1923,4.31]],["title/guards/StopsResolver.html",[1785,2.833,1922,2.629]],["body/guards/StopsResolver.html",[0,1.747,1,2.585,3,0.148,4,0.164,5,0.115,7,0.369,8,0.991,9,0.979,14,3.572,20,1.261,23,0.878,25,1.031,26,0.015,27,0.878,28,0.527,29,0.878,32,0.915,37,2.28,56,0.308,57,2.561,58,0.199,61,3.572,65,1.294,66,2.04,67,1.294,68,0.825,77,0.181,78,0.037,79,0.924,80,1.021,87,1.561,104,0.007,105,0.01,106,0.007,115,1.073,162,1.398,189,3.316,318,1.345,352,2.616,363,4.185,372,5.847,398,2.561,410,2.856,488,1.071,520,1.246,521,3.696,523,1.957,582,1.512,629,1.246,658,1.512,1052,1.957,1056,2.277,1062,2.561,1105,2.738,1485,3.943,1500,2.95,1591,3.727,1787,2.95,1789,5.847,1794,2.95,1796,4.342,1797,5.264,1798,5.665,1799,5.264,1802,4.823,1804,3.572,1806,3.216,1921,3.572,1922,3.696,1924,3.572,1925,5.554,1926,5.554,1927,6.733,1928,4.113,1929,4.113,1930,5.554,1931,5.554,1932,5.554,1933,4.113,1934,4.113,1935,3.216,1936,2.95,1937,4.113,1938,4.113,1939,4.113,1940,4.113,1941,4.113,1942,4.113,1943,5.554,1944,3.572]],["title/modules/StopsRoutingModule.html",[419,0.956,1918,2.629]],["body/modules/StopsRoutingModule.html",[3,0.203,4,0.226,5,0.158,26,0.015,56,0.303,58,0.273,77,0.249,78,0.051,104,0.01,105,0.012,106,0.01,107,0.969,330,2.311,331,2.061,393,1.42,421,1.92,426,2.077,443,2.163,446,2.604,520,1.712,524,3.76,525,4.235,526,3.236,533,3.127,1480,4.052,1481,4.052,1591,3.127,1835,4.052,1882,4.418,1918,4.528,1922,4.528,1923,4.907]],["title/components/ToolbarSearchBoxComponent.html",[107,0.677,332,1.342]],["body/components/ToolbarSearchBoxComponent.html",[3,0.099,4,0.11,5,0.077,7,0.247,8,0.741,9,1.076,20,0.55,23,1.162,25,1.038,26,0.015,27,1.038,28,0.641,29,0.884,32,1.081,33,1.704,37,1.578,56,0.27,58,0.133,65,0.864,66,0.832,67,0.864,68,0.55,77,0.121,78,0.025,79,0.617,80,0.76,87,1.168,104,0.005,105,0.007,106,0.005,107,0.86,108,0.97,109,1.658,110,1.142,111,1.142,112,1.142,113,1.142,115,1.084,116,2.776,117,0.933,118,2.102,119,2.203,120,1.468,122,1.468,124,0.899,131,3.096,134,1.412,140,1.279,145,2.766,156,0.772,157,0.64,161,1.441,162,0.933,163,0.933,168,2.766,177,1.578,179,2.746,189,2.852,191,1.009,192,2,193,1.306,216,1.441,217,1.969,263,0.665,297,0.716,298,1.658,299,1.729,300,0.69,301,2.327,302,1.142,303,1.142,304,0.97,305,1.658,306,1.729,307,0.97,308,1.009,309,1.142,310,0.933,311,1.142,312,0.97,313,0.866,314,1.051,315,1.142,316,0.933,317,1.142,318,0.898,319,1.009,320,1.142,321,0.97,322,0.933,323,0.933,324,1.142,325,0.97,326,1.142,327,0.933,328,1.259,329,1.729,330,0.933,331,0.832,332,1.9,333,1.142,334,0.898,335,1.009,336,0.97,337,0.898,338,0.933,339,1.142,340,1.142,341,0.898,342,1.142,343,0.898,344,1.142,345,0.933,346,1.095,347,1.142,392,0.898,437,2.791,468,1.827,488,0.53,499,1.463,520,0.832,550,1.844,555,2.056,582,1.009,583,0.933,629,1.519,747,3.609,756,2.278,759,4.857,786,3.609,938,1.709,955,1.193,1018,2.434,1054,1.608,1142,3.707,1151,2.981,1169,3.325,1170,3.25,1259,2.147,1294,3.25,1306,2.384,1312,4.709,1321,2.147,1323,2.147,1332,3.25,1380,2.147,1390,2.147,1391,4.355,1392,3.609,1581,3.25,1647,2.384,1648,4.355,1649,4.355,1722,1.827,1945,6.45,1946,5.015,1947,6.008,1948,5.015,1949,5.015,1950,4.156,1951,5.593,1952,5.593,1953,4.156,1954,5.015,1955,2.745,1956,4.156,1957,4.156,1958,2.745,1959,2.745,1960,2.745,1961,2.745,1962,2.745,1963,4.156,1964,5.593,1965,2.745,1966,5.015,1967,4.156,1968,2.745,1969,2.745,1970,5.015,1971,2.745,1972,4.156,1973,2.745,1974,2.745,1975,4.156,1976,2.745,1977,2.745,1978,2.745,1979,2.745,1980,4.156,1981,2.745,1982,2.745,1983,2.745,1984,2.745,1985,2.745,1986,2.745,1987,2.745,1988,2.745,1989,2.745,1990,2.745,1991,4.156,1992,4.156,1993,4.156,1994,5.593,1995,4.156,1996,4.156,1997,4.156,1998,4.156,1999,4.156,2000,4.156,2001,4.156]],["title/components/TripPassagesComponent.html",[107,0.677,334,1.291]],["body/components/TripPassagesComponent.html",[1,2.118,3,0.07,4,0.078,5,0.054,7,0.175,8,0.567,9,1.018,17,1.694,20,0.391,23,1.115,25,0.589,26,0.015,27,0.911,28,0.547,29,0.502,30,1.525,32,1.234,33,1.079,37,1.457,43,1.89,49,4.134,56,0.23,58,0.094,65,0.614,66,0.591,67,0.614,68,0.391,71,3.637,77,0.14,78,0.017,79,0.438,80,1.028,87,1.536,104,0.003,105,0.006,106,0.003,107,0.874,108,0.689,109,1.267,110,0.811,111,0.811,112,0.811,113,0.811,115,0.828,117,0.663,118,1.993,119,2.099,120,1.122,122,1.122,124,0.687,130,0.847,134,1.079,140,0.717,156,1.129,157,0.937,163,0.663,174,1.525,177,0.999,179,2.374,188,1.298,189,2.503,191,0.717,192,0.778,201,2.483,204,1.142,207,1.298,210,1.122,211,1.298,225,2.758,228,2.673,253,0.886,263,0.972,270,1.298,293,1.399,297,0.509,298,1.267,299,1.321,300,0.49,301,1.926,302,0.811,303,0.811,304,0.689,305,1.267,306,1.321,307,0.689,308,2.009,309,0.811,310,0.663,311,0.811,312,0.689,313,0.964,314,1.538,315,0.811,316,0.663,317,0.811,318,0.637,319,0.717,320,0.811,321,0.689,322,0.663,323,1.079,324,0.811,325,0.689,326,0.811,327,0.663,328,1.217,329,1.321,330,0.663,331,0.591,332,0.663,333,0.811,334,1.514,335,2.348,336,2.256,337,0.637,338,0.663,339,0.811,340,0.811,341,0.637,342,0.811,343,0.637,344,0.811,345,0.663,346,0.778,347,0.811,350,2.299,352,0.811,356,2.758,384,1.079,393,0.49,402,3.321,413,2.483,417,2.277,488,1.328,499,0.926,504,1.023,506,0.886,507,0.663,520,0.591,523,0.928,531,3.946,550,1.477,552,4.273,555,1.702,570,2.005,573,1.801,580,0.637,582,0.717,583,1.365,587,1.399,596,2.483,629,1.217,633,2.483,643,1.977,652,4.58,658,1.167,671,3.321,730,2.673,731,1.298,732,1.525,825,3.742,829,1.745,836,1.825,855,1.977,924,1.442,944,0.886,955,2.374,1037,0.973,1046,2.881,1047,1.399,1048,1.694,1049,4.857,1050,3.321,1051,3.489,1052,0.928,1053,1.525,1054,1.142,1055,1.694,1056,1.079,1057,1.399,1058,1.525,1059,1.214,1060,1.525,1061,1.525,1062,1.977,1063,1.525,1064,2.483,1065,4.505,1066,3.489,1067,2.758,1068,3.489,1069,2.277,1070,3.489,1071,3.489,1072,3.489,1073,1.694,1074,2.758,1075,1.694,1076,1.694,1077,1.694,1078,2.758,1079,2.881,1080,3.489,1081,3.489,1082,1.694,1083,4.022,1084,2.758,1085,2.758,1086,3.489,1087,1.694,1088,4.133,1089,3.489,1090,5.395,1091,1.694,1092,1.694,1093,2.758,1094,2.758,1095,2.758,1096,3.489,1097,2.758,1098,1.694,1099,1.694,1100,2.758,1101,4.022,1102,1.694,1103,2.758,1104,2.758,1105,2.113,1106,1.694,1107,1.525,1108,1.694,1109,1.694,1110,1.694,1111,1.694,1112,1.694,1113,1.694,1114,1.694,1115,1.694,1116,1.694,1117,1.694,1118,1.694,1119,1.694,1120,1.694,1121,2.758,1122,2.758,1123,2.483,1124,1.694,1125,1.694,1126,1.694,1332,4.273,1408,1.694,1420,1.694,1421,2.113,1423,1.694,1457,2.758,1500,2.277,1581,1.525,1595,1.399,1643,2.758,1689,1.694,1773,2.758,1776,1.694,1944,1.694,2002,3.175,2003,1.95,2004,1.95,2005,1.95,2006,1.95,2007,1.95,2008,1.95,2009,1.95,2010,1.95,2011,1.95,2012,1.95,2013,1.95,2014,1.95,2015,1.95,2016,1.95,2017,1.95,2018,1.95,2019,1.95,2020,1.95,2021,1.95,2022,1.95,2023,3.175,2024,3.175,2025,1.95,2026,3.175,2027,3.175,2028,3.175,2029,3.175,2030,3.175,2031,3.175,2032,4.017,2033,3.175,2034,3.175,2035,1.95,2036,3.175,2037,1.95,2038,3.175,2039,3.175,2040,3.175,2041,3.175,2042,3.175,2043,3.175,2044,3.175,2045,3.175,2046,3.175,2047,3.175,2048,3.175,2049,3.175,2050,3.175,2051,3.175,2052,3.175,2053,1.95,2054,1.95,2055,1.95,2056,1.95,2057,1.95,2058,1.95,2059,1.95,2060,1.95,2061,1.95]],["title/modules/TripPassagesModule.html",[419,0.956,2062,2.833]],["body/modules/TripPassagesModule.html",[3,0.172,4,0.192,5,0.134,26,0.015,56,0.314,58,0.232,77,0.212,78,0.043,104,0.008,105,0.011,106,0.008,162,1.632,297,1.253,334,2.473,335,2.494,336,1.697,341,2.473,419,1.163,421,1.632,422,1.998,423,3.082,424,2.182,425,2.794,426,1.766,439,2.794,440,2.182,441,1.998,443,2.354,446,2.354,447,2.926,460,3.197,531,2.659,579,3.197,599,5.035,606,3.07,607,2.285,825,2.521,827,3.445,1285,3.756,1382,4.411,1385,4.411,1437,4.709,1478,4.093,1830,4.809,1832,4.172,2062,5.807,2063,4.172,2064,4.172,2065,4.172,2066,5.035,2067,4.803,2068,4.803,2069,4.803,2070,4.172,2071,4.093,2072,4.172]],["title/guards/TripPassagesResolver.html",[1785,2.833,2071,2.629]],["body/guards/TripPassagesResolver.html",[0,1.969,1,2.656,3,0.177,4,0.197,5,0.138,7,0.443,8,1.116,9,1.038,20,0.989,23,0.989,25,1.161,26,0.015,27,0.989,28,0.593,29,0.989,32,0.813,37,2.162,56,0.305,57,3.072,58,0.239,66,1.896,68,0.989,77,0.218,78,0.044,79,1.109,80,0.949,87,1.387,104,0.009,105,0.011,106,0.009,115,1.287,189,3.362,363,4.165,488,0.952,520,1.495,521,4.165,523,2.348,531,3.803,582,1.814,825,3.606,1052,2.348,1056,2.732,1062,3.072,1105,3.285,1107,3.859,1591,3.999,1787,3.54,1794,3.54,1796,4.893,1797,5.649,1798,5.372,1799,5.649,1806,3.859,2071,4.165,2073,4.286,2074,4.935,2075,4.935,2076,4.935]],["title/modules/TripPassagesRoutingModule.html",[419,0.956,2066,2.629]],["body/modules/TripPassagesRoutingModule.html",[3,0.199,4,0.222,5,0.155,26,0.015,49,3.698,56,0.301,58,0.269,77,0.245,78,0.05,104,0.01,105,0.012,106,0.01,107,0.953,334,2.202,335,2.476,336,1.963,384,1.888,393,1.396,421,1.888,426,2.043,443,2.127,446,2.578,520,1.683,524,3.698,525,4.193,526,3.204,531,3.076,533,3.076,658,2.043,825,2.917,1065,4.345,1480,3.985,1481,3.985,1591,3.076,1659,4.345,2066,4.482,2070,4.826,2071,4.482,2072,4.826]],["title/injectables/UserLocationService.html",[0,1.243,438,1.575]],["body/injectables/UserLocationService.html",[0,1.692,2,2.171,3,0.141,4,0.157,5,0.109,7,0.352,8,0.959,9,1.091,20,1.23,23,1.178,25,0.728,26,0.015,27,0.62,28,0.656,29,0.62,32,0.646,37,2.176,43,1.93,56,0.245,58,0.19,68,0.786,75,2.058,76,1.957,77,0.173,78,0.035,80,1.049,104,0.007,105,0.01,106,0.007,124,1.163,134,1.827,140,0.959,156,1.943,157,1.613,177,2.077,194,2.665,350,1.501,384,1.332,392,2.006,393,1.351,438,2.144,488,1.378,499,2.018,521,3.578,546,2.447,570,3.452,582,1.442,712,2.812,855,4.109,856,3.406,868,3.772,955,3.103,1037,2.683,1052,1.865,1053,3.066,1054,2.297,1243,2.441,1737,3.406,2077,3.406,2078,6.135,2079,6.135,2080,6.135,2081,6.135,2082,5.376,2083,6.135,2084,5.376,2085,5.376,2086,6.601,2087,3.921,2088,6.135,2089,5.376,2090,5.376,2091,3.921,2092,3.921,2093,5.376,2094,3.921,2095,3.921,2096,3.921,2097,3.921,2098,3.921,2099,3.921,2100,3.921,2101,3.921,2102,3.921,2103,3.921,2104,3.921,2105,3.921,2106,3.921,2107,3.921,2108,3.921,2109,3.921,2110,3.921,2111,3.921,2112,5.376,2113,3.921,2114,3.921,2115,3.921,2116,3.921,2117,3.921,2118,3.921,2119,3.921]],["title/classes/UserLocationSubscriber.html",[78,0.035,969,2.313]],["body/classes/UserLocationSubscriber.html",[3,0.122,4,0.136,5,0.095,7,0.305,8,0.868,9,1.046,20,0.682,23,0.769,25,0.903,26,0.015,27,0.769,28,0.667,29,0.769,32,0.56,43,2.211,53,1.698,56,0.273,58,0.164,68,0.682,77,0.31,78,0.044,79,1.093,80,0.94,92,1.698,95,1.698,97,1.618,99,1.698,104,0.006,105,0.009,106,0.006,115,0.887,140,1.014,157,0.793,161,1.785,194,2.468,210,1.202,240,3.537,253,2.21,263,0.823,313,1.183,392,1.591,393,1.223,405,2.554,410,1.545,436,1.789,438,2.266,470,1.618,488,1.096,498,3.328,499,0.992,504,1.785,507,1.93,511,1.618,546,1.941,550,1.789,555,1.25,562,1.785,563,2.117,565,1.992,573,1.719,580,1.857,583,1.156,629,2.068,658,1.25,744,2.117,756,2.21,761,1.618,829,2.114,836,1.545,839,1.698,840,2.836,842,1.883,852,2.429,860,1.545,861,1.357,867,1.698,868,1.698,869,2.817,872,1.719,873,1.25,889,1.883,891,1.883,903,2.693,925,1.883,955,1.478,956,3.145,957,1.883,958,2.264,959,2.264,960,1.883,961,1.785,962,1.992,963,2.117,964,2.693,965,3.239,966,2.693,967,2.85,968,1.883,969,2.85,970,3.239,971,2.85,972,2.264,973,2.264,974,2.264,975,3.781,976,1.785,977,2.264,978,2.264,979,3.239,980,1.992,981,2.264,982,2.264,983,2.264,984,2.264,985,2.264,986,2.264,987,2.264,988,2.264,989,2.264,990,3.239,991,2.264,992,2.264,993,2.264,994,1.992,995,2.264,996,2.117,997,2.117,998,2.264,999,2.264,1000,2.264,1001,2.264,1002,2.264,1003,2.264,1004,2.264,1005,2.264,1006,2.264,1007,2.117,1008,2.264,1009,2.264,1010,2.264,1011,3.239,1012,2.264,1013,2.264,1014,3.239,1015,2.264,1016,2.264,1017,2.264,1018,1.992,1019,3.781,1020,2.264,1021,2.264,1022,3.239,1023,2.264,1024,2.264,1025,2.264,1026,2.264,1027,2.264,1028,2.264,1029,2.264,1030,3.239,1031,2.264,1032,3.239,1033,2.264,1034,2.264,1035,2.264,1036,2.264,1037,1.698,1038,2.264,1039,2.264,1040,2.264,1041,2.264,1042,3.239,1043,2.264,1044,2.264,1045,2.264,2120,3.401,2121,3.401,2122,3.401]],["title/classes/VehicleLoadSubscriber.html",[78,0.035,1172,2.833]],["body/classes/VehicleLoadSubscriber.html",[1,1.796,3,0.094,4,0.105,5,0.073,7,0.236,8,0.718,9,1.015,20,0.527,23,0.636,25,0.746,26,0.015,27,0.636,28,0.463,29,0.636,32,0.433,37,1.266,43,0.828,53,2.008,55,1.637,56,0.291,58,0.127,63,2.504,64,4.609,65,0.828,66,0.797,67,0.828,68,0.527,73,2.056,74,1.637,77,0.177,78,0.036,79,0.591,80,0.943,92,1.313,94,3.441,95,1.313,97,1.251,99,1.313,104,0.005,105,0.007,106,0.005,115,0.686,118,0.712,130,1.747,140,1.052,162,0.894,177,0.828,189,2.122,194,2.122,197,1.38,209,3.145,221,2.056,258,2.056,260,2.056,263,0.637,266,2.226,300,1.011,313,0.548,328,1.48,331,0.797,343,1.788,350,1.007,384,1.859,393,1.831,405,2.111,436,1.479,437,2.008,438,2.182,467,2.056,468,1.75,469,2.056,470,1.251,488,1.248,511,1.251,517,1.75,520,0.797,546,1.049,550,1.479,555,0.967,573,1.421,578,1.886,579,1.75,580,1.597,582,0.967,590,2.056,618,2.056,620,1.75,629,1.786,658,0.967,707,1.886,743,2.056,756,1.827,805,2.885,828,1.637,829,1.747,832,1.75,835,1.886,836,1.195,838,1.637,839,2.73,840,2.008,852,2.73,860,1.195,861,2.351,862,1.637,864,1.637,867,1.313,869,1.827,872,1.726,873,0.967,876,1.75,896,1.75,897,1.886,911,2.677,914,2.885,915,1.75,918,1.75,920,3.251,923,1.75,924,1.827,927,2.677,929,1.886,931,1.75,932,1.75,933,1.75,934,1.75,936,1.75,937,1.75,938,1.637,941,1.886,944,1.195,946,1.75,960,1.456,961,2.111,967,2.356,968,3.263,976,2.111,980,1.541,994,1.541,1052,1.251,1054,1.541,1056,1.456,1069,2.885,1142,2.438,1143,3.503,1144,2.284,1145,2.284,1149,2.284,1151,1.886,1152,2.284,1153,3.494,1156,2.284,1158,2.284,1161,2.284,1162,2.284,1164,2.284,1169,2.704,1170,3.145,1171,2.677,1172,2.885,1173,3.494,1174,3.494,1175,2.284,1176,3.494,1177,2.284,1178,2.284,1179,2.284,1180,2.284,1181,2.284,1182,2.284,1183,2.284,1184,2.284,1185,3.494,1186,2.284,1187,2.284,1188,3.494,1189,2.284,1190,2.284,1191,2.284,1192,2.056,1193,2.056,1194,2.284,1195,3.819,1196,2.284,1197,2.284,1198,2.284,1199,2.284,1200,4.242,1201,2.284,1202,2.284,1203,2.284,1204,3.494,1205,2.284,1206,2.284,1207,2.284,1208,2.284,1209,2.284,1210,2.284,1211,2.284,1212,3.494,1213,2.284,1214,2.284,1215,2.284,1216,2.284,1217,2.284,1218,3.494,1219,2.284,1220,2.284,1221,2.284,1222,2.284,1223,2.284,1224,2.284,1225,2.284,1226,2.284,1227,2.284,1228,4.242,1229,2.284,1230,3.494,1231,2.284,1232,3.494,1233,1.886,1234,2.284,1235,2.284,1236,2.284,1237,2.284,1238,2.284,1239,2.284,1240,2.284,1241,2.284,1242,2.284,1243,1.637,1244,2.284,1245,3.494,1246,3.494,1247,3.494,1248,2.284,1249,2.284,1250,2.284,1251,2.284,1252,4.242,1253,2.284,1254,2.284,1255,2.284,1256,2.284,1257,2.284,1258,2.284,1259,2.056,1260,2.284,1261,2.284,1262,3.494,1263,2.284,1264,2.284,1265,2.284,1266,2.284,1267,2.284,1268,2.284,1269,2.284,1270,2.284,1271,2.284,1272,2.284,1273,2.284,1274,2.284,1275,2.284,1276,2.284,1277,2.284,1278,2.284,1279,2.284,2123,2.63,2124,2.63,2125,2.63,2126,2.63]],["title/coverage.html",[2127,4.692]],["body/coverage.html",[0,2.168,1,1.172,5,0.089,6,2.769,26,0.015,28,0.302,53,1.591,55,1.985,69,4.257,78,0.066,104,0.006,105,0.008,106,0.006,107,1.308,108,1.126,114,2.769,137,1.867,163,1.083,197,3.504,263,1.991,300,1.607,304,1.126,307,1.126,308,1.172,310,1.083,312,1.126,314,1.777,316,1.083,318,1.042,321,1.126,322,1.083,323,1.578,325,1.126,327,1.083,330,1.083,332,1.083,334,1.042,338,1.083,341,1.042,343,1.042,345,1.083,348,2.286,349,3.33,350,1.22,351,2.769,368,1.867,436,1.172,437,1.591,438,1.271,442,3.631,463,3.091,471,2.492,475,2.492,486,3.33,487,3.33,494,2.286,499,0.93,507,2.342,510,2.286,512,2.492,513,3.33,518,2.286,531,3.032,537,2.122,544,2.492,547,2.492,548,2.492,549,2.769,610,3.631,611,3.631,642,2.769,740,2.769,825,3.357,826,3.631,827,3.33,828,3.982,864,1.985,868,1.591,869,1.448,871,2.286,948,2.286,949,2.769,956,3.54,957,3.54,964,1.764,966,1.764,969,1.867,1046,2.286,1047,3.33,1142,3.44,1143,3.33,1171,2.122,1172,2.286,1286,3.631,1314,2.286,1388,2.492,1389,2.492,1390,3.631,1445,2.286,1446,2.769,1482,3.33,1483,3.33,1484,3.631,1485,1.867,1492,2.286,1529,2.769,1556,3.631,1557,3.631,1567,2.286,1585,2.286,1586,3.631,1624,2.769,1631,2.286,1656,2.769,1674,3.646,1675,3.631,1713,2.769,1722,3.091,1785,3.928,1786,2.122,1788,2.769,1837,2.286,1838,3.631,1882,2.492,1922,2.122,1924,2.769,1935,2.492,1936,2.286,1945,2.769,2071,2.122,2073,2.769,2077,2.769,2127,2.769,2128,2.769,2129,3.188,2130,3.188,2131,4.643,2132,4.643,2133,5.477,2134,4.643,2135,7.497,2136,7.202,2137,3.188,2138,4.033,2139,2.769,2140,2.769,2141,4.033,2142,6.018,2143,6.676,2144,2.769,2145,3.188,2146,3.188,2147,3.188,2148,7.202,2149,6.018,2150,4.643,2151,3.188,2152,5.477,2153,3.188,2154,3.188,2155,3.188,2156,3.188,2157,3.188,2158,3.188,2159,4.643,2160,3.188,2161,3.188,2162,3.188,2163,3.188,2164,3.188,2165,2.492,2166,3.188,2167,4.643,2168,2.492,2169,2.492,2170,2.769,2171,2.769,2172,2.769,2173,2.769,2174,2.769,2175,3.188,2176,3.188]],["title/dependencies.html",[422,1.978,1634,2.574]],["body/dependencies.html",[26,0.015,58,0.263,65,1.71,66,1.646,67,1.71,68,1.089,104,0.01,105,0.012,106,0.01,162,1.846,266,3.007,378,4.765,422,2.26,452,5.77,456,4.719,457,4.719,520,1.646,607,2.585,689,4.719,861,2.65,1192,4.248,1193,4.248,1380,4.248,2177,5.433,2178,8.035,2179,5.433,2180,6.643,2181,5.433,2182,5.433,2183,5.433,2184,5.433,2185,5.433,2186,5.433,2187,5.433,2188,5.433,2189,5.433,2190,6.643,2191,5.433,2192,5.433,2193,5.433,2194,5.433,2195,5.433,2196,5.433,2197,5.433,2198,5.433,2199,5.433,2200,5.433,2201,5.433,2202,5.433]],["title/miscellaneous/enumerations.html",[2203,1.822,2204,4.129]],["body/miscellaneous/enumerations.html",[3,0.197,7,0.492,26,0.015,28,0.52,104,0.01,105,0.012,106,0.01,157,1.911,210,2.545,253,3.271,263,1.326,323,1.861,350,2.556,374,3.929,388,4.788,417,3.929,486,3.929,487,4.788,505,4.283,506,3.033,531,3.032,825,2.875,956,3.032,957,3.695,960,3.695,961,2.875,962,3.208,963,3.41,1037,2.734,1047,4.788,1049,5.22,1057,3.929,1058,4.283,1059,3.41,1060,4.283,1061,4.283,1062,3.41,1063,4.283,2203,3.032,2204,4.757,2205,4.283,2206,4.757,2207,5.477]],["title/miscellaneous/functions.html",[2203,1.822,2208,4.129]],["body/miscellaneous/functions.html",[5,0.172,7,0.553,26,0.013,32,1.013,104,0.011,105,0.013,106,0.011,119,2.088,671,4.414,953,4.762,954,4.414,1631,5.427,1634,4.812,1646,4.812,2168,4.812,2169,5.595,2203,3.406,2205,4.812,2208,5.345,2209,6.154]],["title/index.html",[7,0.296,2210,3.292,2211,3.292]],["body/index.html",[5,0.168,26,0.013,87,1.694,104,0.011,105,0.013,106,0.011,266,3.337,294,4.715,352,2.509,478,4.715,523,2.868,620,4.013,997,3.754,1646,4.715,2128,6.141,2212,7.071,2213,7.503,2214,7.071,2215,6.03,2216,6.03,2217,6.03,2218,6.03,2219,6.03,2220,6.03,2221,6.03,2222,7.071,2223,6.03,2224,6.03,2225,6.03]],["title/modules.html",[421,1.836]],["body/modules.html",[26,0.012,104,0.01,105,0.012,106,0.01,378,5.833,420,3.929,421,1.861,432,3.41,433,3.41,434,3.41,435,3.41,599,3.646,1437,3.41,1472,3.929,1476,3.646,1521,3.646,1824,3.929,1828,3.646,1914,3.929,1918,3.646,2062,3.929,2066,3.646,2226,8.133,2227,8.133,2228,8.258,2229,7.686,2230,7.686]],["title/overview.html",[2231,4.692]],["body/overview.html",[2,1.985,26,0.015,104,0.006,105,0.009,106,0.006,108,2.522,109,1.431,163,1.988,297,0.936,304,2.067,307,2.067,310,2.425,312,2.522,316,1.988,318,2.333,321,2.067,322,2.425,325,2.522,327,1.988,330,1.988,332,2.425,334,1.913,337,1.173,338,2.425,341,1.913,343,2.333,345,1.988,368,3.427,419,0.868,420,5.782,421,1.219,422,1.492,423,1.629,424,1.629,425,1.629,426,1.319,427,3.115,428,3.115,429,3.115,430,3.115,431,3.115,432,3.642,433,4.324,434,4.771,435,4.324,436,2.151,437,2.92,438,2.334,439,2.295,440,1.629,441,1.492,506,1.629,511,1.706,526,1.706,543,1.985,599,4.623,600,3.115,601,3.115,602,3.115,805,2.573,1037,1.79,1280,3.115,1281,3.115,1282,3.115,1374,3.115,1375,3.115,1376,3.115,1437,4.443,1438,3.115,1439,3.115,1440,3.115,1472,4.982,1473,3.115,1474,3.115,1475,3.115,1476,3.894,1521,4.623,1522,3.115,1523,3.115,1524,3.115,1651,3.115,1652,3.115,1653,3.115,1787,2.573,1824,5.642,1825,3.115,1826,3.115,1827,3.115,1828,3.894,1914,5.227,1915,3.115,1916,3.115,1917,3.115,1918,3.894,2062,5.497,2063,3.115,2064,3.115,2065,3.115,2066,3.894,2231,3.115,2232,3.587,2233,5.053,2234,4.389]],["title/routes.html",[526,2.57]],["body/routes.html",[26,0.013,104,0.011,105,0.013,106,0.011,526,3.075]],["title/miscellaneous/typealiases.html",[2203,1.822,2235,4.754]],["body/miscellaneous/typealiases.html",[7,0.508,26,0.013,28,0.537,71,4.533,104,0.01,105,0.012,106,0.01,119,1.652,363,3.768,513,5.65,518,5.24,544,4.427,953,3.768,954,4.885,956,3.134,957,3.77,964,3.134,966,3.134,968,3.77,1485,4.614,1491,4.427,1936,4.061,2165,4.427,2168,4.427,2169,5.326,2203,3.134,2205,4.427,2206,4.917,2236,5.662,2237,5.916,2238,6.737,2239,5.916,2240,5.916,2241,5.916,2242,6.812,2243,5.662]],["title/miscellaneous/variables.html",[2203,1.822,2244,4.129]],["body/miscellaneous/variables.html",[7,0.26,26,0.015,27,0.457,28,0.688,33,1.759,37,1.628,43,1.628,69,4.759,80,1.042,104,0.009,105,0.008,106,0.005,156,2.066,157,1.714,168,2.877,177,1.36,253,2.929,263,0.7,292,2.877,298,1.154,319,1.064,350,1.981,355,2.513,376,3.1,384,2.497,392,2.108,393,0.727,432,1.801,433,1.801,434,1.801,435,1.801,436,1.064,442,2.262,444,2.513,447,1.376,448,2.075,449,2.513,451,2.513,453,2.513,471,3.38,472,2.513,473,2.075,474,2.513,475,3.38,476,2.513,477,2.513,478,2.262,479,2.513,480,2.513,506,1.964,513,3.1,546,1.724,707,2.075,723,3.754,724,4.495,861,1.724,864,2.691,915,2.877,918,1.925,924,2.791,948,4.407,950,5.337,951,5.337,952,5.337,953,4.09,1171,2.877,1413,4.987,1421,3.821,1485,3.363,1488,2.262,1631,4.407,1709,2.513,1812,3.754,1822,2.513,1823,4.495,1935,3.38,1936,2.075,2138,2.513,2139,4.495,2140,4.495,2141,2.513,2144,3.754,2165,2.262,2170,2.513,2171,2.513,2172,2.513,2173,2.513,2174,2.513,2203,1.601,2234,3.754,2237,2.513,2238,2.513,2239,2.513,2240,2.513,2241,2.513,2244,2.513,2245,4.323,2246,2.893,2247,2.893,2248,2.893,2249,2.893,2250,2.893,2251,4.323,2252,4.323,2253,7.617,2254,5.742,2255,5.742,2256,4.323,2257,4.323,2258,4.323,2259,2.893,2260,2.893,2261,2.893,2262,4.323,2263,4.323,2264,4.323,2265,4.323,2266,4.323,2267,4.323,2268,4.323,2269,4.323,2270,2.893,2271,2.893,2272,4.323,2273,2.893,2274,2.893,2275,4.323,2276,4.323,2277,4.323,2278,2.893,2279,5.742,2280,2.893,2281,2.893,2282,2.893,2283,2.893,2284,2.893,2285,2.893,2286,2.893,2287,2.893,2288,2.893,2289,2.893,2290,4.323,2291,2.893,2292,2.893,2293,2.893,2294,2.893,2295,2.893,2296,4.323,2297,2.893,2298,2.893,2299,2.893,2300,2.893,2301,2.893,2302,2.893,2303,2.893,2304,2.893,2305,2.893,2306,2.893,2307,2.893,2308,2.893,2309,2.893,2310,2.893,2311,2.893,2312,2.893,2313,2.893,2314,2.893,2315,2.893,2316,2.893,2317,2.893,2318,2.893,2319,2.893,2320,2.893,2321,2.893,2322,2.893,2323,2.893,2324,2.893,2325,2.893,2326,2.893,2327,2.893,2328,2.893,2329,2.893]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.1.7",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["0.13.8",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1036,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0.2.0",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":892,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["0.9",{"_index":1035,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0.9.0",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":1032,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/RouteListComponent.html":{}}}],["1",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["1.1",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.2.1",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":805,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"overview.html":{}}}],["100",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["1000",{"_index":1737,"title":{},"body":{"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{}}}],["10000",{"_index":2089,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["10001",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":1411,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["111111",{"_index":809,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["12",{"_index":723,"title":{},"body":{"components/DepartureListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["12px",{"_index":1423,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["14",{"_index":2233,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":1782,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["16",{"_index":2232,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/TripPassagesComponent.html":{}}}],["18",{"_index":1005,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["180",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1].name.charat(0",{"_index":1899,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["1s",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["2",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2\",role=\"status",{"_index":2051,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["2.24.0",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1611,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["200",{"_index":591,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["2000",{"_index":933,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["207",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["22",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":724,"title":{},"body":{"components/DepartureListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["24px",{"_index":2054,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["250px",{"_index":1467,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["25px",{"_index":1779,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["3",{"_index":506,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":709,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["30px",{"_index":1781,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["32",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["3600000",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["4",{"_index":1059,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4/11",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":918,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":418,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["400px",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["404",{"_index":1062,"title":{},"body":{"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"miscellaneous/enumerations.html":{}}}],["42px",{"_index":1200,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["439px",{"_index":1355,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["44",{"_index":2144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":1037,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/15",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1713,"title":{},"body":{"components/StopInfoComponent.html":{},"coverage.html":{}}}],["500",{"_index":417,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["5000",{"_index":1069,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["5px",{"_index":1414,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["6.5.1",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":712,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{}}}],["64px",{"_index":1426,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["68",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2234,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.2.14",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["799",{"_index":1424,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["8",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1409,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["8;base64,pd94bwwgdmvyc2lvbj0i",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8;base64,pd94bwwgdmvyc2lvbj0ims4wiib",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["90",{"_index":929,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["99",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["a(*ngfor=\"let",{"_index":1457,"title":{},"body":{"components/NotFoundComponent.html":{},"components/TripPassagesComponent.html":{}}}],["a([routerlink]=\"['/passages",{"_index":725,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["a([routerlink]=\"[\\'/passages",{"_index":738,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":1895,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["a.stopid",{"_index":1741,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["a2u9imjsywnriibzdhjva2utd2lkdgg9ijeunsigdgv4dc1hbmnob3i9im1p",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a2u9imjsywnriibzdhjva2utd2lkdgg9ijeunsigdgv4dc1hbmnob3i9im1pzgrszsi+sdwv",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a[1",{"_index":1749,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["absolute",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["abstract",{"_index":974,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["accessors",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/RouteListComponent.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["acquired",{"_index":1216,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["actions",{"_index":1509,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["activated",{"_index":1931,"title":{},"body":{"guards/StopsResolver.html":{}}}],["activatedroute",{"_index":1050,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["activatedroutesnapshot",{"_index":1797,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["actual",{"_index":715,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["actual_component",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["addlayer",{"_index":1127,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["addlayer(layer",{"_index":1039,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addmarker",{"_index":835,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["addto(this.map",{"_index":1009,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addto(this.userlocationlayer",{"_index":1030,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addvehiclemarker",{"_index":1146,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["addvehiclemarker(vehicle",{"_index":1156,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["afterviewinit",{"_index":829,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["agreed",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["agreed.tripid",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["alert",{"_index":505,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2236,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["allowed",{"_index":1219,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["alt",{"_index":932,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["always",{"_index":383,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["angular",{"_index":1646,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/animations",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":607,"title":{},"body":{"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["angular/compiler",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"modules/AppRoutingModule.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1380,"title":{},"body":{"modules/MainToolbarModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/material/sidenav",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/theming",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":2183,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":520,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"modules/NotFoundRoutingModule.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/service",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularversion",{"_index":1628,"title":{},"body":{"components/SidebarComponent.html":{}}}],["animate",{"_index":937,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["animation",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["api.service",{"_index":1597,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["api/geo/stops",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/geo/vehicle",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/geo/vehicles",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/settings",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/stop",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/trip",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/vehicle",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiendpoint",{"_index":950,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["app",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["app.component",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.pug",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":108,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdrawable",{"_index":741,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["appdrawable]'},{'name",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["appear",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["apperrorhandler",{"_index":348,"title":{"injectables/AppErrorHandler.html":{}},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appinitservice",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appinitservice.load",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":420,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnotificationservice",{"_index":368,"title":{"injectables/AppNotificationService.html":{}},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{},"overview.html":{}}}],["appnotificationtype",{"_index":388,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"miscellaneous/enumerations.html":{}}}],["appnotificationtype.error",{"_index":403,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["apppreloadingstrategy",{"_index":510,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutes",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":432,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appversion",{"_index":954,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["arg",{"_index":1589,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["args",{"_index":1013,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["arguments",{"_index":760,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["aria",{"_index":1332,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["array.isarray(vehicles.vehicles",{"_index":1181,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["arrival",{"_index":673,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["arrow_back",{"_index":1362,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["async\",[value]=\"option",{"_index":2000,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["atleast",{"_index":618,"title":{},"body":{"components/DepartureListComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["attachment",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["attribution",{"_index":996,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["auto",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["autocomplete",{"_index":1946,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["autocomplete(#auto=\"matautocomplete\",[displaywith]=\"displayfn\",(optionselected)=\"onstopselected($event",{"_index":1997,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["available",{"_index":2230,"title":{},"body":{"modules.html":{}}}],["awr0ad0ims41iib0zxh0lwfuy2hvcj0ibwlkzgxlij5ipc90zxh0pg0kpc9zdmc",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awr0ad0imtawiibozwlnahq9ijewmcigzmlsbd0ii2zmziivpg0kphrlehqg",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":1007,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/StopsInfoComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["b2xkidmychggc2fucy1zzxjpzjsgy29sb3i6chvycgxloyb9pc9zdhlszt4n",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b3bhy2l0et0iljuipg0kphjly3qged0iltewiib5psitmtaiihdpzhropsix",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":1246,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["backend",{"_index":2216,"title":{},"body":{"index.html":{}}}],["background",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/TripPassagesComponent.html":{}}}],["background:#999999",{"_index":1469,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["background:#b00020",{"_index":1777,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["bar",{"_index":1194,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bar(*ngif=\"loading\",mode=\"indeterminate\",color=\"accent",{"_index":1577,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["baseurl",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{}}}],["begin",{"_index":803,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["behaviorsubject",{"_index":570,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"injectables/SidebarService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["behaviorsubject(0",{"_index":571,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["behaviorsubject(false",{"_index":1666,"title":{},"body":{"injectables/SidebarService.html":{}}}],["behaviorsubject(undefined",{"_index":855,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["bj0ims4xiib2awv3qm94psitmiatmia3mia3miigeg1sbnm9imh0dha6ly93",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":1415,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["block",{"_index":1408,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["blur",{"_index":1393,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["blur(2px",{"_index":1430,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["bold",{"_index":732,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["boolean",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["border",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["border:1px",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bottom:0px",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["bottomleft",{"_index":1222,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bottomright",{"_index":1218,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bounds",{"_index":55,"title":{"interfaces/Bounds.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["box",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["box'},{'name",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["box(*ngif=\"erroroccured",{"_index":1774,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["box(*ngif=\"haserror()\",aria",{"_index":2026,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["box([blur]=\"haserror()\",title=\"{{routename",{"_index":2023,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["box([blur]=\"stoplocation===undefined\",title=\"{{stopinfo?.stopname}}\",i18n",{"_index":1758,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["box.component",{"_index":1313,"title":{},"body":{"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{}}}],["box.component.pug",{"_index":1392,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.scss",{"_index":1391,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts",{"_index":1390,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:10",{"_index":1397,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:12",{"_index":1396,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:15",{"_index":1395,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:16",{"_index":1971,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:17",{"_index":1969,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:20",{"_index":1968,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:22",{"_index":1973,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:25",{"_index":1956,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:30",{"_index":1974,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:37",{"_index":1959,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:44",{"_index":1962,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:48",{"_index":1965,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:56",{"_index":1958,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:59",{"_index":1961,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:72",{"_index":1960,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.module.ts",{"_index":1441,"title":{},"body":{"modules/MapHeaderBoxModule.html":{}}}],["box/map",{"_index":1389,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"coverage.html":{}}}],["boxmarginhorizontal",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmarginhorizontal)}*(100vw",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmarginvertical",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmaxwidth",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["break",{"_index":1570,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["breakpoint",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness(0.5",{"_index":1432,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["browse",{"_index":2228,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":378,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":2220,"title":{},"body":{"index.html":{}}}],["bus",{"_index":827,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"modules/TripPassagesModule.html":{},"coverage.html":{}}}],["button#btnsearch",{"_index":1364,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button#btnsearch(mat",{"_index":1339,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button(mat",{"_index":1510,"title":{},"body":{"components/RetryDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["button,(click)=\"closesidebar",{"_index":1640,"title":{},"body":{"components/SidebarComponent.html":{}}}],["button,(click)=\"onnoclick",{"_index":1511,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["button,(click)=\"togglesearch",{"_index":1340,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button,(click)=\"togglesidebar()\",i18n",{"_index":1331,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button,[mat",{"_index":1513,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["button,[routerlink",{"_index":1344,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.close",{"_index":1357,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.close(mat",{"_index":1343,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.sidebar",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["c",{"_index":1008,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["c2lhbkjsdxigaw49ilnvdxjjzudyyxboawmiihn0zerldmlhdglvbj0imyiv",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c3ryb2tlpsijmdawii8+dqo8l2c+dqo8l3n2zz4",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":2118,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["calc",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["calculatedelay",{"_index":649,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["calculatedelay(data",{"_index":655,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["calculates",{"_index":657,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["call",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"directives/DrawableDirective.html":{}}}],["canvasrenderingcontext2d",{"_index":781,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["capitalize",{"_index":2057,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["case",{"_index":699,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["catch",{"_index":353,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["catcherror",{"_index":1052,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["catcherror((err",{"_index":1243,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["catcherror(this.handleerror.bind(this",{"_index":1113,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["cc",{"_index":1000,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["center",{"_index":1204,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["child",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["children",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":1550,"title":{},"body":{"components/RouteListComponent.html":{}}}],["cjxkzwzzpg0kpgzpbhrlcibpzd0iyiiged0imciget0imci+dqo8zmvhyxvz",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":78,"title":{"classes/AppPreloadingStrategy.html":{},"classes/LeafletMapComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RetryDialogData.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["classes",{"_index":511,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/LeafletMapComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RetryDialogData.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"overview.html":{}}}],["classname",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clear",{"_index":744,"title":{},"body":{"directives/DrawableDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["cli",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["clickable",{"_index":923,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["client",{"_index":2213,"title":{},"body":{"index.html":{}}}],["close",{"_index":1360,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close]=\"true\",cdkfocusinitial",{"_index":1514,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["closeable",{"_index":1289,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["closeable':(closeable===true",{"_index":1329,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["closeable\\':(closeable===true",{"_index":1372,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["closemat",{"_index":1650,"title":{},"body":{"components/SidebarComponent.html":{}}}],["closesidebar",{"_index":1627,"title":{},"body":{"components/SidebarComponent.html":{},"injectables/SidebarService.html":{}}}],["cluster_appmodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule",{"_index":600,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule_declarations",{"_index":601,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule_exports",{"_index":602,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule",{"_index":1280,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule_declarations",{"_index":1281,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule_exports",{"_index":1282,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule",{"_index":1374,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule_declarations",{"_index":1375,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule_exports",{"_index":1376,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule",{"_index":1438,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule_declarations",{"_index":1439,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule_exports",{"_index":1440,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule",{"_index":1473,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule_declarations",{"_index":1474,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule_imports",{"_index":1475,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule",{"_index":1522,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule_declarations",{"_index":1523,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule_exports",{"_index":1524,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule",{"_index":1651,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declarations",{"_index":1652,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_exports",{"_index":1653,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_stopmodule",{"_index":1825,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopmodule_declarations",{"_index":1826,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopmodule_imports",{"_index":1827,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopsmodule",{"_index":1915,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_declarations",{"_index":1916,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_imports",{"_index":1917,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule",{"_index":2063,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule_declarations",{"_index":2064,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule_imports",{"_index":2065,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cmcvr3jhcghpy3mvu1zhlzeums9eveqvc3znmteuzhrkjz4ncjxzdmcgd2lk",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cmp",{"_index":970,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["cmwoi2epiibzdhjva2u9iimwmdailz4ncjx0zxh0ignsyxnzpsjozwf2esiged0imzqiihk9",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1500,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{}}}],["color",{"_index":889,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["color:#00d500",{"_index":737,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["color:#d50000",{"_index":734,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["color:#f9f9f9",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["color:red",{"_index":640,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["color:white",{"_index":1412,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["column",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["combine",{"_index":1753,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["combinelatest",{"_index":578,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["combinelatest([this.mtimerobservable.pipe(filter((val",{"_index":1747,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["combinelatest([timer(0",{"_index":590,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["come",{"_index":1645,"title":{},"body":{"components/SidebarComponent.html":{}}}],["common",{"_index":1832,"title":{},"body":{"modules/StopModule.html":{},"modules/TripPassagesModule.html":{}}}],["common/countdown",{"_index":2068,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["common/leaflet",{"_index":870,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["common/retry",{"_index":1921,"title":{},"body":{"modules/StopsModule.html":{},"guards/StopsResolver.html":{}}}],["commonmodule",{"_index":606,"title":{},"body":{"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["complete",{"_index":1587,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["component",{"_index":107,"title":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["components",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"overview.html":{}}}],["connection",{"_index":412,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["console",{"_index":407,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["console.error('it",{"_index":408,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["console.error(err",{"_index":1599,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["const",{"_index":393,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/NotFoundRoutingModule.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(activatedroute",{"_index":1885,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["constructor(api",{"_index":1794,"title":{},"body":{"guards/StopInfoResolver.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["constructor(apiservice",{"_index":1618,"title":{},"body":{"injectables/SettingsService.html":{}}}],["constructor(cmp",{"_index":2120,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["constructor(dialogref",{"_index":1490,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["constructor(el",{"_index":755,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["constructor(elref",{"_index":838,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(http",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(indicatorcmp",{"_index":1578,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["constructor(injector",{"_index":359,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["constructor(mainmap",{"_index":2123,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["constructor(map",{"_index":1582,"title":{},"body":{"classes/RoutesSubscriber.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(public",{"_index":1501,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["constructor(resolve",{"_index":1588,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["constructor(route",{"_index":1689,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["constructor(router",{"_index":1560,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["constructor(service",{"_index":1839,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["constructor(sidebarservice",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(stopservice",{"_index":1955,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["constructor(toolbar",{"_index":1442,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["container",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container(#sidenavcontainer,[hasbackdrop]=\"true",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["container(*ngfor=\"let",{"_index":1542,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopsInfoComponent.html":{}}}],["container.innerhtml",{"_index":1207,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.main",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["container.onclick",{"_index":1211,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.backgroundcolor",{"_index":1197,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.cursor",{"_index":1206,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.height",{"_index":1201,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.lineheight",{"_index":1202,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.msuserselect",{"_index":1210,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.textalign",{"_index":1203,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.userselect",{"_index":1209,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.verticalalign",{"_index":1205,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.width",{"_index":1199,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["containing",{"_index":604,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["content",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RetryDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["content.title",{"_index":1435,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["context(.no",{"_index":1429,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["continue",{"_index":1185,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["contract",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["contributors",{"_index":999,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["control",{"_index":1195,"title":{},"body":{"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["converts",{"_index":1692,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["converttime",{"_index":650,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["converttime(data",{"_index":660,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["converttime(time",{"_index":1532,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["coordinates",{"_index":1021,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords",{"_index":1019,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.accuracy",{"_index":1025,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.latitude",{"_index":1027,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.longitude",{"_index":1028,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["copy",{"_index":997,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"index.html":{}}}],["core",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countdown",{"_index":608,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["countdowndirective",{"_index":605,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["countdowntimerdirective",{"_index":338,"title":{"directives/CountdownTimerDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countdowntimermodule",{"_index":599,"title":{"modules/CountdownTimerModule.html":{}},"body":{"modules/CountdownTimerModule.html":{},"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":2127,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":1122,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["createdialog",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdialog(error",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdialogfunc",{"_index":2237,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["createdialogfuncresponse",{"_index":2239,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["createpositionrequest",{"_index":2082,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["createpositionrequest(timeout",{"_index":2085,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["creates",{"_index":1812,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["createstopicon",{"_index":1171,"title":{},"body":{"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createvehicleicon",{"_index":864,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createvehicleicon(location.heading",{"_index":916,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["createvehicleicon(vehicle.heading",{"_index":1250,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ctx",{"_index":742,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["current",{"_index":671,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":1196,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["d3cudzmub3jnlziwmdavc3znij4ncjxzdhlszt4uagvhdnkgeybmb250oibi",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":658,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["data\",i18n",{"_index":2029,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["data).stopshortname",{"_index":1728,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["data.actualrelativetime",{"_index":708,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["data.actualtime",{"_index":710,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["data.code",{"_index":1508,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.code}}div(mat",{"_index":1518,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.message",{"_index":1506,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.plannedtime",{"_index":714,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["data:image/svg+xml;charset=utf",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data['trippassages",{"_index":1077,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["date.now",{"_index":596,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["debounce_time",{"_index":1068,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["debounce_time\",[placeholder]=\"'sync",{"_index":2035,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["debounce_time\",[placeholder]=\"\\'sync",{"_index":2059,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["debouncetime",{"_index":1053,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["declarations",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["decorators",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/RetryDialogComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["deep",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["default",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["delay",{"_index":653,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["departure(deps",{"_index":691,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure.tripid]\",role=\"listitem",{"_index":726,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure_board",{"_index":704,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departurelistcomponent",{"_index":304,"title":{"components/DepartureListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departurelistitemcomponent",{"_index":307,"title":{"components/DepartureListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departures",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{}}}],["departures\",[departure]=\"passage",{"_index":634,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures\",[departure]=\"passage\").no",{"_index":641,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures(*ngif=\"!hasdepartures",{"_index":635,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures(deps",{"_index":627,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departurestatus",{"_index":684,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departures|departures@@departures\",label=\"departures",{"_index":1769,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["dependencies",{"_index":422,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["description",{"_index":352,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"classes/LeafletMapComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"index.html":{}}}],["design",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["destroys",{"_index":1121,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["dgg9ijy0iibozwlnahq9ijy0iibiyxnluhjvzmlszt0iznvsbcigdmvyc2lv",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dgv4dd4ncjwvbwfzaz4ncjxjaxjjbgugy3g9ijm0iibjet0imzqiihi9ijmyiibtyxnrpsj1",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":1485,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dialog'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["dialog.component",{"_index":1528,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["dialog.component.pug",{"_index":1487,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["dialog.component.scss",{"_index":1486,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["dialog.component.ts",{"_index":1484,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":1493,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1497,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1496,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1494,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:5",{"_index":1520,"title":{},"body":{"classes/RetryDialogData.html":{}}}],["dialog.component.ts:6",{"_index":1519,"title":{},"body":{"classes/RetryDialogData.html":{}}}],["dialog.module.ts",{"_index":1525,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["dialog/retry",{"_index":1483,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"coverage.html":{}}}],["dialogopen",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialogref",{"_index":1488,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"miscellaneous/variables.html":{}}}],["dialogref.afterclosed",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictating",{"_index":1704,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["diff",{"_index":594,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["diffminutes",{"_index":721,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["direction",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{}}}],["directions_bus",{"_index":701,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["direction}}.no",{"_index":1555,"title":{},"body":{"components/RouteListComponent.html":{}}}],["directive",{"_index":300,"title":{"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["directives",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"overview.html":{}}}],["disabled",{"_index":2215,"title":{},"body":{"index.html":{}}}],["dismissed",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["display",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/TripPassagesComponent.html":{}}}],["display:block",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["display:flex",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["display:list",{"_index":1553,"title":{},"body":{"components/RouteListComponent.html":{}}}],["display:none",{"_index":1358,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["displayed",{"_index":1892,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["displayfn",{"_index":1950,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["displayfn(user",{"_index":1957,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["displaying",{"_index":1064,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{}}}],["distinctuntilchanged",{"_index":581,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["div(mat",{"_index":1504,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["div.error",{"_index":1773,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["div.no",{"_index":637,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["divider",{"_index":1359,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["divider(*ngif=\"hasheader(idx)&&idx>0",{"_index":1902,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["divider([vertical]=\"true",{"_index":1342,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["divider.close",{"_index":1341,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["documentation",{"_index":2128,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1225,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["dofocussearch",{"_index":1951,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["dom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["donmahallem/trapeze",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["drag",{"_index":989,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["drawable.directive",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["drawabledirective",{"_index":163,"title":{"directives/DrawableDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropshadow",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["during",{"_index":1100,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["dynamic",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":778,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.buttons",{"_index":801,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.offsetx",{"_index":821,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.offsety",{"_index":822,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["ease",{"_index":1434,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["el",{"_index":758,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["element",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["elementref",{"_index":756,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["elevation(4",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["elref",{"_index":842,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["emit",{"_index":1226,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["empty",{"_index":521,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{}}}],["enabled",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enablehighaccuracy",{"_index":2116,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["enabletracing",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":963,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["endpoint",{"_index":1458,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoint.icon",{"_index":1462,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoint.title",{"_index":1464,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoints",{"_index":1449,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoints\",[routerlink]=\"[endpoint.path",{"_index":1459,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["entrycomponents",{"_index":1526,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["enum",{"_index":504,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["enumerations",{"_index":2204,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiendpoint",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.apiendpoint.endswith",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.example.ts",{"_index":2223,"title":{},"body":{"index.html":{}}}],["environment.production",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.pwa",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.version",{"_index":1638,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environments/environment",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["equals",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1595,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["err.status",{"_index":1105,"title":{},"body":{"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{}}}],["error",{"_index":350,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/SettingsLoadSubscriber.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error(err",{"_index":1593,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["error.message",{"_index":399,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["error.status",{"_index":1943,"title":{},"body":{"guards/StopsResolver.html":{}}}],["errordiv(mat",{"_index":1517,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["errorhandler",{"_index":387,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["erroritem",{"_index":2240,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["errormessage=\"@@errorupdatingdata",{"_index":2030,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["errormessage=\"error",{"_index":2027,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["erroroccured",{"_index":1678,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["errorresponse",{"_index":371,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["errorresponse.status",{"_index":416,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["errors",{"_index":355,"title":{},"body":{"injectables/AppErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["errors.pipe(skipwhile",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":761,"title":{},"body":{"directives/DrawableDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["event.sourcetarget.data.shortname",{"_index":1278,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.sourcetarget.data.tripid",{"_index":1249,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.type",{"_index":1236,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.url.length",{"_index":1316,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["eventemitter",{"_index":759,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["events",{"_index":1573,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["events:none",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["events:visible",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["eveqgu1zhideums8vru4nicanahr0cdovl3d3dy53my5vcmcvr3jhcghpy3mvu1zhlzeu",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["except",{"_index":659,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["excluding",{"_index":665,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["execute",{"_index":1119,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["expand",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["expected",{"_index":667,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["export",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["exports",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2217,"title":{},"body":{"index.html":{}}}],["extends",{"_index":872,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["f44336",{"_index":2055,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["f9f9f9",{"_index":1466,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["failures",{"_index":1048,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["false",{"_index":392,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/variables.html":{}}}],["featureavailable",{"_index":2083,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["featuregroup",{"_index":1271,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["featuregroup.addto(this.getmap",{"_index":1273,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["featuregroup.on('click",{"_index":1274,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["field",{"_index":1649,"title":{},"body":{"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fill",{"_index":1346,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["fillcolor",{"_index":1033,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["fillopacity",{"_index":1034,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["fills",{"_index":1349,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["filter",{"_index":862,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["filter((event",{"_index":1235,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["filter((item",{"_index":1752,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["filter(num",{"_index":939,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["filteredoptions",{"_index":1947,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["firing",{"_index":988,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["firstpolyline",{"_index":887,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["firstpolyline.addto(this.getmap",{"_index":894,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["fixed",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["flatmap",{"_index":1054,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["flatmap((error",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flatmap((moveevent",{"_index":1237,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["flatmap((stopid",{"_index":1750,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["flatmap((tripid",{"_index":1110,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["flatmap((val",{"_index":2100,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["flatmap((value",{"_index":1987,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["flex",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["flex:0",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["flex:1",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["flexbox",{"_index":1351,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["flow",{"_index":1465,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["focussearch",{"_index":1954,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["follow",{"_index":2069,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["followbusmapdirective",{"_index":341,"title":{"directives/FollowBusMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"coverage.html":{},"overview.html":{}}}],["font",{"_index":730,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["form",{"_index":1648,"title":{},"body":{"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["form(role=\"search",{"_index":1991,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["form,mat",{"_index":1647,"title":{},"body":{"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["format",{"_index":1695,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["formcontrol",{"_index":1970,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["formsmodule",{"_index":1378,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["found",{"_index":523,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/SidebarComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"index.html":{}}}],["found'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["found.component",{"_index":1479,"title":{},"body":{"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{}}}],["found.component.pug",{"_index":1448,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1447,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1446,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:21",{"_index":1450,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":1453,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.module#notfoundmodule",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["found.module.ts",{"_index":1477,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found/not",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"coverage.html":{}}}],["foundmat",{"_index":1471,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["from([undefined",{"_index":1616,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{}}}],["function",{"_index":518,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/SettingsLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2208,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geoerror",{"_index":2112,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["geosuccess",{"_index":2109,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getangularversion",{"_index":1635,"title":{},"body":{"components/SidebarComponent.html":{}}}],["getappversion",{"_index":1631,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getdelay",{"_index":686,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getdeparture",{"_index":674,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getdepartures",{"_index":623,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["getfeatureavailable",{"_index":2095,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["gethasroutes",{"_index":1538,"title":{},"body":{"components/RouteListComponent.html":{}}}],["getimgdata",{"_index":745,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["getinitialmapcenter",{"_index":1602,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["getinitialmapzoom",{"_index":1609,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["getisloading",{"_index":1878,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getissidenavopen",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["getlasttimestamp",{"_index":2014,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getlocation",{"_index":856,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"injectables/UserLocationService.html":{}}}],["getmap",{"_index":1038,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["getmapbounds",{"_index":1140,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["getnotificationobservable",{"_index":502,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["getroutebytripid",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebytripid(vehicleid",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebyvehicleid",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebyvehicleid(vehicleid",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutename",{"_index":2020,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getroutes",{"_index":1535,"title":{},"body":{"components/RouteListComponent.html":{}}}],["gets",{"_index":676,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getsearchopen",{"_index":1304,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["getsettings",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"injectables/SettingsService.html":{}}}],["getsidebaropen",{"_index":1668,"title":{},"body":{"injectables/SidebarService.html":{}}}],["getstations",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"guards/StopsResolver.html":{}}}],["getstatus",{"_index":682,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getstatuscode",{"_index":2016,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getstatusicon",{"_index":680,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getstopid",{"_index":1718,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["getstopinfo",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{}}}],["getstopinfo(vehicleid",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstoplocation",{"_index":1869,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoplocation(stopshortname",{"_index":1858,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["getstoplocations",{"_index":1874,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoplocationsobservable",{"_index":1880,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoppassages",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstoppassages(route.params['stopid",{"_index":1805,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["getstoppassages(vehicleid",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstops",{"_index":1890,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["gettime",{"_index":678,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["gettimeuntilrefresh",{"_index":1716,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["getting",{"_index":2210,"title":{"index.html":{}},"body":{}}],["gettripdata",{"_index":2012,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["gettripid",{"_index":2018,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["gettrippassages",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/TripPassagesComponent.html":{}}}],["gettrippassages(tripid",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocation",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocation(vehicleid",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocations",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocations(bounds",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["global",{"_index":354,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["gradient(rgba(0,0,0,0.0",{"_index":1418,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["graph",{"_index":2229,"title":{},"body":{"modules.html":{}}}],["grayscale(100",{"_index":1431,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["greenicon",{"_index":1262,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["group",{"_index":1775,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["group(mat",{"_index":1765,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["grow",{"_index":1776,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["guard",{"_index":1785,"title":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1787,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"overview.html":{}}}],["h1(mat",{"_index":1503,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["h3",{"_index":1455,"title":{},"body":{"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{}}}],["h3(*ngif=\"hasheader(idx)\",mat",{"_index":1903,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["h3(matline",{"_index":1463,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["h3(matline,aria",{"_index":2043,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["h3(matsubheader",{"_index":1543,"title":{},"body":{"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["h3.route",{"_index":2053,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["h4",{"_index":636,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["h4(mat",{"_index":1909,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["h4(matline",{"_index":1546,"title":{},"body":{"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["hand",{"_index":1094,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["handle",{"_index":373,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handleerror",{"_index":356,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/TripPassagesComponent.html":{}}}],["handleerror(err",{"_index":1104,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["handleerror(error",{"_index":362,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handlehttperrorresponse",{"_index":357,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handlehttperrorresponse(errorresponse",{"_index":366,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.ts",{"_index":351,"title":{},"body":{"injectables/AppErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:18",{"_index":377,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:25",{"_index":364,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:47",{"_index":369,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:9",{"_index":361,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handles",{"_index":365,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["happened",{"_index":413,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["happens",{"_index":409,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["hasdepartures",{"_index":615,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["haserror",{"_index":1101,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["hasheader",{"_index":1884,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["hasheader(idx",{"_index":1887,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["hasroutes",{"_index":1530,"title":{},"body":{"components/RouteListComponent.html":{}}}],["head",{"_index":1641,"title":{},"body":{"components/SidebarComponent.html":{}}}],["header",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["heading",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{}}}],["height:100",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["height:150px",{"_index":1468,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["height:250px",{"_index":1403,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:300px",{"_index":1404,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:40px",{"_index":1368,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["height:64px",{"_index":1428,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:calc(100vw",{"_index":1405,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["help_outline",{"_index":1454,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["help_outlineh3",{"_index":1470,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["here",{"_index":2218,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":718,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["hidden",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["highaccuracy",{"_index":2086,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["hjvzmlszt0iznvsbcigdmvyc2lvbj0ims4xiib2awv3qm94psiwidagnjggnjgiihhtbg5",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holding",{"_index":670,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["home",{"_index":1451,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["host",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["hostbinding",{"_index":576,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/MapHeaderBoxComponent.html":{}}}],["hostbinding('class.no",{"_index":1398,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["hostbinding('innerhtml",{"_index":586,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["hostbindings",{"_index":559,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["hostlistener",{"_index":785,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mousedown",{"_index":797,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mouseenter",{"_index":794,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mousemove",{"_index":799,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mouseup",{"_index":791,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('resize",{"_index":814,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlisteners",{"_index":749,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["html",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlcanvaselement",{"_index":779,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["http",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["httpclient",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":363,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponses",{"_index":370,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["human",{"_index":1693,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["iactualtrippassage",{"_index":1051,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["iappnotification",{"_index":494,"title":{"interfaces/IAppNotification.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{}}}],["icon",{"_index":924,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["icon(mat",{"_index":1908,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["icon(matlisticon",{"_index":1461,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["icon(matlisticon,role=\"figure\",i18n",{"_index":2039,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["icon(matlisticon,title=\"{{status",{"_index":727,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["iconanchor",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconapp",{"_index":1373,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["icons",{"_index":1193,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["iconsize",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":859,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["identifier",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["ideparture",{"_index":621,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{}}}],["idx",{"_index":1889,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["ienvironmentbase",{"_index":948,"title":{"interfaces/IEnvironmentBase.html":{}},"body":{"interfaces/IEnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ijq2iibmawxspsj3agl0zsigb3bhy2l0et0iljuiihn0cm9rzt0id2hpdguiihn0cm9rzs13",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1416,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["imagedata",{"_index":774,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["imagery",{"_index":1002,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["imapbounds",{"_index":53,"title":{"interfaces/IMapBounds.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["imapmoveendevent",{"_index":966,"title":{"interfaces/IMapMoveEndEvent.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imapmovestartevent",{"_index":964,"title":{"interfaces/IMapMoveStartEvent.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["implements",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["import",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["imports",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["include",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1345,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator'},{'name",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["indicator.component",{"_index":1387,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["indicator.component.pug",{"_index":1559,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.scss",{"_index":1558,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts",{"_index":1557,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["indicator.component.ts:12",{"_index":1579,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts:17",{"_index":1580,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts:37",{"_index":1564,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:39",{"_index":1561,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":1563,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:49",{"_index":1562,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicatorcmp",{"_index":1568,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["info.component",{"_index":1835,"title":{},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["info.component.pug",{"_index":1677,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.scss",{"_index":1676,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.ts",{"_index":1675,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:10",{"_index":1886,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:113",{"_index":1697,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:13",{"_index":1690,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:19",{"_index":1888,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1717,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:23",{"_index":1719,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1891,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1720,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:33",{"_index":1715,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1702,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:38",{"_index":1706,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1707,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1701,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1700,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1714,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1710,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:52",{"_index":1708,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:53",{"_index":1699,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:65",{"_index":1691,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:72",{"_index":1696,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.resolver",{"_index":1836,"title":{},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{}}}],["info.resolver.ts",{"_index":1788,"title":{},"body":{"guards/StopInfoResolver.html":{},"coverage.html":{}}}],["info.resolver.ts:14",{"_index":1795,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["info.resolver.ts:28",{"_index":1800,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["information",{"_index":1790,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["init",{"_index":1227,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["initializes",{"_index":2006,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["inject",{"_index":1498,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":1495,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{},"overview.html":{}}}],["injector",{"_index":360,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["innerhtml",{"_index":560,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["input",{"_index":577,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["input(#searchinput,(blur)=\"onlosefocus()\",type=\"search\",aria",{"_index":1992,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["input('departure",{"_index":690,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["input('departures",{"_index":626,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["input('location",{"_index":877,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["input('routes",{"_index":1539,"title":{},"body":{"components/RouteListComponent.html":{}}}],["inputs",{"_index":556,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["inside",{"_index":1633,"title":{},"body":{"components/SidebarComponent.html":{},"guards/StopInfoResolver.html":{}}}],["instance",{"_index":1709,"title":{},"body":{"components/StopInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":395,"title":{},"body":{"injectables/AppErrorHandler.html":{},"directives/FollowBusMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["integer",{"_index":713,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["interactive",{"_index":925,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["interface",{"_index":507,"title":{"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["interfaces",{"_index":543,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"overview.html":{}}}],["internet",{"_index":415,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["interval",{"_index":1705,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["ipassagestatus",{"_index":1046,"title":{"interfaces/IPassageStatus.html":{}},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["isclientoffline",{"_index":358,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["isettings",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["isloading",{"_index":1862,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["issidenavopen",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["istopinfo",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{}}}],["istoplocation",{"_index":1169,"title":{},"body":{"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["istoplocations",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"guards/StopsResolver.html":{}}}],["istoppassage",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{}}}],["item",{"_index":643,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["item'},{'name",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["item(*ngfor=\"let",{"_index":632,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["item([routerlink]=\"['/stop",{"_index":1906,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item([routerlink]=\"[\\'/stop",{"_index":1913,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item(role=\"listitem",{"_index":1460,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["item.component",{"_index":1833,"title":{},"body":{"modules/StopModule.html":{}}}],["item.component.pug",{"_index":645,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.scss",{"_index":644,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts",{"_index":642,"title":{},"body":{"components/DepartureListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:19",{"_index":668,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:24",{"_index":662,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:28",{"_index":672,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:35",{"_index":654,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:45",{"_index":675,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:49",{"_index":679,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:53",{"_index":681,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:71",{"_index":683,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:75",{"_index":661,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:88",{"_index":687,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:96",{"_index":656,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.name.charat(0",{"_index":1905,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item.shortname]\",role=\"listitem",{"_index":1907,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item?.name",{"_index":1910,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["items",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["itrippassages",{"_index":545,"title":{},"body":{"interfaces/Bounds.html":{}}}],["ivehiclelocation",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ivehiclelocationlist",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["js",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1354,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["keyframes",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["l",{"_index":860,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.circle(userposition",{"_index":1029,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.circlemarker(userposition",{"_index":1031,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.control.extend",{"_index":1189,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.divicon",{"_index":915,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["l.domutil.create('i",{"_index":1191,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.featuregroup",{"_index":852,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.featuregroup(stoplist",{"_index":1272,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.icon",{"_index":1823,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["l.latlng",{"_index":1603,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(0",{"_index":1608,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(this.settings.initial_lat",{"_index":1607,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(waypoint.lat",{"_index":885,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.latlngbounds",{"_index":1044,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.layer",{"_index":903,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.map",{"_index":979,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.map(this.elref.nativeelement",{"_index":991,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.marker",{"_index":920,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.marker([location.latitude",{"_index":921,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["l.marker([stop.latitude",{"_index":1263,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.marker([vehicle.latitude",{"_index":1253,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.polyline",{"_index":850,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.polyline(pointlist",{"_index":888,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.tilelayer",{"_index":905,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":995,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["label=\"@@busstopicon\",aria",{"_index":2040,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"@@stopname",{"_index":2046,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"bus",{"_index":2041,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"number\",placeholder=\"stopname\",matinput,[formcontrol]=\"searchcontrol\",[matautocomplete]=\"auto\",i18n",{"_index":1993,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["label=\"stop",{"_index":2044,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"tab",{"_index":1768,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["label=\"toggle",{"_index":1333,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["last",{"_index":1083,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["lasttimestamp",{"_index":1086,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["lat",{"_index":934,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["layer",{"_index":904,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layer.addto(this.map",{"_index":1040,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["layer.options.attribution",{"_index":906,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layer.redraw",{"_index":907,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layout",{"_index":1353,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["lazy",{"_index":1920,"title":{},"body":{"modules/StopsModule.html":{}}}],["lbmnvzgluzz0ivvrgltgipz4ncjwhre9dvflqrsbzdmcgifbvqkxjqyanls8vvzndly9",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaf",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaflet",{"_index":861,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["leafletmapcomponent",{"_index":869,"title":{"classes/LeafletMapComponent.html":{}},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["left",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["left:0px",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["legend",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RetryDialogComponent.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["level=\"2\",title=\"{{title",{"_index":1400,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["li",{"_index":1552,"title":{},"body":{"components/RouteListComponent.html":{}}}],["line",{"_index":1780,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["line:no",{"_index":406,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["linear",{"_index":1417,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["link",{"_index":1079,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["list",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["list(*ngif=\"hasdepartures()\",role=\"list",{"_index":631,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list(*ngif=\"tripid==tripdata?.tripid\",role=\"list",{"_index":2036,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["list([departures]=\"stopinfo?.actual",{"_index":1770,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list([routes]=\"stopinfo?.routes",{"_index":1772,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list([routes]=\"stopinfo?.routes\")div.error",{"_index":1784,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list(role=\"list",{"_index":1456,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["list(role=\"list\",*ngif=\"hasroutes",{"_index":1541,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component",{"_index":1834,"title":{},"body":{"modules/StopModule.html":{}}}],["list.component.pug",{"_index":613,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.scss",{"_index":612,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.ts",{"_index":611,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":1534,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:15",{"_index":1531,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:17",{"_index":622,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.component.ts:19",{"_index":1536,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:23",{"_index":616,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.ts:26",{"_index":1533,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:30",{"_index":624,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.component.ts:38",{"_index":617,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.stoplist",{"_index":1911,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["list.stoplist(role=\"list",{"_index":1900,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["literal",{"_index":1165,"title":{},"body":{"directives/MainMapDirective.html":{},"components/NotFoundComponent.html":{}}}],["lng",{"_index":936,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["load",{"_index":517,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["loadchildren",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":1057,"title":{},"body":{"interfaces/IPassageStatus.html":{},"modules/StopsModule.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loader",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loadstops",{"_index":1848,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["loc",{"_index":1817,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["location",{"_index":546,"title":{},"body":{"interfaces/Bounds.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["location(id",{"_index":878,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["location(loc",{"_index":1818,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["location.latitude",{"_index":935,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.longitude",{"_index":922,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.name",{"_index":926,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.name.split",{"_index":917,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["location.service",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["location.service.ts",{"_index":2077,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["location.service.ts:10",{"_index":2092,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:11",{"_index":2091,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:13",{"_index":2094,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:14",{"_index":2084,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:31",{"_index":2096,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:35",{"_index":2097,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:39",{"_index":2087,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location_off",{"_index":1402,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["locationerrorobservable",{"_index":2078,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationerrorsubject",{"_index":2079,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationobservable",{"_index":2080,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationobservable.subscribe(new",{"_index":1016,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["locations",{"_index":1857,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["locationsubject",{"_index":2081,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["main",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mainmap",{"_index":1173,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mainmapdirective",{"_index":343,"title":{"directives/MainMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["mainmapmodule",{"_index":433,"title":{"modules/MainMapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainMapModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarcomponent",{"_index":310,"title":{"components/MainToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintoolbarmodule",{"_index":434,"title":{"modules/MainToolbarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainToolbarModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map((a",{"_index":1748,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map((passages",{"_index":1112,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["map((value",{"_index":1233,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map(appmainmap",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["map(appstoplocation,[location]=\"stoplocation\",role=\"none",{"_index":1763,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map(appstoplocation,[location]=\"stoplocation\",role=\"none\")mat",{"_index":1783,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map(apptrippassages,[location]=\"tripdata?.location\",role=\"none",{"_index":2025,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["map(apptrippassages,[location]=\"tripdata?.location\",role=\"none\")div.error",{"_index":2058,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["map.component",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map.component.ts",{"_index":957,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["map.component.ts:108",{"_index":1136,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:112",{"_index":1135,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:119",{"_index":1141,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:123",{"_index":1138,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:32",{"_index":2121,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["map.component.ts:37",{"_index":2122,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["map.component.ts:42",{"_index":1129,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:48",{"_index":1131,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:49",{"_index":1130,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:50",{"_index":1132,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:51",{"_index":1133,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:52",{"_index":1134,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:53",{"_index":1137,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:84",{"_index":1139,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.directive",{"_index":1285,"title":{},"body":{"modules/MainMapModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{}}}],["map.directive.ts",{"_index":828,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["map.directive.ts:107",{"_index":1163,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:116",{"_index":846,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:12",{"_index":1583,"title":{},"body":{"classes/RoutesSubscriber.html":{}}}],["map.directive.ts:136",{"_index":1159,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:142",{"_index":1157,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:15",{"_index":2124,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["map.directive.ts:154",{"_index":1155,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:16",{"_index":1584,"title":{},"body":{"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:184",{"_index":1166,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:191",{"_index":1160,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:20",{"_index":2125,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["map.directive.ts:24",{"_index":841,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:27",{"_index":1815,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:28",{"_index":1154,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:29",{"_index":1814,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:31",{"_index":1813,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:33",{"_index":843,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:37",{"_index":857,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:40",{"_index":1167,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:41",{"_index":853,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:42",{"_index":1168,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:43",{"_index":854,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:44",{"_index":851,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:46",{"_index":848,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:51",{"_index":1811,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:62",{"_index":845,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:76",{"_index":844,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:84",{"_index":1810,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.module.ts",{"_index":1283,"title":{},"body":{"modules/MainMapModule.html":{}}}],["map/main",{"_index":1143,"title":{},"body":{"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["map[appmainmap",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map[appmainmap]'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["map[appstoplocation",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["map[apptrippassages",{"_index":830,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["map[apptrippassages]'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mapbounds",{"_index":1043,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapbox",{"_index":1003,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapcontainer",{"_index":978,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapheaderboxcomponent",{"_index":312,"title":{"components/MapHeaderBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapheaderboxmodule",{"_index":1437,"title":{"modules/MapHeaderBoxModule.html":{}},"body":{"modules/MapHeaderBoxModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["mapmove",{"_index":980,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mapmoveevent",{"_index":968,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/typealiases.html":{}}}],["mapmoveeventtype",{"_index":960,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["mapmoveeventtype.end",{"_index":967,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mapmoveeventtype.start",{"_index":965,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["margin",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:#{$boxmarginvertical",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:$boxmarginvertical",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:0px",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/StopInfoComponent.html":{}}}],["margin:15px",{"_index":638,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["margin:auto",{"_index":1425,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["marker",{"_index":919,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["marker's",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marker).setrotationangle(location.heading",{"_index":928,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["marker.addto(this.stopmarkerlayer",{"_index":930,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["marker.patch",{"_index":959,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["markeronclick",{"_index":1147,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["markeronclick(event",{"_index":1158,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markers",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markert",{"_index":1252,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markert).data",{"_index":1268,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markert.data",{"_index":1258,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mat",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mat_dialog_data",{"_index":1499,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["matautocomplete",{"_index":1966,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["matautocompletemodule",{"_index":1381,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["matautocompleteselectedevent",{"_index":1964,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["matbuttonmodule",{"_index":1382,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/TripPassagesModule.html":{}}}],["matching",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1927,"title":{},"body":{"guards/StopsResolver.html":{}}}],["matdialogmodule",{"_index":1527,"title":{},"body":{"modules/RetryDialogModule.html":{},"modules/StopsModule.html":{}}}],["matdialogref",{"_index":1491,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"miscellaneous/typealiases.html":{}}}],["matdividermodule",{"_index":1383,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/SidebarModule.html":{}}}],["material",{"_index":1192,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["math.ceil(time",{"_index":711,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["math.max(value[1",{"_index":595,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["math.round((ticksleft",{"_index":1736,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["math.round(bounds.bottom",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.left",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.right",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.top",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(iconsize",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/MainToolbarModule.html":{},"modules/StopsModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1478,"title":{},"body":{"modules/NotFoundModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["matprogressbarmodule",{"_index":1384,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["matprogressspinnermodule",{"_index":1830,"title":{},"body":{"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["matsidenav",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavcontainer",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1153,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["matsnackbarmodule",{"_index":1284,"title":{},"body":{"modules/MainMapModule.html":{}}}],["mattabsmodule",{"_index":1831,"title":{},"body":{"modules/StopModule.html":{}}}],["mattoolbarmodule",{"_index":1385,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["max",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["maximumage",{"_index":2117,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["maxzoom",{"_index":1004,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mdaiighlawdodd0imtawiibmawxspsijzmzmiibvcgfjaxr5psiwii8+dqo8",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mdelay",{"_index":646,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mdeparture",{"_index":647,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mdepartures",{"_index":614,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["media",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/StopsInfoComponent.html":{}}}],["menu",{"_index":1337,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["merge",{"_index":1721,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["merge(refreshobservable",{"_index":1754,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mergemap",{"_index":863,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["mergemap(boundsa",{"_index":942,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["message",{"_index":398,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"guards/StopsResolver.html":{}}}],["metadata",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["miliseconds",{"_index":1712,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["min",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["minutes",{"_index":2119,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["miscellaneous",{"_index":2203,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["modify",{"_index":2224,"title":{},"body":{"index.html":{}}}],["module",{"_index":419,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["moduleimports",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":421,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/common/leaflet",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["modules/main",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/not",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/sidebar/sidebar.module",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/stop/stop.module#stopmodule",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/stops/stops.module#stopsmodule",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/trip",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["moment",{"_index":689,"title":{},"body":{"components/DepartureListItemComponent.html":{},"dependencies.html":{}}}],["moment(data.actualtime",{"_index":717,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment(data.plannedtime",{"_index":720,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment.duration(actual.diff(planned)).asminutes",{"_index":722,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment.moment",{"_index":716,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mousedown",{"_index":750,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousedown(e",{"_index":762,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseenter",{"_index":751,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseenter(e",{"_index":764,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousemove",{"_index":752,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousemove(e",{"_index":766,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseup",{"_index":753,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseup(e",{"_index":768,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["ms4wiiblbmnvzgluzz0ivvrgltgipz4ncjwhre9dvflqrsbzdmcgifbvqkxj",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms9eveqvc3znmteuzhrkjz4ncjxzdmcgd2lkdgg9ijy0iibozwlnahq9ijy0iibiyxnlu",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msearchopen",{"_index":1290,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["msettings",{"_index":1600,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["mstopinfo",{"_index":1679,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mstops",{"_index":1883,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["mtime",{"_index":648,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mtimerobservable",{"_index":1680,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mtimeuntilrefresh",{"_index":1681,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["multi",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["muserlocationsubscription",{"_index":981,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["my_location",{"_index":1208,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["name\",i18n",{"_index":2045,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["name.split",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nav",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/NotFoundComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["nav(#sidenav,mode=\"over",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["navigation",{"_index":1356,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["navigationcancel",{"_index":1565,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationend",{"_index":1308,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationerror",{"_index":1566,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationstart",{"_index":1309,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationsubscriber",{"_index":1314,"title":{"classes/NavigationSubscriber.html":{}},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["navigationsubscriber(this",{"_index":1319,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["navigator",{"_index":385,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["navigator.geolocation",{"_index":2106,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation.getcurrentposition(geosuccess",{"_index":2115,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.online",{"_index":391,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["necessary",{"_index":985,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["need",{"_index":2222,"title":{},"body":{"index.html":{}}}],["needed",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["needs",{"_index":1228,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["negative",{"_index":664,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["new",{"_index":499,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["newimage",{"_index":748,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["next",{"_index":405,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/NavigationSubscriber.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["next(event",{"_index":1315,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["next(res",{"_index":1174,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["next(routes",{"_index":874,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["next(stops",{"_index":1843,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["next(value",{"_index":971,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["ng",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/StopsInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":836,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ngmodule",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["ngondestroy",{"_index":555,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ngoninit",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["ngsw",{"_index":2214,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":840,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["none",{"_index":961,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["not(:first",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["not_found",{"_index":1061,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundcomponent",{"_index":316,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notfoundmodule",{"_index":1472,"title":{"modules/NotFoundModule.html":{}},"body":{"modules/NotFoundModule.html":{},"modules.html":{},"overview.html":{}}}],["notfoundroutingmodule",{"_index":1476,"title":{"modules/NotFoundRoutingModule.html":{}},"body":{"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["noti",{"_index":497,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notifcations",{"_index":501,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notification",{"_index":374,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"miscellaneous/enumerations.html":{}}}],["notification.service",{"_index":390,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["notification.service.ts",{"_index":487,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["notification.service.ts:49",{"_index":492,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:56",{"_index":495,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:63",{"_index":503,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notificationobservable",{"_index":491,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notificationservice",{"_index":367,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["notificationservice.notify",{"_index":397,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["notificationsubject",{"_index":489,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notify",{"_index":490,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notify(noti",{"_index":493,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["null",{"_index":941,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["num",{"_index":940,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["number",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":669,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{}}}],["observable",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/IAppNotification.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["observable((subscriber",{"_index":2108,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["observables",{"_index":1123,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["occured",{"_index":402,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["occurs",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offline",{"_index":386,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["ogym9szcazmnb4ihnhbnmtc2vyawy7ignvbg9yonb1cnbsztsgftwvc3r5bgu+dqo8bwfza",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1515,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["onadd",{"_index":1190,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["once",{"_index":1229,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ondestroy",{"_index":550,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ondown(e",{"_index":800,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["one",{"_index":619,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["onenter(e",{"_index":795,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onfocussearch",{"_index":1292,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["onfocussearch(event",{"_index":1297,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["oninit",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["online",{"_index":380,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["onlosefocus",{"_index":1952,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onmove(e",{"_index":798,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onnoclick",{"_index":1489,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["onresize(e",{"_index":815,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onstopselected",{"_index":1953,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onstopselected(stop",{"_index":1963,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onup(e",{"_index":792,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onvoted",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["onvoted(agreed",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["opacity",{"_index":891,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["opacity:0.4",{"_index":1367,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["open",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["open':(searchopen===true),'navigation",{"_index":1328,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["open\\':(searchopen===true),\\'navigation",{"_index":1371,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["opensidebar",{"_index":1659,"title":{},"body":{"injectables/SidebarService.html":{},"modules/StopRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["openstreetmap",{"_index":998,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["option",{"_index":1999,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["option(*ngfor=\"let",{"_index":1998,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["option.name",{"_index":2001,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["option.name.tolowercase().includes(value",{"_index":1990,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["options",{"_index":1217,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["order",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"index.html":{}}}],["order:2",{"_index":1363,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["order:3",{"_index":1365,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["otherwise",{"_index":382,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["ourcustomcontrol",{"_index":1188,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["out",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["outlet",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":786,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["outputs",{"_index":747,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["outside",{"_index":1551,"title":{},"body":{"components/RouteListComponent.html":{}}}],["overflow",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["overflow:auto",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow:hidden",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow:none",{"_index":1407,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["overlay",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["overlayzindex",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["overservable",{"_index":1703,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["overview",{"_index":2231,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1505,"title":{},"body":{"components/RetryDialogComponent.html":{},"components/StopInfoComponent.html":{}}}],["p(*ngif=\"data.code",{"_index":1507,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["p(matline",{"_index":1643,"title":{},"body":{"components/SidebarComponent.html":{},"components/TripPassagesComponent.html":{}}}],["package",{"_index":1634,"title":{"dependencies.html":{}},"body":{"components/SidebarComponent.html":{},"miscellaneous/functions.html":{}}}],["padding",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["padding:0px",{"_index":1554,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["padding:20px",{"_index":1410,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["padding:5px",{"_index":1778,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["param",{"_index":410,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"classes/UserLocationSubscriber.html":{}}}],["parameter",{"_index":1791,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["params",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{}}}],["passage",{"_index":633,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{},"components/TripPassagesComponent.html":{}}}],["passage.directions",{"_index":1545,"title":{},"body":{"components/RouteListComponent.html":{}}}],["passage?.actualtime",{"_index":2049,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.shortname",{"_index":1544,"title":{},"body":{"components/RouteListComponent.html":{}}}],["passage?.status",{"_index":2052,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.stop?.name",{"_index":2047,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.stop?.shortname]\",role=\"listitem",{"_index":2038,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.component",{"_index":2070,"title":{},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.component.pug",{"_index":1067,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["passages.component.scss",{"_index":1066,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["passages.component.ts",{"_index":1047,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passages.component.ts:101",{"_index":2022,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:109",{"_index":2004,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:113",{"_index":2003,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:142",{"_index":2005,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:170",{"_index":2007,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:34",{"_index":2008,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:35",{"_index":2011,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:36",{"_index":2010,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:37",{"_index":2009,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:38",{"_index":2002,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:55",{"_index":2013,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:66",{"_index":2015,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:77",{"_index":2017,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:87",{"_index":2019,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:94",{"_index":2021,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.module#trippassagesmodule",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["passages.module.ts",{"_index":2067,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["passages.resolver",{"_index":2072,"title":{},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.resolver.ts",{"_index":2073,"title":{},"body":{"guards/TripPassagesResolver.html":{},"coverage.html":{}}}],["passages.resolver.ts:12",{"_index":2075,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["passages.resolver.ts:9",{"_index":2074,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["passages/follow",{"_index":826,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["passages/trip",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passages?mode=departure",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundRoutingModule.html":{},"classes/RoutesSubscriber.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["path.color",{"_index":890,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["path.waypoints",{"_index":883,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["paths",{"_index":849,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["paused",{"_index":1058,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pg0kpc9mawx0zxi+dqo8l2rlznm+dqo8bwfzaybpzd0iysi+dqo8cmvjdcb3",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg0kphrlehqgy2xhc3m9imhlyxz5iib4psiznciget0indyiigzpbgw9imjsywnriibzdhjv",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":938,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pipe(catcherror((err",{"_index":1806,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["pipe(debouncetime(30000",{"_index":2099,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["pipe(map((a",{"_index":1740,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["pipe(map((stops",{"_index":1988,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["pipe(map((tapedvalue",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(map((value",{"_index":593,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["pipe(tap((value",{"_index":1615,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["place",{"_index":1452,"title":{},"body":{"components/NotFoundComponent.html":{},"components/StopsInfoComponent.html":{}}}],["placeholder",{"_index":557,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["placeholder=\"stopname",{"_index":1994,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["planned",{"_index":719,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["point",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point.service",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["point.service.ts",{"_index":1838,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["point.service.ts:13",{"_index":1844,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:17",{"_index":1842,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:21",{"_index":1841,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:30",{"_index":1873,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:31",{"_index":1870,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:35",{"_index":1872,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:42",{"_index":1875,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:45",{"_index":1877,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:49",{"_index":1871,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:58",{"_index":1879,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:62",{"_index":1881,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:7",{"_index":1840,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["pointer",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pointlist",{"_index":881,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pointlist.push(new",{"_index":884,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pollsubscription",{"_index":1071,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["popup",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popupanchor",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pos",{"_index":743,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pos.coords.latitude",{"_index":1213,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pos.coords.longitude",{"_index":1214,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["position",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["position:fixed",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["positionerror",{"_index":2113,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["positive",{"_index":663,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["preceeding",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prediction",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["predictions",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["preload",{"_index":515,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preload(route",{"_index":516,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloading",{"_index":512,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preloadingstrategy",{"_index":514,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["pressed=\"false",{"_index":1336,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["primedmoveobservable",{"_index":1230,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["private",{"_index":488,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["production",{"_index":951,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":1576,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["promise",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1612,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["properties",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["protected",{"_index":975,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["provide",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":620,"title":{},"body":{"components/DepartureListComponent.html":{},"directives/MainMapDirective.html":{},"guards/StopInfoResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"index.html":{}}}],["providedin",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["providers",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["public",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["publish",{"_index":496,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["pug",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["pwa",{"_index":952,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["query_builder",{"_index":706,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["queryparams",{"_index":1108,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["qyanls8vvzndly9eveqgu1zhideums8vru4nicanahr0cdovl3d3dy53my5v",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["reactiveformsmodule",{"_index":1379,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["readable",{"_index":1694,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["readonly",{"_index":955,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/NotFoundComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{}}}],["reads",{"_index":2209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["red",{"_index":1516,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["redirects",{"_index":1792,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["redirectto",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refreshobservable",{"_index":1746,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["reject",{"_index":1613,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["relative",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1118,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["remaining",{"_index":1347,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["replaying",{"_index":500,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["reportable",{"_index":400,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["res",{"_index":2126,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["reset",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["resize",{"_index":754,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["resize(e",{"_index":770,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["resolve",{"_index":1591,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["resolve(route",{"_index":1796,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["resolver",{"_index":1925,"title":{},"body":{"guards/StopsResolver.html":{}}}],["resolves",{"_index":1789,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["responds",{"_index":1793,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["response",{"_index":372,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopsResolver.html":{}}}],["result",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retried",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1095,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["retrieved",{"_index":1085,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["retrieving",{"_index":2028,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["retry",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["retrydialogcomponent",{"_index":318,"title":{"components/RetryDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["retrydialogdata",{"_index":1492,"title":{"classes/RetryDialogData.html":{}},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"coverage.html":{}}}],["retrydialogmodule",{"_index":1521,"title":{"modules/RetryDialogModule.html":{}},"body":{"modules/RetryDialogModule.html":{},"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["retrydialogstrategy",{"_index":1935,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["retrydialogstrategyfunc",{"_index":2241,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrydialogstrategyfuncresponse",{"_index":2242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["retrying",{"_index":2033,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["retrywhen",{"_index":1934,"title":{},"body":{"guards/StopsResolver.html":{}}}],["retrywhen(retrydialogstrategy((error",{"_index":1941,"title":{},"body":{"guards/StopsResolver.html":{}}}],["return",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/functions.html":{}}}],["rgb(87",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0,0,0,0.7",{"_index":1419,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["rgba(255,255,255,0.1",{"_index":1369,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["right",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["right:$rightpadding",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["right:0px",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["right:unset",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["rightpadding",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["riseoffset",{"_index":1265,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["riseonhover",{"_index":1266,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["root",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["root'},{'name",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["rotated",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotatedmarker",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["rotating",{"_index":958,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["rotationangle",{"_index":1255,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["round",{"_index":807,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["route",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"index.html":{}}}],["route.path.startswith('not",{"_index":522,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["routelistcomponent",{"_index":321,"title":{"components/RouteListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeloadingindicatorcomponent",{"_index":322,"title":{"components/RouteLoadingIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeloadingsubscriber",{"_index":1567,"title":{"classes/RouteLoadingSubscriber.html":{}},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["routeloadingsubscriber(this",{"_index":1574,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["routename",{"_index":1096,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["routepolylines",{"_index":831,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["router",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["routerevent",{"_index":1310,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["routermodule",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainToolbarModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["routermodule.forchild(trippassagesroute",{"_index":1481,"title":{},"body":{"modules/NotFoundRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":1803,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["routerstatesnapshot",{"_index":1799,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["routes",{"_index":526,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routes(*ngif=\"!hasroutes",{"_index":1547,"title":{},"body":{"components/RouteListComponent.html":{}}}],["routes(deps",{"_index":1540,"title":{},"body":{"components/RouteListComponent.html":{}}}],["routesnapshot",{"_index":1802,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["routessubscriber",{"_index":871,"title":{"classes/RoutesSubscriber.html":{}},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["routessubscriber(this",{"_index":945,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["routes|routes@@routes\",label=\"routes",{"_index":1771,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["routing.module",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/NotFoundModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["routing.module.ts",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NotFoundRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["row",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["run",{"_index":563,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["rxjs",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":582,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["sa",{"_index":1001,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["same",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1312,"title":{},"body":{"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["search'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["search((focussearch)=\"onfocussearch($event",{"_index":1338,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["search@@stopnametosearch",{"_index":1996,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["search@@stopnametosearch\",i18n",{"_index":1995,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchborderradius",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["searchboxcomponent",{"_index":1291,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["searchcontrol",{"_index":1948,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchinput",{"_index":1949,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchopen",{"_index":1294,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["searchopen(open",{"_index":1321,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["seconds@@refreshinginxseconds\",subtitle=\"refreshing",{"_index":1761,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["seems",{"_index":984,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["select",{"_index":1406,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["selector",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["self",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":411,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopInfoResolver.html":{}}}],["server_error",{"_index":1063,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":375,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["services",{"_index":1056,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["services/app",{"_index":389,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["services/settings.service",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["services/sidebar.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["services/stop",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["services/user",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["serviceworkermodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":583,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setdeparture(deps",{"_index":677,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["setdepartures(deps",{"_index":625,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["setlocation(id",{"_index":858,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["setlocation(loc",{"_index":1816,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["setposition",{"_index":746,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["setposition(e",{"_index":776,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["setroutepaths",{"_index":837,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["setroutepaths(paths",{"_index":847,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["setroutes(deps",{"_index":1537,"title":{},"body":{"components/RouteListComponent.html":{}}}],["sets",{"_index":565,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setsearchopen(open",{"_index":1306,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["setstoplocations(locations",{"_index":1876,"title":{},"body":{"injectables/StopPointService.html":{}}}],["settargettime(timestamp",{"_index":575,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["settimeout",{"_index":1977,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["settings",{"_index":976,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["settings.scss",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["settingsinitializer",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsloadsubscriber",{"_index":1585,"title":{"classes/SettingsLoadSubscriber.html":{}},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["settingsloadsubscriber(resolve",{"_index":1617,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":436,"title":{"injectables/SettingsService.html":{}},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":1128,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["setuserlocation(coords",{"_index":1020,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setvehicles",{"_index":1148,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["setvehicles(vehicles",{"_index":1161,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["setview(this.settings.getinitialmapcenter",{"_index":993,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["shadow",{"_index":1413,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["shadow.png",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowanchor",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowsize",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowurl",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":1093,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["sidebar",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar\",role=\"button\",aria",{"_index":1335,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["sidebar'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["sidebar.component",{"_index":1655,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.pug",{"_index":1626,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1625,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar@@togglesidebar\",aria",{"_index":1334,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["sidebarcomponent",{"_index":325,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":435,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidebarobservable",{"_index":1657,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidebaropen",{"_index":1660,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidebarservice",{"_index":137,"title":{"injectables/SidebarService.html":{}},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"coverage.html":{}}}],["sidebarstatussubject",{"_index":1658,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidenav",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav.main",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavcontainer",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":987,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["size",{"_index":1421,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["smoothfactor",{"_index":893,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["snackbar",{"_index":1152,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["snapshot",{"_index":1932,"title":{},"body":{"guards/StopsResolver.html":{}}}],["snapshotdatasubscription",{"_index":1070,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["solid",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["sourcetarget",{"_index":1276,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["space",{"_index":1348,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["span(appcountdowntimer,[targettime]=\"lasttimestamp",{"_index":2034,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(class=\"demo",{"_index":2050,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(role=\"timer",{"_index":2048,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span.delay",{"_index":639,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["span.pattern",{"_index":728,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["span.subtitle",{"_index":1422,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.subtitle(*ngif=\"subtitle!==undefined\",title=\"{{subtitle",{"_index":1401,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.text",{"_index":2032,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span.title",{"_index":1420,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["span.title(*ngif=\"title!==undefined\",trole=\"heading\",aria",{"_index":1399,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.title(i18n=\"@@anerroroccured",{"_index":2031,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span[appcountdowntimer",{"_index":551,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["span[appcountdowntimer]'},{'name",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["src/.../app",{"_index":2205,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.module.ts",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.example.pwa.ts",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.example.ts",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../icons.ts",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../leaflet",{"_index":2206,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../retry",{"_index":2238,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../trip",{"_index":2207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":349,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/drawable.directive.ts",{"_index":740,"title":{},"body":{"directives/DrawableDirective.html":{},"coverage.html":{}}}],["src/app/drawable.directive.ts:11",{"_index":757,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:15",{"_index":775,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:21",{"_index":769,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:26",{"_index":765,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:31",{"_index":763,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:36",{"_index":767,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:56",{"_index":771,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:61",{"_index":777,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:66",{"_index":772,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:7",{"_index":784,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:70",{"_index":773,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:8",{"_index":782,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:9",{"_index":780,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/leaflet",{"_index":865,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["src/app/leaflet/constants.ts",{"_index":2138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/leaflet/icons.ts",{"_index":2141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models",{"_index":1055,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["src/app/models/index.ts",{"_index":544,"title":{},"body":{"interfaces/Bounds.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/common/countdown",{"_index":547,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"coverage.html":{}}}],["src/app/modules/common/leaflet",{"_index":956,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/common/map",{"_index":1388,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"coverage.html":{}}}],["src/app/modules/common/retry",{"_index":1482,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"coverage.html":{}}}],["src/app/modules/main",{"_index":1142,"title":{},"body":{"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["src/app/modules/not",{"_index":1445,"title":{},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"modules/NotFoundRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts",{"_index":1624,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:14",{"_index":1630,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:22",{"_index":1632,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:30",{"_index":1636,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:9",{"_index":1629,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.module.ts",{"_index":1654,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/modules/stop/departure",{"_index":610,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"coverage.html":{}}}],["src/app/modules/stop/route",{"_index":1529,"title":{},"body":{"components/RouteListComponent.html":{},"coverage.html":{}}}],["src/app/modules/stop/stop",{"_index":1674,"title":{},"body":{"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/stop/stop.module.ts",{"_index":1829,"title":{},"body":{"modules/StopModule.html":{}}}],["src/app/modules/stops/stops",{"_index":1882,"title":{},"body":{"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/stops/stops.module.ts",{"_index":1919,"title":{},"body":{"modules/StopsModule.html":{}}}],["src/app/modules/stops/stops.resolver.ts",{"_index":1924,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{}}}],["src/app/modules/stops/stops.resolver.ts:16",{"_index":1928,"title":{},"body":{"guards/StopsResolver.html":{}}}],["src/app/modules/stops/stops.resolver.ts:32",{"_index":1929,"title":{},"body":{"guards/StopsResolver.html":{}}}],["src/app/modules/trip",{"_index":825,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/rxjs",{"_index":1936,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/services",{"_index":866,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:11",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:15",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:19",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:22",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:25",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:28",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:31",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:34",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:44",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:48",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:52",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app",{"_index":486,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/settings.service",{"_index":867,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts",{"_index":1586,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings.service.ts:13",{"_index":1594,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":1592,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts:29",{"_index":1619,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:35",{"_index":1623,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:39",{"_index":1620,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:47",{"_index":1621,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:54",{"_index":1622,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:8",{"_index":1590,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/sidebar.service",{"_index":1311,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/SidebarComponent.html":{}}}],["src/app/services/sidebar.service.ts",{"_index":1656,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/services/sidebar.service.ts:14",{"_index":1669,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:18",{"_index":1664,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:22",{"_index":1663,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:26",{"_index":1662,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:8",{"_index":1667,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:9",{"_index":1661,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/stop",{"_index":1722,"title":{},"body":{"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":868,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["src/environments/app",{"_index":2168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/environments/environment.base.ts",{"_index":949,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":2170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.example",{"_index":1637,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/environments/environment.example.pwa.ts",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.example.ts",{"_index":2172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":1893,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["start",{"_index":962,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2211,"title":{"index.html":{}},"body":{}}],["startupdater",{"_index":1809,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["startvehicleupdater",{"_index":1149,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["startwith",{"_index":1170,"title":{},"body":{"directives/MainMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["state",{"_index":1798,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["statements",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":1930,"title":{},"body":{"guards/StopsResolver.html":{}}}],["stations",{"_index":1926,"title":{},"body":{"guards/StopsResolver.html":{}}}],["stationsresponse",{"_index":1938,"title":{},"body":{"guards/StopsResolver.html":{}}}],["status",{"_index":652,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"components/TripPassagesComponent.html":{}}}],["statuscode",{"_index":1090,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["statusicon",{"_index":651,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["statusops",{"_index":1072,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["stop",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.longitude",{"_index":1264,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.name",{"_index":1267,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.option.value",{"_index":1981,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["stop.option.value.shortname",{"_index":1983,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["stop.shortname",{"_index":1860,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stop_icon_shadow_url",{"_index":2139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stop_icon_url",{"_index":2140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stopicon",{"_index":1822,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["stopid",{"_index":1687,"title":{},"body":{"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{}}}],["stopidobvservable",{"_index":1738,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["stopidobvservable.pipe(map((id",{"_index":1742,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["stopinfo",{"_index":1688,"title":{},"body":{"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{}}}],["stopinfocomponent",{"_index":327,"title":{"components/StopInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopinforesolver",{"_index":1786,"title":{"guards/StopInfoResolver.html":{}},"body":{"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"coverage.html":{}}}],["stoplist",{"_index":1261,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stoplist.push(markert",{"_index":1269,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stoploadsubscription",{"_index":1847,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocation",{"_index":1682,"title":{},"body":{"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["stoplocationmapdirective",{"_index":345,"title":{"directives/StopLocationMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stoplocations",{"_index":1853,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocations(locations",{"_index":1855,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationsobservable",{"_index":1864,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationssubject",{"_index":1846,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationsubject",{"_index":1808,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["stopmarkerlayer",{"_index":832,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopmarkeronclick",{"_index":1150,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["stopmarkeronclick(event",{"_index":1164,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopmodule",{"_index":1824,"title":{"modules/StopModule.html":{}},"body":{"modules/StopModule.html":{},"modules.html":{},"overview.html":{}}}],["stoppointloadsubscriber",{"_index":1837,"title":{"classes/StopPointLoadSubscriber.html":{}},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["stoppointloadsubscriber(this",{"_index":1852,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoppointservice",{"_index":437,"title":{"injectables/StopPointService.html":{}},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["stoproutingmodule",{"_index":1828,"title":{"modules/StopRoutingModule.html":{}},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["stops",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stops.filter(option",{"_index":1989,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["stops.resolver",{"_index":1923,"title":{},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["stops;let",{"_index":1901,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["stopservice",{"_index":1151,"title":{},"body":{"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopshortname",{"_index":1861,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stopsinfocomponent",{"_index":330,"title":{"components/StopsInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopsmodule",{"_index":1914,"title":{"modules/StopsModule.html":{}},"body":{"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["stopsresolver",{"_index":1922,"title":{"guards/StopsResolver.html":{}},"body":{"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"coverage.html":{}}}],["stopsroutingmodule",{"_index":1918,"title":{"modules/StopsRoutingModule.html":{}},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["strategy",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.ts",{"_index":513,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategy.ts:5",{"_index":519,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stretch",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["string",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["stuff",{"_index":1644,"title":{},"body":{"components/SidebarComponent.html":{}}}],["style",{"_index":1549,"title":{},"body":{"components/RouteListComponent.html":{}}}],["styles",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["subdomains",{"_index":1006,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["subheader",{"_index":1904,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["subject",{"_index":498,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["subscribe((location",{"_index":910,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["subscribe((open",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((stop",{"_index":1744,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subscribe((stops",{"_index":1260,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscribe((val",{"_index":2103,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscribe(new",{"_index":944,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscribe(this.updatedata.bind(this",{"_index":1757,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subscriber",{"_index":580,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscriber((val",{"_index":1114,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["subscriber.complete",{"_index":2111,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscriber.error(error",{"_index":2114,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscriber.next(position",{"_index":2110,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscription",{"_index":573,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subtitle",{"_index":1394,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["subtitle=\"refreshing",{"_index":1760,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subtitle}}mat",{"_index":1436,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["successfully",{"_index":2221,"title":{},"body":{"index.html":{}}}],["super",{"_index":873,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super(elref",{"_index":876,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super.ngafterviewinit",{"_index":896,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super.ngondestroy",{"_index":946,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["support",{"_index":2226,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":379,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["svg",{"_index":2227,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":697,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["tab",{"_index":1764,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tab(i18n",{"_index":1767,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["table",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["tabs,[dynamicheight]=\"true",{"_index":1766,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tag",{"_index":381,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["taken",{"_index":1245,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["tap",{"_index":1596,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["tapedvalue",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targettime",{"_index":558,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["targettime(timestamp",{"_index":584,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["template",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["test",{"_index":1944,"title":{},"body":{"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{}}}],["testmat",{"_index":2060,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["text",{"_index":587,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["text(*ngif=\"delay!==false\",[ngclass]=\"{'late':(delay>0),'early':(delay",{"_index":729,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text(*ngif=\"delay!==false\",[ngclass]=\"{\\'late\\':(delay>0),\\'early\\':(delay",{"_index":739,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.early",{"_index":736,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.late",{"_index":733,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.late:before",{"_index":735,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["thanks",{"_index":1512,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["this.activatedroute.snapshot.data.stops.stops.sort((a",{"_index":1894,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.addmarker",{"_index":897,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.addvehiclemarker(veh).addto(this.vehiclemarkerlayer",{"_index":1186,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.api",{"_index":1804,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["this.api.getstations",{"_index":1850,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.api.gettrippassages(route.params['tripid",{"_index":2076,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["this.apiservice.getroutebytripid(boundsa.tripid",{"_index":943,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.apiservice.getsettings",{"_index":1614,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.apiservice.getstoppassages(stopid",{"_index":1751,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.apiservice.gettrippassages(tripid",{"_index":1111,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.apiservice.getvehiclelocations(bounds",{"_index":1242,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.calculatedelay(deps",{"_index":694,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.canvas",{"_index":787,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.canvas.getcontext('2d",{"_index":790,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.cmp.setuserlocation(value",{"_index":972,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.converttime(deps",{"_index":696,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.createpositionrequest",{"_index":2101,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.ctx",{"_index":789,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.beginpath",{"_index":802,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.canvas.height",{"_index":818,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.canvas.width",{"_index":816,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.clearrect(0",{"_index":823,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.getimagedata(0",{"_index":824,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.linecap",{"_index":806,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.lineto(this.pos.x",{"_index":812,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.linewidth",{"_index":804,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.moveto(this.pos.x",{"_index":810,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.stroke",{"_index":813,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.strokestyle",{"_index":808,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.dialog.open(retrydialogcomponent",{"_index":1942,"title":{},"body":{"guards/StopsResolver.html":{}}}],["this.dialogref.close(false",{"_index":1502,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["this.dofocussearch",{"_index":1976,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.el.nativeelement",{"_index":788,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.erroroccured",{"_index":1727,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.filteredoptions",{"_index":1985,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.focussearch.next(false",{"_index":1980,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.getmap().addcontrol(new",{"_index":1223,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().doubleclickzoom.disable",{"_index":900,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().dragging.disable",{"_index":898,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().eachlayer((layer",{"_index":902,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().flyto(this.settings.getinitialmapcenter",{"_index":1224,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().panto",{"_index":931,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().scrollwheelzoom.disable",{"_index":901,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().touchzoom.disable",{"_index":899,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.handlehttperrorresponse(error",{"_index":396,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.http.get(this.baseurl",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.indicatorcmp.loading",{"_index":1569,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.injector.get(appnotificationservice",{"_index":394,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.isclientoffline",{"_index":414,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.isloading",{"_index":1866,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.loadstops",{"_index":1867,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.locationerrorobservable",{"_index":2098,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.asobservable",{"_index":2090,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.next(err",{"_index":2102,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.next(undefined",{"_index":2104,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.asobservable",{"_index":2093,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.next(val",{"_index":2105,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.value",{"_index":2107,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.mainmap.setvehicles(res",{"_index":1175,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.map",{"_index":990,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.getbounds",{"_index":1042,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.on('moveend",{"_index":1012,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.on('movestart",{"_index":1010,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.setroutepaths(routes.paths",{"_index":875,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.mapbounds.geteast",{"_index":1240,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getnorth",{"_index":1241,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getsouth",{"_index":1238,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getwest",{"_index":1239,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapmove.next",{"_index":1011,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.mapmove.pipe",{"_index":1231,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.markeronclick.bind(this",{"_index":1180,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mdelay",{"_index":693,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdeparture",{"_index":692,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdeparture.status",{"_index":698,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdepartures",{"_index":628,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["this.mdepartures.length",{"_index":630,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["this.msearchopen",{"_index":1320,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.msettings",{"_index":1601,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.mstopinfo",{"_index":1723,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mstops",{"_index":1896,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.mtime",{"_index":695,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mtimerobservable",{"_index":1730,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mtimerobservable.subscribe((tick",{"_index":1733,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mtimeuntilrefresh",{"_index":1725,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.muserlocationsubscription",{"_index":1014,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.muserlocationsubscription.unsubscribe",{"_index":1045,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.newimage.emit(this.getimgdata",{"_index":793,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.notificationsubject.asobservable",{"_index":509,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["this.notificationsubject.next(noti",{"_index":508,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["this.pollsubscription",{"_index":1125,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.pollsubscription.unsubscribe",{"_index":1126,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.pos.x",{"_index":820,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.pos.y",{"_index":811,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.resolve",{"_index":1598,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.route.data.pipe(map((value",{"_index":1755,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.data.subscribe((data",{"_index":1075,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.route.params",{"_index":1739,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.data.stopinfo",{"_index":1724,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.params.stopid",{"_index":1726,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.params.tripid",{"_index":1092,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.route.snapshot.params['tripid",{"_index":1109,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.routepolylines.push(firstpolyline",{"_index":895,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.router",{"_index":1572,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.router.events.subscribe(new",{"_index":1318,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.router.navigate(['/stop",{"_index":1982,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.router.navigate(['error",{"_index":1939,"title":{},"body":{"guards/StopsResolver.html":{}}}],["this.router.navigate(['not",{"_index":1107,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{}}}],["this.router.navigate(['passages",{"_index":1248,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.router.navigate(['stop",{"_index":1277,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.router.navigate(['stops",{"_index":1807,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["this.searchboxcomponent",{"_index":1324,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchboxcomponent.dofocussearch",{"_index":1325,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchcontrol.setvalue",{"_index":1975,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchcontrol.valuechanges",{"_index":1986,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchinput.nativeelement.focus",{"_index":1978,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchinput.nativeelement.select",{"_index":1979,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchopen",{"_index":1323,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["this.service.stoplocations",{"_index":1845,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.setposition(e",{"_index":796,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.settings",{"_index":1604,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.getinitialmapzoom",{"_index":994,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.settings.initial_lat",{"_index":1605,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.initial_lon",{"_index":1606,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.initial_zoom",{"_index":1610,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.sidebarservice.closesidebar",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sidebarservice.opensidebar",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarservice.sidebarobservable",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarservice.togglesidebar",{"_index":1322,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.sidebarstatussubject.asobservable",{"_index":1665,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.next(!this.sidebarstatussubject.getvalue",{"_index":1671,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.next(false",{"_index":1673,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.next(true",{"_index":1672,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.value",{"_index":1670,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidenav.close",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.open",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.opened",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.openedchange.subscribe((open",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.toggle",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open('no",{"_index":1215,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.snapshotdatasubscription",{"_index":1074,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.snapshotdatasubscription.unsubscribe",{"_index":1124,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.startupdater",{"_index":1820,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.startvehicleupdater",{"_index":1187,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.status.next",{"_index":1076,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.next(this.status.value",{"_index":1120,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.next(val",{"_index":1116,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value",{"_index":1081,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.passages",{"_index":1082,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.status",{"_index":1091,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.timestamp",{"_index":1087,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.statuscode",{"_index":1102,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.stopid",{"_index":1729,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stoploadsubscription",{"_index":1849,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoploadsubscription.closed",{"_index":1863,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocation",{"_index":1745,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stoplocations",{"_index":1859,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocations.length",{"_index":1865,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationssubject.asobservable",{"_index":1868,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationssubject.next(locations",{"_index":1856,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationssubject.value",{"_index":1854,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationsubject",{"_index":1821,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.stoplocationsubject.next(loc",{"_index":1819,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer",{"_index":911,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stopmarkerlayer.addto(this.getmap",{"_index":913,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer.clearlayers",{"_index":912,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer.remove",{"_index":1270,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stopmarkeronclick.bind(this",{"_index":1275,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stops[idx",{"_index":1898,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.stops[idx].name.charat(0",{"_index":1897,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.stopservice.getstoplocation(id",{"_index":1743,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stopservice.stoplocationsobservable",{"_index":1259,"title":{},"body":{"directives/MainMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.subscription",{"_index":1571,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.subscription.unsubscribe",{"_index":1575,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.tickinterval",{"_index":1732,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.tickstorefresh",{"_index":1735,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.timestamp",{"_index":588,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.timestampsubject",{"_index":592,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.timestampsubject.next(timestamp",{"_index":585,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.toolbar.closeable",{"_index":1317,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.tripdata",{"_index":1097,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripdata.actual",{"_index":1099,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripdata.routename",{"_index":1098,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripid",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.updateobservable",{"_index":908,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.updateobservable.unsubscribe",{"_index":947,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.updatesubscription",{"_index":589,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":598,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.userlocationlayer",{"_index":1022,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationlayer.addto(this.map",{"_index":1024,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationlayer.clearlayers",{"_index":1023,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationservice",{"_index":1015,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationservice.location",{"_index":1212,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclelocationsubject",{"_index":909,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclelocationsubject.getvalue",{"_index":880,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclelocationsubject.next(id",{"_index":879,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclemarkerlayer",{"_index":1176,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.addto(this.getmap",{"_index":1178,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.clearlayers",{"_index":1177,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.on('click",{"_index":1179,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehicleupdatesubscription",{"_index":1232,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehicleupdatesubscription.unsubscribe",{"_index":1279,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.zone.run",{"_index":1247,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.zone.runoutsideangular",{"_index":983,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["throw",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwerror",{"_index":1933,"title":{},"body":{"guards/StopsResolver.html":{}}}],["throwerror(err",{"_index":1940,"title":{},"body":{"guards/StopsResolver.html":{}}}],["tick",{"_index":1711,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tickinterval",{"_index":1683,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["ticksleft",{"_index":1734,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tickstorefresh",{"_index":1684,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["time",{"_index":562,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["timeout",{"_index":2088,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["timer",{"_index":579,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["timer(this.tickinterval",{"_index":1731,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["timer.directive",{"_index":609,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["timer.directive.ts",{"_index":549,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"coverage.html":{}}}],["timer.directive.ts:13",{"_index":569,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:14",{"_index":574,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:15",{"_index":572,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:21",{"_index":561,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:27",{"_index":564,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:35",{"_index":566,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:39",{"_index":568,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:56",{"_index":567,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.module.ts",{"_index":603,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["timer/countdown",{"_index":548,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"coverage.html":{}}}],["timestamp",{"_index":552,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["timestampsubject",{"_index":553,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timeuntilrefresh",{"_index":1686,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["timeuntilrefresh}}s",{"_index":1762,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["title=\"@@stopname\",i18n",{"_index":1759,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["toggle",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["toggle(mat",{"_index":1330,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["togglesearch",{"_index":1293,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["togglesidebar",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"injectables/SidebarService.html":{}}}],["toolbar",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["toolbar'},{'name",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["toolbar(color=\"primary\",[ngclass]=\"{'search",{"_index":1327,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar(color=\"primary\",[ngclass]=\"{\\'search",{"_index":1370,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component",{"_index":1386,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["toolbar.component.pug",{"_index":1288,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["toolbar.component.scss",{"_index":1287,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["toolbar.component.ts",{"_index":1286,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["toolbar.component.ts:12",{"_index":1444,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["toolbar.component.ts:27",{"_index":1295,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":1305,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:38",{"_index":1307,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:42",{"_index":1303,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:44",{"_index":1301,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:46",{"_index":1296,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:49",{"_index":1300,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:53",{"_index":1298,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:56",{"_index":1299,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:7",{"_index":1443,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["toolbar.main",{"_index":1326,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.module",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.module.ts",{"_index":1377,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["toolbar/main",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["toolbar/route",{"_index":1556,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["toolbar/search",{"_index":1945,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["toolbarsearchboxcomponent",{"_index":332,"title":{"components/ToolbarSearchBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["top:0px",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["top:100px",{"_index":1912,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["topleft",{"_index":1220,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["topright",{"_index":1221,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["transform",{"_index":2056,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["transition",{"_index":1433,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["trapeze",{"_index":2212,"title":{},"body":{"index.html":{}}}],["tree",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["tried",{"_index":1084,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["trigger",{"_index":1117,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["trip",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trip_origin",{"_index":2042,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["tripdata",{"_index":1080,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["tripdata?.directiontext",{"_index":2024,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["tripid",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassages",{"_index":1065,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassages\",[routerlink]=\"['/stop",{"_index":2037,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["trippassages\",[routerlink]=\"[\\'/stop",{"_index":2061,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["trippassagescomponent",{"_index":334,"title":{"components/TripPassagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["trippassageslocation",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["trippassagesmodule",{"_index":2062,"title":{"modules/TripPassagesModule.html":{}},"body":{"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["trippassagesresolver",{"_index":2071,"title":{"guards/TripPassagesResolver.html":{}},"body":{"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{}}}],["trippassagesroute",{"_index":1480,"title":{},"body":{"modules/NotFoundRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassagesroutingmodule",{"_index":2066,"title":{"modules/TripPassagesRoutingModule.html":{}},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["true",{"_index":384,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopRoutingModule.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":404,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2235,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1073,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["types",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["types/dist/vehicle",{"_index":688,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["types/leaflet",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1548,"title":{},"body":{"components/RouteListComponent.html":{}}}],["uncaught",{"_index":401,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["undefined",{"_index":629,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["unknown",{"_index":1060,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unset",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":1088,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{}}}],["updatedata",{"_index":1685,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["updatedata(data",{"_index":1698,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["updateobservable",{"_index":833,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["updates",{"_index":986,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["updatestatus",{"_index":1049,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updatestatus.error",{"_index":1103,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.loaded",{"_index":1078,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.loading",{"_index":1089,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.not_found",{"_index":1106,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatesubscription",{"_index":554,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["usage",{"_index":2219,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":376,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1018,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["user.name",{"_index":1984,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["userlocationlayer",{"_index":982,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userlocationservice",{"_index":438,"title":{"injectables/UserLocationService.html":{}},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["userlocationsubscriber",{"_index":969,"title":{"classes/UserLocationSubscriber.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["userlocationsubscriber(this",{"_index":1017,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userposition",{"_index":1026,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["uses",{"_index":1352,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["using",{"_index":1350,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["util",{"_index":1937,"title":{},"body":{"guards/StopsResolver.html":{}}}],["util/retry",{"_index":2165,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":597,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["val.passages.tripid",{"_index":1115,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["value",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.coords",{"_index":973,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["value.stopinfo",{"_index":1756,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["value.stops",{"_index":1851,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["value[1",{"_index":1234,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["values",{"_index":2225,"title":{},"body":{"index.html":{}}}],["var",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["variable",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2244,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veh",{"_index":1182,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["veh.isdeleted",{"_index":1184,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle",{"_index":707,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["vehicle.heading",{"_index":1256,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.longitude",{"_index":1254,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.name",{"_index":1257,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.name.split",{"_index":1251,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle_status",{"_index":685,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.departed",{"_index":702,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.planned",{"_index":705,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.predicted",{"_index":700,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.stopping",{"_index":703,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicleicon",{"_index":914,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicleid",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["vehicleloadsubscriber",{"_index":1172,"title":{"classes/VehicleLoadSubscriber.html":{}},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["vehicleloadsubscriber(this",{"_index":1244,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehiclelocationsubject",{"_index":834,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["vehiclemarker",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vehiclemarkerlayer",{"_index":1144,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicles",{"_index":1162,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicles.vehicles",{"_index":1183,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicleupdatesubscription",{"_index":1145,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["version",{"_index":953,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version.full",{"_index":1639,"title":{},"body":{"components/SidebarComponent.html":{}}}],["version.ts",{"_index":2169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["via",{"_index":1801,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["viewchild",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["viewchild('mapcontainer",{"_index":977,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["viewchild('searchinput",{"_index":1972,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["viewchild(drawabledirective",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matautocomplete",{"_index":1967,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["viewchild(matsidenav",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsidenavcontainer",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(toolbarsearchboxcomponent",{"_index":1302,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["void",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["waits",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warning",{"_index":1642,"title":{},"body":{"components/SidebarComponent.html":{}}}],["waypoint",{"_index":882,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["waypoint.lon",{"_index":886,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["weight",{"_index":731,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["white",{"_index":1198,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["width",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/StopsInfoComponent.html":{}}}],["width:#{$boxmaxwidth",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["width:$boxmaxwidth",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["width:100",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["width:100vw",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["width:439px",{"_index":1361,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["width:440px",{"_index":1366,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["width:64px",{"_index":1427,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["window.innerheight",{"_index":819,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["window.innerwidth",{"_index":817,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["worker",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["wrapper",{"_index":1041,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["x",{"_index":783,"title":{},"body":{"directives/DrawableDirective.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["y",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"directives/DrawableDirective.html":{},"components/StopsInfoComponent.html":{}}}],["y2lyy2xlign4psizncigy3k9ijm0iibypsizmiigbwfzaz0idxjskcnhksig",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y2xhc3m9imhlyxz5iib4psiznciget0indyiigzpbgw9imjsywnriibzdhjv",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ybpzd0iysi+dqo8cmvjdcb3awr0ad0imtawiibozwlnahq9ijewmcigzmlsbd0ii2zmziiv",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1581,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["z",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["zero",{"_index":666,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["zgrszsi+sdwvdgv4dd4ncjwvbwfzaz4ncjxnigzpbhrlcj0idxjskcniksig",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zindexoffset",{"_index":927,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["zone",{"_index":839,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["zone.js",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/NotFoundModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":992,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["zpsjodhrwoi8vd3d3lnczlm9yzy8ymdawl3n2zyi+dqo8c3r5bgu+lmhlyxz5ihsgzm9udd",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                getRouteByTripId\n                            \n                            \n                                    Public\n                                getRouteByVehicleId\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getStations\n                            \n                            \n                                    Public\n                                getStopInfo\n                            \n                            \n                                    Public\n                                getStopPassages\n                            \n                            \n                                    Public\n                                getTripPassages\n                            \n                            \n                                    Public\n                                getVehicleLocation\n                            \n                            \n                                    Public\n                                getVehicleLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            baseUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    baseUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRouteByTripId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteByTripId(vehicleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRouteByVehicleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteByVehicleId(vehicleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopInfo(vehicleId: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopPassages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopPassages(vehicleId: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTripPassages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTripPassages(tripId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVehicleLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVehicleLocation(vehicleId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVehicleLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVehicleLocations(bounds: IMapBounds)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                IMapBounds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ISettings, IStopInfo, IStopLocations, IStopPassage, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { TripPassagesLocation } from '../models';\nimport { IMapBounds } from '../modules/common/leaflet-map.component';\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiService {\n\n    constructor(private http: HttpClient) { }\n\n    public baseUrl(): string {\n        return environment.apiEndpoint.endsWith('\\/') ? environment.apiEndpoint : (environment.apiEndpoint + '\\/');\n    }\n\n    public getTripPassages(tripId: string): Observable {\n        return this.http.get(this.baseUrl() + 'api/trip/' + tripId + '/passages?mode=departure');\n    }\n    public getRouteByVehicleId(vehicleId: string): Observable {\n        return this.http.get(this.baseUrl() + 'api/vehicle/' + vehicleId + '/route');\n    }\n    public getRouteByTripId(vehicleId: string): Observable {\n        return this.http.get(this.baseUrl() + 'api/trip/' + vehicleId + '/route');\n    }\n    public getStopInfo(vehicleId: string | number): Observable {\n        return this.http.get(this.baseUrl() + 'api/stop/' + vehicleId + '/info');\n    }\n    public getStopPassages(vehicleId: string | number): Observable {\n        return this.http.get(this.baseUrl() + 'api/stop/' + vehicleId + '/departures');\n    }\n    public getVehicleLocations(bounds: IMapBounds): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/vehicles', {\n            params: {\n                bottom: '' + Math.round(bounds.bottom * 3600000),\n                left: '' + Math.round(bounds.left * 3600000),\n                right: '' + Math.round(bounds.right * 3600000),\n                top: '' + Math.round(bounds.top * 3600000),\n            },\n        });\n    }\n    public getVehicleLocation(vehicleId: string): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/vehicle/' + vehicleId);\n    }\n\n    public getStations(): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/stops');\n    }\n\n    public getSettings(): Observable {\n        return this.http.get(this.baseUrl() + 'api/settings');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                prediction\n                            \n                            \n                                predictions\n                            \n                            \n                                sidenav\n                            \n                            \n                                sidenavContainer\n                            \n                            \n                                title\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onVoted\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isSidenavOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onVoted\n                        \n                        \n                    \n                \n            \n            \n                \nonVoted(agreed: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    agreed\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(DrawableDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prediction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            predictions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenavContainer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenavContainer)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tripId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isSidenavOpen\n                    \n                \n\n                \n                    \n                        getisSidenavOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavContainer } from '@angular/material';\nimport { DrawableDirective } from './drawable.directive';\nimport { SidebarService } from './services/sidebar.service';\n@Component({\n    selector: 'app-root',\n    styleUrls: ['./app.component.scss'],\n    templateUrl: './app.component.pug',\n})\nexport class AppComponent implements OnInit {\n    title = 'app';\n    prediction: any;\n\n    @ViewChild(MatSidenavContainer)\n    sidenavContainer: MatSidenavContainer;\n    @ViewChild(MatSidenav)\n    sidenav: MatSidenav;\n    predictions: any;\n    tripId: string;\n    constructor(private sidebarService: SidebarService) {\n    }\n    @ViewChild(DrawableDirective) canvas;\n    ngOnInit() {\n        this.sidebarService.sidebarObservable\n            .subscribe((open) => {\n                if (open) {\n                    this.sidenav.open();\n                } else {\n                    this.sidenav.close();\n                }\n            });\n        this.sidenav.openedChange.subscribe((open) => {\n            if (open) {\n                this.sidebarService.openSidebar();\n            } else {\n                this.sidebarService.closeSidebar();\n            }\n        });\n    }\n    onVoted(agreed: any) {\n        this.tripId = agreed.tripId;\n    }\n\n    public toggleSidebar(): void {\n        this.sidenav.toggle();\n    }\n\n    public get isSidenavOpen(): boolean {\n        return this.sidenav.opened;\n    }\n\n}\n\n    \n\n    \n        mat-sidenav-container.main-container(#sidenavContainer,[hasBackdrop]=\"true\")\n    mat-sidenav.main-nav(#sidenav,mode=\"over\")\n        app-sidebar\n    mat-sidenav-content\n        map(appMainMap)\n        .overlay-box\n            .router-box\n                router-outlet\n            app-main-toolbar\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    padding: 0px;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    overflow: hidden;\n    flex-direction: column;\n    display: flex;\n}\n\n@import './box-settings.scss';\nmat-sidenav-container {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: row;\n}\n\nmat-sidenav-content{\n    align-self: stretch;\n    display:block;\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    position:fixed;\n}\nmap[appMainMap]{\n    height:100%;\n    width:100%;\n    display:block;\n}\n\nbutton.sidebar-toggle {\n    position: absolute;\n    top: 8px;\n    left: 16px;\n    z-index: 10001;\n}\n\nmat-sidenav.main-nav {\n    width: 100%;\n    max-width: 400px;\n    display: flex;\n    overflow: hidden;\n}\n\n@import '~@angular/material/theming';\n\n$searchBorderRadius: 8px;\n\napp-main-toolbar{\n    max-width: $boxMaxWidth;\n    position: absolute;\n    top:0px;\n    left:0px;\n    right:0px;\n    margin:$boxMarginVertical auto 0px auto;\n    z-index: #{$overlayZIndex};\n    border-radius: $searchBorderRadius;\n    border:1px solid rgb(87, 99, 207);\n    @include mat-elevation(4);\n    overflow: hidden;\n}\n@keyframes overlay-box-expand-animation {\n    to {\n        width:100vw;\n    }\n    from {\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n    }\n}\n@keyframes overlay-box-contract-animation {\n    from {\n        width:100vw;\n    }\n    to {\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n    }\n}\n\n.overlay-box{\n    display:block;\n    z-index: #{$overlayZIndex - 1};\n    width: 100vw;\n    position: absolute;\n    top:0px;\n    left:0px;\n    right:0px;\n    bottom:0px;\n    pointer-events:none;\n    animation-name: overlay-box-expand-animation;\n    animation-duration: 1s;\n    app-main-toolbar{\n        margin:#{$boxMarginVertical} auto 0 auto;\n        pointer-events:visible;\n    }\n    .router-box{\n        z-index: #{$overlayZIndex - 1};\n        width: 100%;\n        position: absolute;\n        top:0px;\n        left:0px;\n        right:0px;\n        bottom:0px;\n        overflow:auto;\n        ::ng-deep > *:not(:first-child) {\n            background-color:#F9F9F9;\n            pointer-events:visible;\n            height:100%;\n            background-attachment: fixed;\n            display: flex;\n            flex: 1;\n            flex-direction: column;\n            overflow-y: auto;\n            @include mat-elevation(4);\n        }\n    }\n    @media (max-width: #{$boxMaxWidth + (2 * $boxMarginHorizontal)}) and (min-width: #{$boxMaxWidth + 1}){\n        app-main-toolbar{\n            border-radius: calc( #{$searchBorderRadius /(2 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n            margin-top: calc( #{$boxMarginVertical /(2 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n        }\n    }\n    @media (min-width: $breakpoint){\n        app-main-toolbar{\n            right:unset;\n            margin:$boxMarginVertical 0px 0px $boxMarginHorizontal;\n            width:$boxMaxWidth;\n        }\n    \n        // Needed for dropshadow to appear for nav box\n        $rightPadding: 20px;\n        .router-box{\n            padding-right:$rightPadding;\n        }\n    }\n\n    @media (max-width: #{$boxMaxWidth} ){\n        app-main-toolbar{\n            border-radius: 0px;\n            margin-top: 0px;\n        }\n    }\n}\n\n@media (min-width: #{$breakpoint }){\n    .overlay-box{\n        animation-name: overlay-box-contract-animation;\n        animation-duration: 1s;\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n        right:unset;\n    }\n}\n@media (max-width: #{$boxMaxWidth} ){\n    .overlay-box{\n        display:flex;\n        flex-direction: column;\n        position: absolute;\n        align-items: stretch;\n        app-main-toolbar{\n            margin:0px;\n            position: relative;\n            flex:0 0 auto;\n            order: 1;\n        }\n        .router-box{\n            position: unset;\n            flex:1 1 auto;\n            order: 2;\n            height: 100%;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-sidenav-container.main-container(#sidenavContainer,[hasBackdrop]=\"true\")    mat-sidenav.main-nav(#sidenav,mode=\"over\")        app-sidebar    mat-sidenav-content        map(appMainMap)        .overlay-box            .router-box                router-outlet            app-main-toolbar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppErrorHandler.html":{"url":"injectables/AppErrorHandler.html","title":"injectable - AppErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-error-handler.ts\n        \n\n            \n                Description\n            \n            \n                AppErrorHandler to catch global errors\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                            \n                                    Public\n                                handleHttpErrorResponse\n                            \n                            \n                                    Public\n                                isClientOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-error-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: Error | HttpErrorResponse | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:25\n                \n            \n\n\n            \n                \n                    Handles all errors\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error | HttpErrorResponse | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleHttpErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleHttpErrorResponse(errorResponse: HttpErrorResponse, notificationService: AppNotificationService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:47\n                \n            \n\n\n            \n                \n                    Handles HttpErrorResponses\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response to handle\n\n                                    \n                                \n                                \n                                    notificationService\n                                    \n                                                AppNotificationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the notification service to be used\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isClientOffline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isClientOffline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:18\n                \n            \n\n\n            \n                \n                    If the browser supports the online tag it will\nreturns its value. otherwise it will always be true\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the navigator is offline\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AppNotificationService, AppNotificationType } from './services/app-notification.service';\n\n/**\n * AppErrorHandler to catch global errors\n */\n@Injectable()\nexport class AppErrorHandler implements ErrorHandler {\n\n    public constructor(private injector: Injector) { }\n\n    /**\n     * If the browser supports the online tag it will\n     * returns its value. otherwise it will always be true\n     * @returns true if the navigator is offline\n     */\n    public isClientOffline(): boolean {\n        return (navigator.onLine === false);\n    }\n\n    /**\n     * Handles all errors\n     */\n    public handleError(error: Error | HttpErrorResponse | any): void {\n        // The notification service\n        const notificationService: AppNotificationService = this.injector.get(AppNotificationService);\n        if (error instanceof HttpErrorResponse) {\n            return this.handleHttpErrorResponse(error, notificationService);\n        } else {\n            notificationService.notify({\n                message: error.message,\n                reportable: true,\n                title: 'Uncaught error occured',\n                type: AppNotificationType.ERROR,\n            });\n        }\n        // tslint:disable-next-line:no-console\n        console.error('It happens: ', error);\n    }\n\n    /**\n     * Handles HttpErrorResponses\n     * @param errorResponse the response to handle\n     * @param notificationService the notification service to be used\n     */\n    public handleHttpErrorResponse(errorResponse: HttpErrorResponse, notificationService: AppNotificationService): void {\n        // Server or connection error happened\n        if (this.isClientOffline()) {\n            // Handle offline error\n            return notificationService.notify({\n                title: 'No Internet Connection',\n                type: AppNotificationType.ERROR,\n            });\n        } else if (errorResponse.status) {\n            if (errorResponse.status >= 500 && errorResponse.status = 400 && errorResponse.status \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrawableDirective\n\nDrawableDirective\n\nAppModule -->\n\nDrawableDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainMapModule\n\nMainMapModule\n\nAppModule -->\n\nMainMapModule->AppModule\n\n\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nAppModule -->\n\nMainToolbarModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nAppNotificationService\n\nAppNotificationService\n\nAppModule -->\n\nAppNotificationService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nStopPointService\n\nStopPointService\n\nAppModule -->\n\nStopPointService->AppModule\n\n\n\n\n\nUserLocationService\n\nUserLocationService\n\nAppModule -->\n\nUserLocationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DrawableDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppNotificationService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            StopPointService\n                        \n                        \n                            UserLocationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainMapModule\n                        \n                        \n                            MainToolbarModule\n                        \n                        \n                            SidebarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { MatIconModule, MatInputModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AppErrorHandler } from './app-error-handler';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DrawableDirective } from './drawable.directive';\nimport { MainMapModule } from './modules/main-map';\nimport { MainToolbarModule } from './modules/main-toolbar/main-toolbar.module';\nimport { SidebarModule } from './modules/sidebar/sidebar.module';\nimport { AppNotificationService } from './services/app-notification.service';\nimport { SettingsService } from './services/settings.service';\nimport { StopPointService } from './services/stop-point.service';\nimport { UserLocationService } from './services/user-location.service';\n\nexport const SettingsInitializer = (appInitService: SettingsService) => {\n    return (): Promise => {\n        return appInitService.load();\n    };\n};\nconst moduleImports: any[] = [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatInputModule,\n    MainMapModule,\n    MainToolbarModule,\n    SidebarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production && environment.pwa === true,\n    }),\n];\n@NgModule({\n    bootstrap: [AppComponent],\n    declarations: [\n        AppComponent,\n        DrawableDirective,\n    ],\n    imports: moduleImports,\n    providers: [\n        StopPointService,\n        UserLocationService,\n        SettingsService,\n        AppNotificationService,\n        {\n            deps: [SettingsService],\n            multi: true,\n            provide: APP_INITIALIZER,\n            useFactory: SettingsInitializer,\n        },\n        {\n            provide: ErrorHandler,\n            useClass: AppErrorHandler,\n        },\n    ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppNotificationService.html":{"url":"injectables/AppNotificationService.html","title":"injectable - AppNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notificationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notificationObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app-notification.service.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notify(noti: IAppNotification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-notification.service.ts:56\n                \n            \n\n\n            \n                \n                    Will publish the notification\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    noti\n                                    \n                                                IAppNotification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the notification\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notificationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/app-notification.service.ts:49\n                            \n                        \n\n                \n                    \n                        Subject for replaying notifcations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notificationObservable\n                    \n                \n\n                \n                    \n                        getnotificationObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/app-notification.service.ts:63\n                                \n                            \n                    \n                        \n                                The notification observable\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    constructor() { }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preload\n                        \n                        \n                    \n                \n            \n            \n                \npreload(route: Route, load: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-preloading-strategy.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    load\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n  preload(route: Route, load: Function): Observable {\n    return route.path.startsWith('not-found') ? load() : EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nconst appRoutes: Routes = [\n    {\n        loadChildren: './modules/trip-passages/trip-passages.module#TripPassagesModule',\n        path: 'passages',\n    },\n    {\n        loadChildren: './modules/stop/stop.module#StopModule',\n        path: 'stop',\n    },\n    {\n        loadChildren: './modules/stops/stops.module#StopsModule',\n        path: 'stops',\n    },\n    {\n        loadChildren: './modules/not-found/not-found.module#NotFoundModule',\n        path: 'not-found',\n    },\n    {\n        children: [\n        ],\n        path: '',\n    },\n    {\n        path: '**', redirectTo: '/not-found',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes,\n            {\n                enableTracing: false,\n                preloadingStrategy: AppPreloadingStrategy,\n            }, // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bounds.html":{"url":"interfaces/Bounds.html","title":"interface - Bounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITripPassages, IVehicleLocation } from '@donmahallem/trapeze-api-types';\n\nexport interface Bounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport type TripPassagesLocation = ITripPassages & {\n    location: IVehicleLocation,\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CountdownTimerDirective.html":{"url":"directives/CountdownTimerDirective.html","title":"directive - CountdownTimerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CountdownTimerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/countdown-timer/countdown-timer.directive.ts\n        \n\n            \n                Description\n            \n            \n                CountdownTimerDirective\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        span[appCountdownTimer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                timestampSubject\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                targetTime\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                innerHTML\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    targetTime\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : '-'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:21\n                            \n                        \n                \n                    \n                        Placeholder if time has run out\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        targetTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:27\n                            \n                        \n                \n                    \n                        Sets the targetTime\n\n                    \n                \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            innerHTML\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:35\n                            \n                        \n\n                \n                    \n                        The innerHtml for the directive\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestampSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        targetTime\n                    \n                \n\n\n                \n                    \n                        settargetTime(timestamp: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:27\n                                \n                            \n                    \n                        \n                                Sets the targetTime\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            timestamp\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { combineLatest, timer, BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * CountdownTimerDirective\n */\n@Directive({\n    selector: 'span[appCountdownTimer]',\n})\nexport class CountdownTimerDirective implements OnInit, OnDestroy {\n\n    private timestamp = '';\n    private updateSubscription: Subscription;\n    private timestampSubject: BehaviorSubject = new BehaviorSubject(0);\n\n    /**\n     * Placeholder if time has run out\n     */\n    @Input()\n    public placeholder = '-';\n\n    /**\n     * Sets the targetTime\n     */\n    @Input()\n    public set targetTime(timestamp: number) {\n        this.timestampSubject.next(timestamp);\n    }\n\n    /**\n     * The innerHtml for the directive\n     */\n    @HostBinding('innerHTML')\n    public get text() {\n        return this.timestamp;\n    }\n\n    public ngOnInit(): void {\n        this.updateSubscription = combineLatest([timer(0, 200), this.timestampSubject])\n            .pipe(map((value: [number, number]): string => {\n                const diff: number = Math.max(value[1] - Date.now(), 0);\n                if (diff  {\n                this.timestamp = val;\n            }));\n\n    }\n\n    public ngOnDestroy(): void {\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CountdownTimerModule.html":{"url":"modules/CountdownTimerModule.html","title":"module - CountdownTimerModule","body":"\n                   \n\n\n\n\n    Modules\n    CountdownTimerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CountdownTimerModule\n\n\n\ncluster_CountdownTimerModule_declarations\n\n\n\ncluster_CountdownTimerModule_exports\n\n\n\n\nCountdownTimerDirective\n\nCountdownTimerDirective\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nCountdownTimerModule -->\n\nCountdownTimerDirective->CountdownTimerModule\n\n\n\n\n\nCountdownTimerDirective \n\nCountdownTimerDirective \n\nCountdownTimerDirective  -->\n\nCountdownTimerModule->CountdownTimerDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/countdown-timer/countdown-timer.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module containing the CountdownDirective\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CountdownTimerDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CountdownTimerDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n} from '@angular/material';\nimport { CountdownTimerDirective } from './countdown-timer.directive';\n\n/**\n * Module containing the CountdownDirective\n */\n@NgModule({\n    declarations: [\n        CountdownTimerDirective,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        CountdownTimerDirective,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class CountdownTimerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartureListComponent.html":{"url":"components/DepartureListComponent.html","title":"component - DepartureListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DepartureListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/departure-list.component.ts\n\n\n    \n        Description\n    \n    \n        List of Departures Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-departure-list\n            \n\n            \n                styleUrls\n                ./departure-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./departure-list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                departures\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    departures\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        departures\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list.component.ts:23\n                            \n                        \n                \n                    \n                        set the departures\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasDepartures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasDepartures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list.component.ts:38\n                \n            \n\n\n            \n                \n                    Returns if the atleast one departure was provided\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if there is atleast one departure\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDepartures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDeparture[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        departures\n                    \n                \n\n                \n                    \n                        getdepartures()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list.component.ts:30\n                                \n                            \n                    \n                        \n                                departures\n\n\n                                \n                                    Returns :     IDeparture[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setdepartures(deps: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list.component.ts:23\n                                \n                            \n                    \n                        \n                                set the departures\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { IDeparture } from '@donmahallem/trapeze-api-types';\n\n/**\n * List of Departures Component\n */\n@Component({\n    selector: 'app-departure-list',\n    styleUrls: ['./departure-list.component.scss'],\n    templateUrl: './departure-list.component.pug',\n})\nexport class DepartureListComponent {\n\n    private mDepartures: IDeparture[] = [];\n\n    /**\n     * set the departures\n     */\n    @Input('departures')\n    public set departures(deps: IDeparture[]) {\n        this.mDepartures = deps ? deps : [];\n    }\n\n    /**\n     * departures\n     */\n    public get departures(): IDeparture[] {\n        return this.mDepartures ? this.mDepartures : [];\n    }\n\n    /**\n     * Returns if the atleast one departure was provided\n     * @returns true if there is atleast one departure\n     */\n    public hasDepartures(): boolean {\n        return this.mDepartures !== undefined && this.mDepartures.length > 0;\n    }\n\n}\n\n    \n\n    \n        mat-nav-list(*ngIf=\"hasDepartures()\",role=\"list\")\n    app-departure-list-item(*ngFor=\"let passage of departures\",[departure]=\"passage\")\n.no-departures(*ngIf=\"!hasDepartures()\")\n    h4 No Departures\n    \n\n    \n                \n                    ./departure-list.component.scss\n                \n                :host{\n    display:block;\n}\ndiv.no-departures{\n    margin:15px;\n}\nspan.delay{\n    color:red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list(*ngIf=\"hasDepartures()\",role=\"list\")    app-departure-list-item(*ngFor=\"let passage of departures\",[departure]=\"passage\").no-departures(*ngIf=\"!hasDepartures()\")    h4 No Departures'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'DepartureListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartureListItemComponent.html":{"url":"components/DepartureListItemComponent.html","title":"component - DepartureListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DepartureListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/departure-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-departure-list-item\n            \n\n            \n                styleUrls\n                ./departure-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./departure-list-item.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDelay\n                            \n                            \n                                    Private\n                                mDeparture\n                            \n                            \n                                    Private\n                                mTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateDelay\n                            \n                            \n                                    Public\n                                convertTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                departure\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    departure\n                                \n                                \n                                    time\n                                \n                                \n                                    statusIcon\n                                \n                                \n                                    status\n                                \n                                \n                                    delay\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        departure\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:35\n                            \n                        \n                \n                    \n                        Sets the departure\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            calculateDelay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateDelay(data: IDeparture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list-item.component.ts:96\n                \n            \n\n\n            \n                \n                    Calculates the delay\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IDeparture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a number except 0 or false\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"undefined\" | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(data: IDeparture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list-item.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IDeparture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean | number\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:24\n                            \n                        \n\n                \n                    \n                        The delay of the departure. Can be positive or negative excluding zero\nor false if no delay is to be expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDeparture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDeparture\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:19\n                            \n                        \n\n                \n                    \n                        Object holding the current departure\nCan be undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:28\n                            \n                        \n\n                \n                    \n                        The time of arrival\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        departure\n                    \n                \n\n                \n                    \n                        getdeparture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:45\n                                \n                            \n                    \n                        \n                                gets the departure\n\n\n                                \n                                \n                                \n                                    Returns :     IDeparture\n\n                                \n                        \n                    \n\n                \n                    \n                        setdeparture(deps)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:35\n                                \n                            \n                    \n                        \n                                Sets the departure\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The departures\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n\n                \n                    \n                        gettime()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusIcon\n                    \n                \n\n                \n                    \n                        getstatusIcon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:71\n                                \n                            \n                    \n                        \n                                Returns the DepartureStatus\n\n\n                                \n                                \n                                \n                                    Returns :     VEHICLE_STATUS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        delay\n                    \n                \n\n                \n                    \n                        getdelay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:88\n                                \n                            \n                    \n                        \n                                Returns the delay\n\n\n                                \n                                \n                                \n                                    Returns :     boolean | number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { IDeparture } from '@donmahallem/trapeze-api-types';\nimport { VEHICLE_STATUS } from '@donmahallem/trapeze-api-types/dist/vehicle-status';\nimport * as moment from 'moment';\n@Component({\n    selector: 'app-departure-list-item',\n    styleUrls: ['./departure-list-item.component.scss'],\n    templateUrl: './departure-list-item.component.pug',\n})\nexport class DepartureListItemComponent {\n\n    /**\n     * Object holding the current departure\n     * Can be undefined\n     */\n    private mDeparture: IDeparture = undefined;\n    /**\n     * The delay of the departure. Can be positive or negative excluding zero\n     * or false if no delay is to be expected\n     */\n    private mDelay: boolean | number = false;\n    /**\n     * The time of arrival\n     */\n    private mTime = '';\n\n    /**\n     * Sets the departure\n     * @param deps The departures\n     */\n    @Input('departure')\n    public set departure(deps: IDeparture) {\n        this.mDeparture = deps;\n        this.mDelay = this.calculateDelay(deps);\n        this.mTime = this.convertTime(deps);\n    }\n\n    /**\n     * gets the departure\n     * @returns the departure or undefined\n     */\n    public get departure(): IDeparture {\n        return this.mDeparture;\n    }\n\n    public get time(): string {\n        return this.mTime;\n    }\n\n    public get statusIcon(): string {\n        switch (this.mDeparture.status) {\n            case VEHICLE_STATUS.PREDICTED:\n                return 'directions_bus';\n            case VEHICLE_STATUS.DEPARTED:\n                return 'directions_bus';\n            case VEHICLE_STATUS.STOPPING:\n                return 'departure_board';\n            case VEHICLE_STATUS.PLANNED:\n            default:\n                return 'query_builder';\n        }\n    }\n\n    /**\n     * Returns the DepartureStatus\n     * @returns vehicle status {@VEHICLE_STATUS}\n     */\n    public get status(): VEHICLE_STATUS {\n        return this.mDeparture.status;\n    }\n\n    public convertTime(data: IDeparture) {\n        const time: number = data.actualRelativeTime;\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n\n    /**\n     * Returns the delay\n     * @returns false or an integer except 0\n     */\n    public get delay(): boolean | number {\n        return this.mDelay;\n    }\n\n    /**\n     * Calculates the delay\n     * @param data a number except 0 or false\n     */\n    public calculateDelay(data: IDeparture): false | number {\n        if (data && data.actualTime && data.plannedTime) {\n            if (data.actualTime !== data.plannedTime) {\n                const actual: moment.Moment = moment(data.actualTime, 'HH:mm');\n                const planned: moment.Moment = moment(data.plannedTime, 'HH:mm');\n                let diffMinutes: number = moment.duration(actual.diff(planned)).asMinutes();\n                if (diffMinutes > 60 * 12) {\n                    diffMinutes -= 60 * 24;\n                } else if (diffMinutes \n    \n\n    \n        a([routerLink]=\"['/passages', departure.tripId]\",role=\"listitem\")\n    mat-list-item\n        mat-icon(matListIcon,title=\"{{status}}\") {{statusIcon}}\n        span.pattern-text(*ngIf=\"delay!==false\",[ngClass]=\"{'late':(delay>0),'early':(delay\n    \n\n    \n                \n                    ./departure-list-item.component.scss\n                \n                :host{\n    display:block;\n}\ndiv.no-departures{\n    margin:15px;\n}\nspan.pattern-text{\n    font-weight: bold;\n}\n\nspan.pattern-text.late{\n    color:#d50000;\n}\nspan.pattern-text.late:before{\n    content: '+';\n}\nspan.pattern-text.early{\n    color:#00d500;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'a([routerLink]=\"[\\'/passages\\', departure.tripId]\",role=\"listitem\")    mat-list-item        mat-icon(matListIcon,title=\"{{status}}\") {{statusIcon}}        span.pattern-text(*ngIf=\"delay!==false\",[ngClass]=\"{\\'late\\':(delay>0),\\'early\\':(delay'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'DepartureListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DrawableDirective.html":{"url":"directives/DrawableDirective.html","title":"directive - DrawableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DrawableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/drawable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDrawable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                ctx\n                            \n                            \n                                pos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getImgData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPosition\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                newImage\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mousedown\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mousemove\n                            \n                            \n                                mouseup\n                            \n                            \n                                resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/drawable.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        newImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mousedown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousedown(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:26\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousemove(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:36\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseup(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nresize(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:56\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ImageData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CanvasRenderingContext2D\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { x: 0, y: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[appDrawable]',\n})\nexport class DrawableDirective implements OnInit {\n    pos = { x: 0, y: 0 };\n    ctx: CanvasRenderingContext2D;\n    canvas: HTMLCanvasElement;\n\n    @Output() newImage = new EventEmitter();\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        this.canvas = this.el.nativeElement as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onUp(e) {\n        this.newImage.emit(this.getImgData());\n    }\n\n    @HostListener('mouseenter', ['$event'])\n    onEnter(e) {\n        this.setPosition(e);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMove(e) {\n        this.setPosition(e);\n    }\n\n    @HostListener('mousemove', ['$event'])\n    onDown(e) {\n\n        if (e.buttons !== 1) {\n            return;\n        }\n\n        this.ctx.beginPath(); // begin\n\n        this.ctx.lineWidth = 10;\n        this.ctx.lineCap = 'round';\n        this.ctx.strokeStyle = '#111111';\n\n        this.ctx.moveTo(this.pos.x, this.pos.y);\n        this.setPosition(e);\n        this.ctx.lineTo(this.pos.x, this.pos.y);\n\n        this.ctx.stroke();\n    }\n\n    @HostListener('resize', ['$event'])\n    onResize(e) {\n        this.ctx.canvas.width = window.innerWidth;\n        this.ctx.canvas.height = window.innerHeight;\n    }\n\n    setPosition(e) {\n        this.pos.x = e.offsetX;\n        this.pos.y = e.offsetY;\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n\n    getImgData(): ImageData {\n        return this.ctx.getImageData(0, 0, 300, 300);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FollowBusMapDirective.html":{"url":"directives/FollowBusMapDirective.html","title":"directive - FollowBusMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FollowBusMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/follow-bus-map.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appTripPassages]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routePolyLines\n                            \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                updateObservable\n                            \n                            \n                                    Private\n                                vehicleLocationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRoutePaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, userLocationService: UserLocationService, zone: NgZone, apiService: ApiService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:33\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRoutePaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRoutePaths(paths: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routePolyLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Polyline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n                \n                    \n                        getlocation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:37\n                                \n                            \n\n                \n                    \n                        setlocation(id)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IVehicleLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, mergeMap } from 'rxjs/operators';\nimport { createVehicleIcon } from 'src/app/leaflet';\nimport { ApiService } from 'src/app/services';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\nexport class RoutesSubscriber extends Subscriber {\n    public constructor(private map: FollowBusMapDirective) {\n        super();\n    }\n    public next(routes) {\n        this.map.setRoutePaths(routes.paths);\n    }\n}\n@Directive({\n    selector: 'map[appTripPassages]',\n})\nexport class FollowBusMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    private vehicleLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        private apiService: ApiService,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n    @Input('location')\n    public set location(id: IVehicleLocation) {\n        this.vehicleLocationSubject.next(id);\n    }\n\n    public get location(): IVehicleLocation {\n        return this.vehicleLocationSubject.getValue();\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private updateObservable: Subscription;\n    private routePolyLines: L.Polyline[] = [];\n\n    public setRoutePaths(paths: any[]): void {\n        for (const path of paths) {\n            const pointList: any[] = [];\n            for (const wayPoint of path.wayPoints) {\n                pointList.push(new L.LatLng(wayPoint.lat / 3600000, wayPoint.lon / 3600000));\n            }\n            const firstpolyline = L.polyline(pointList, {\n                color: path.color,\n                opacity: 0.5,\n                smoothFactor: 1,\n                weight: 3,\n            });\n            firstpolyline.addTo(this.getMap());\n            this.routePolyLines.push(firstpolyline);\n        }\n    }\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n    public addMarker(): void {\n        this.updateObservable = this.vehicleLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n\n                    const vehicleIcon: L.DivIcon = createVehicleIcon(location.heading, location.name.split(' ')[0], 40);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            clickable: false,\n                            icon: vehicleIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    (marker).setRotationAngle(location.heading - 90);\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n        this.vehicleLocationSubject\n            .pipe(\n                filter(num => num !== null),\n                distinctUntilChanged(),\n                mergeMap(boundsa => {\n                    return this.apiService.getRouteByTripId(boundsa.tripId);\n                }))\n            .subscribe(new RoutesSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.updateObservable.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppNotification.html":{"url":"interfaces/IAppNotification.html","title":"interface - IAppNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        reportable\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification Message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportable\n                                    \n                                \n                                \n                                    \n                                        reportable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reportable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification Title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         AppNotificationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppNotificationType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification Type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    constructor() { }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnvironmentBase.html":{"url":"interfaces/IEnvironmentBase.html","title":"interface - IEnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/environment.base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiEndpoint\n                                \n                                \n                                        production\n                                \n                                \n                                            Optional\n                                        pwa\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pwa\n                                    \n                                \n                                \n                                    \n                                        pwa:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         AppVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppVersion\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AppVersion } from './app-version';\n\nexport interface IEnvironmentBase {\n    readonly apiEndpoint: string;\n    readonly production: boolean;\n    readonly pwa?: boolean;\n    readonly version: AppVersion;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapBounds.html":{"url":"interfaces/IMapBounds.html","title":"interface - IMapBounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.2,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapMoveEndEvent.html":{"url":"interfaces/IMapMoveEndEvent.html","title":"interface - IMapMoveEndEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapMoveEndEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         MapMoveEventType.END\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapMoveEventType.END\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.2,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapMoveStartEvent.html":{"url":"interfaces/IMapMoveStartEvent.html","title":"interface - IMapMoveStartEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapMoveStartEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         MapMoveEventType.START\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapMoveEventType.START\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.2,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPassageStatus.html":{"url":"interfaces/IPassageStatus.html","title":"interface - IPassageStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPassageStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        failures\n                                \n                                \n                                        passages\n                                \n                                \n                                        status\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failures\n                                    \n                                \n                                \n                                    \n                                        failures:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passages\n                                    \n                                \n                                \n                                    \n                                        passages:         TripPassagesLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripPassagesLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         UpdateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UpdateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IActualTripPassage, TripId } from '@donmahallem/trapeze-api-types';\nimport { from, BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, debounceTime, flatMap, map } from 'rxjs/operators';\nimport { TripPassagesLocation } from 'src/app/models';\nimport { ApiService } from '../../services';\n\nenum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status: UpdateStatus;\n    passages: TripPassagesLocation;\n    timestamp: number;\n    failures?: number;\n}\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.pug',\n})\nexport class TripPassagesComponent implements AfterViewInit, OnDestroy {\n    public readonly DEBOUNCE_TIME: number = 5000;\n    private status: BehaviorSubject = new BehaviorSubject(undefined);\n    private snapshotDataSubscription: Subscription;\n    private pollSubscription: Subscription;\n    public readonly StatusOps: typeof UpdateStatus = UpdateStatus;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private router: Router) {\n        this.snapshotDataSubscription = this.route.data.subscribe((data) => {\n            this.status.next({\n                passages: data['tripPassages'],\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n            });\n        });\n    }\n\n    /**\n     * Returns the TripPassages\n     * @returns undefined or {@link TripPassagesLocation}\n     */\n    public get tripData(): TripPassagesLocation {\n        if (this.status.value) {\n            return this.status.value.passages;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the last timestamp when data was tried to be retrieved\n     * @returns number or 0 if no timestamp is set\n     */\n    public get lastTimestamp(): number {\n        if (this.status.value) {\n            return this.status.value.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns the current set update status or {@link UpdateStatus.LOADING}\n     * @returns the {@link UpdateStatus}\n     */\n    public get statusCode(): UpdateStatus {\n        if (this.status.value) {\n            return this.status.value.status;\n        }\n        return UpdateStatus.LOADING;\n    }\n\n    /**\n     * returns the current tripID\n     */\n    public get tripId(): TripId {\n        return this.route.snapshot.params.tripId;\n    }\n\n    /**\n     * short hand to retrieve route name\n     */\n    public get routeName(): string {\n        return (this.tripData) ? this.tripData.routeName : '';\n    }\n\n    /**\n     * List of passages\n     */\n    public get tripPassages(): IActualTripPassage[] {\n        return (this.tripData !== undefined) ? this.tripData.actual : [];\n    }\n\n    /**\n     * Returns if an error has happened during the last update\n     * @returns true if an error occured\n     */\n    public hasError(): boolean {\n        return this.statusCode >= UpdateStatus.ERROR;\n    }\n\n    private handleError(err?: any): Observable {\n        let status: UpdateStatus = UpdateStatus.ERROR;\n        if (err.status) {\n            // Http Error\n            const statusCode: number = err.status;\n            if (statusCode === 404) {\n                status = UpdateStatus.NOT_FOUND;\n                this.router.navigate(['not-found'], {\n                    queryParams: {\n                        type: 'passages',\n                    },\n                });\n            } else if (statusCode >= 500 && statusCode  {\n                return this.route.snapshot.params['tripId'];\n            }),\n            flatMap((tripId: TripId) => {\n                return this.apiService.getTripPassages(tripId);\n            }),\n            map((passages: TripPassagesLocation): IPassageStatus => {\n                return {\n                    passages: passages,\n                    status: UpdateStatus.LOADED,\n                    timestamp: Date.now(),\n                };\n            }),\n            catchError(this.handleError.bind(this)))\n            .subscribe(new Subscriber((val: IPassageStatus) => {\n                if (val.passages.tripId === this.tripId) {\n                    this.status.next(val);\n                } else {\n                    // trigger so a reload can execute\n                    this.status.next(this.status.value);\n                }\n            }));\n    }\n    /**\n     * destroys created update observables\n     */\n    public ngOnDestroy(): void {\n        if (this.snapshotDataSubscription) {\n            this.snapshotDataSubscription.unsubscribe();\n        }\n        if (this.pollSubscription) {\n            this.pollSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeafletMapComponent.html":{"url":"classes/LeafletMapComponent.html","title":"class - LeafletMapComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeafletMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                mapContainer\n                            \n                            \n                                    Public\n                                    Readonly\n                                mapMove\n                            \n                            \n                                    Private\n                                mUserLocationSubscription\n                            \n                            \n                                    Private\n                                userLocationLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addLayer\n                            \n                            \n                                    Public\n                                getMap\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mapBounds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, zone: NgZone, userLocationService: UserLocationService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/leaflet-map.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mapcontainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            mapMove\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mUserLocationSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userLocationLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addLayer(layer: L.Layer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                            L.Layer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Layer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.Map | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(coords: Coordinates)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:84\n                \n            \n\n\n            \n                \n                    Sets the user location. To clear the location set it to undefined\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coords\n                                    \n                                            Coordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The coords or undefined\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        mapBounds\n                    \n                \n\n                \n                    \n                        getmapBounds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:119\n                                \n                            \n                    \n                        \n                                wrapper for this.map.getBounds()\n\n\n                                \n                                    Returns :         L.LatLngBounds\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.2,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MainMapDirective.html":{"url":"directives/MainMapDirective.html","title":"directive - MainMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MainMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appMainMap]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                vehicleMarkerLayer\n                            \n                            \n                                    Private\n                                vehicleUpdateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                addVehicleMarker\n                            \n                            \n                                    Public\n                                markerOnClick\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setVehicles\n                            \n                            \n                                    Public\n                                startVehicleUpdater\n                            \n                            \n                                    Public\n                                stopMarkerOnClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, apiService: ApiService, router: Router, stopService: StopPointService, userLocationService: UserLocationService, snackBar: MatSnackBar, settings: SettingsService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-map/main-map.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addVehicleMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicleMarker(vehicle: IVehicleLocation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicle\n                                    \n                                            IVehicleLocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            markerOnClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markerOnClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setVehicles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVehicles(vehicles: IVehicleLocationList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicles\n                                    \n                                            IVehicleLocationList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startVehicleUpdater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startVehicleUpdater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopMarkerOnClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopMarkerOnClick(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleUpdateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { combineLatest, from, timer, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map, startWith } from 'rxjs/operators';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { createStopIcon, createVehicleIcon } from '../../leaflet';\nimport { IMapBounds, LeafletMapComponent, MapMoveEvent, MapMoveEventType } from '../../modules/common/leaflet-map.component';\nimport { StopPointService } from '../../services/stop-point.service';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { ApiService } from './../../services';\n\nexport class VehicleLoadSubscriber extends Subscriber {\n\n    public constructor(private mainMap: MainMapDirective) {\n        super();\n    }\n    public next(res: IVehicleLocationList): void {\n        this.mainMap.setVehicles(res);\n    }\n}\n\n@Directive({\n    selector: 'map[appMainMap]',\n})\nexport class MainMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(elRef: ElementRef,\n        private apiService: ApiService,\n        private router: Router,\n        private stopService: StopPointService,\n        userLocationService: UserLocationService,\n        private snackBar: MatSnackBar,\n        settings: SettingsService,\n        zone: NgZone) {\n        super(elRef, zone, userLocationService, settings);\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleUpdateSubscription: Subscription;\n\n    public setVehicles(vehicles: IVehicleLocationList): void {\n        if (this.vehicleMarkerLayer !== undefined) {\n            this.vehicleMarkerLayer.clearLayers();\n        } else {\n            this.vehicleMarkerLayer = L.featureGroup();\n            this.vehicleMarkerLayer.addTo(this.getMap());\n            this.vehicleMarkerLayer.on('click', this.markerOnClick.bind(this));\n        }\n        if (vehicles && Array.isArray(vehicles.vehicles)) {\n            for (const veh of vehicles.vehicles) {\n                if (veh.isDeleted === true) {\n                    continue;\n                }\n                this.addVehicleMarker(veh).addTo(this.vehicleMarkerLayer);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.startVehicleUpdater();\n        const ourCustomControl = L.Control.extend({\n            onAdd: () => {\n                const container = L.DomUtil.create('i', 'material-icons leaflet-bar leaflet-control leaflet-control-custom');\n                container.style.backgroundColor = 'white';\n                container.style.width = '42px';\n                container.style.height = '42px';\n                container.style.lineHeight = '42px';\n                container.style.textAlign = 'center';\n                container.style.verticalAlign = 'center';\n                container.style.cursor = 'pointer';\n                container.innerHTML = 'my_location';\n                container.style.userSelect = 'none';\n                container.style.msUserSelect = 'none';\n                container.onclick = () => {\n                    if (this.userLocationService.location) {\n                        const pos: Position = this.userLocationService.location;\n                        this.getMap().panTo({\n                            alt: 5000,\n                            lat: pos.coords.latitude, // / 3600000,\n                            lng: pos.coords.longitude, // / 3600000,\n                        },\n                            { animate: true });\n                    } else {\n                        this.snackBar.open('No location acquired yet!',\n                            undefined,\n                            {\n                                duration: 2000,\n                            });\n                    }\n                };\n                return container;\n            },\n            options: {\n                position: 'bottomright',\n                // control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'\n            },\n        });\n        this.getMap().addControl(new ourCustomControl());\n        // this.getMap().flyTo(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n    }\n\n    public startVehicleUpdater(): void {\n        // as mapMove doesn't emit on init this needs to be provided to load atleast once\n        const primedMoveObservable: Observable = this.mapMove.pipe(\n            startWith({\n                type: MapMoveEventType.END,\n            }));\n        this.vehicleUpdateSubscription = combineLatest([timer(0, 5000), primedMoveObservable])\n            .pipe(\n                map((value: [number, MapMoveEvent]): MapMoveEvent => {\n                    return value[1];\n                }),\n                filter((event: MapMoveEvent): boolean => {\n                    return (event.type === MapMoveEventType.END);\n                }),\n                flatMap((moveEvent: MapMoveEvent) => {\n                    const bounds: IMapBounds = {\n                        bottom: this.mapBounds.getSouth(),\n                        left: this.mapBounds.getWest(),\n                        right: this.mapBounds.getEast(),\n                        top: this.mapBounds.getNorth(),\n                    };\n                    return this.apiService.getVehicleLocations(bounds);\n                }),\n                catchError((err: Error) => {\n                    return from([{}]);\n                }))\n            .subscribe(new VehicleLoadSubscriber(this));\n    }\n\n    public markerOnClick(event) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['passages', event.sourceTarget.data.tripId]);\n        });\n    }\n    public addVehicleMarker(vehicle: IVehicleLocation): L.Marker {\n        const vehicleIcon: L.DivIcon = createVehicleIcon(vehicle.heading, vehicle.name.split(' ')[0], 40);\n        const markerT: any = L.marker([vehicle.latitude / 3600000, vehicle.longitude / 3600000], \n            {\n                icon: vehicleIcon,\n                rotationAngle: vehicle.heading - 90,\n                title: vehicle.name,\n                zIndexOffset: 100,\n            });\n        markerT.data = vehicle;\n        return markerT;\n    }\n    public addMarker() {\n        this.stopService.stopLocationsObservable\n            .subscribe((stops: IStopLocation[]) => {\n                const stopList: L.Marker[] = [];\n                for (const stop of stops) {\n                    if (stop === null) {\n                        continue;\n                    }\n                    const greenIcon = createStopIcon();\n                    const markerT: L.Marker = L.marker([stop.latitude / 3600000, stop.longitude / 3600000],\n                        {\n                            clickable: true,\n                            icon: greenIcon,\n                            riseOffset: 10,\n                            riseOnHover: true,\n                            title: stop.name,\n                            zIndexOffset: 10,\n                        });\n                    (markerT).data = stop;\n                    stopList.push(markerT);\n                }\n                if (this.stopMarkerLayer !== undefined) {\n                    this.stopMarkerLayer.remove();\n                }\n                const featureGroup: L.FeatureGroup = L.featureGroup(stopList);\n                this.stopMarkerLayer = featureGroup.addTo(this.getMap());\n                featureGroup.on('click', this.stopMarkerOnClick.bind(this));\n            });\n    }\n\n    public stopMarkerOnClick(event: { sourceTarget: { data: IStopLocation } }) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['stop', event.sourceTarget.data.shortName]);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.vehicleUpdateSubscription) {\n            this.vehicleUpdateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainMapModule.html":{"url":"modules/MainMapModule.html","title":"module - MainMapModule","body":"\n                   \n\n\n\n\n    Modules\n    MainMapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainMapModule\n\n\n\ncluster_MainMapModule_declarations\n\n\n\ncluster_MainMapModule_exports\n\n\n\n\nMainMapDirective\n\nMainMapDirective\n\n\n\nMainMapModule\n\nMainMapModule\n\nMainMapModule -->\n\nMainMapDirective->MainMapModule\n\n\n\n\n\nMainMapDirective \n\nMainMapDirective \n\nMainMapDirective  -->\n\nMainMapModule->MainMapDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainMapDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainMapDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatSnackBarModule,\n} from '@angular/material';\nimport { MainMapDirective } from './main-map.directive';\n@NgModule({\n    declarations: [\n        MainMapDirective,\n    ],\n    exports: [\n        CommonModule,\n        MatSnackBarModule,\n        MainMapDirective,\n    ],\n    imports: [\n        MatSnackBarModule,\n        CommonModule,\n    ],\n})\nexport class MainMapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarComponent.html":{"url":"components/MainToolbarComponent.html","title":"component - MainToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/main-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-toolbar\n            \n\n            \n                styleUrls\n                ./main-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-toolbar.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeable\n                            \n                            \n                                    Private\n                                mSearchOpen\n                            \n                            \n                                    Private\n                                searchBoxComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFocusSearch\n                            \n                            \n                                    Public\n                                toggleSearch\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: SidebarService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFocusSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFocusSearch(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSearchOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBoxComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarSearchBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ToolbarSearchBoxComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchOpen\n                    \n                \n\n                \n                    \n                        getsearchOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:34\n                                \n                            \n\n                \n                    \n                        setsearchOpen(open: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            open\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\nexport class NavigationSubscriber extends Subscriber {\n\n    public constructor(private toolbar: MainToolbarComponent) {\n        super();\n    }\n    public next(event: RouterEvent): void {\n        if (event instanceof NavigationEnd && event.url.length > 1) {\n            this.toolbar.closeable = true;\n        } else if (event instanceof NavigationStart) {\n            this.toolbar.closeable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-main-toolbar',\n    styleUrls: ['./main-toolbar.component.scss'],\n    templateUrl: './main-toolbar.component.pug',\n})\nexport class MainToolbarComponent implements OnInit {\n    public closeable = false;\n\n    constructor(private sidebarService: SidebarService,\n        private router: Router) {\n        this.router.events.subscribe(new NavigationSubscriber(this));\n    }\n\n    public get searchOpen(): boolean {\n        return this.mSearchOpen;\n    }\n\n    public set searchOpen(open: boolean) {\n        this.mSearchOpen = open;\n    }\n    @ViewChild(ToolbarSearchBoxComponent)\n    private searchBoxComponent: ToolbarSearchBoxComponent;\n\n    private mSearchOpen = false;\n\n    ngOnInit() {\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarService.toggleSidebar();\n    }\n\n    public onFocusSearch(event) {\n        this.searchOpen = event;\n    }\n    public toggleSearch(): void {\n        if (this.searchBoxComponent) {\n            this.searchBoxComponent.doFocusSearch();\n        }\n    }\n\n}\n\n    \n\n    \n        mat-toolbar.main-toolbar(color=\"primary\",[ngClass]=\"{'search-open':(searchOpen===true),'navigation-closeable':(closeable===true)}\")\n    button.sidebar-toggle(mat-icon-button,(click)=\"toggleSidebar()\",i18n-aria-label=\"Toggle Sidebar@@toggleSidebar\",aria-label=\"Toggle Sidebar\",role=\"button\",aria-pressed=\"false\")\n        mat-icon menu\n    app-toolbar-search((focusSearch)=\"onFocusSearch($event)\")\n    button#btnSearch(mat-icon-button,(click)=\"toggleSearch()\")\n        mat-icon search\n    mat-divider.close-divider([vertical]=\"true\")\n    button.close(mat-icon-button,[routerLink]=\"['/']\")\n        mat-icon\napp-route-loading-indicator\n    \n\n    \n                \n                    ./main-toolbar.component.scss\n                \n                .fill-remaining-space {\n    /* This fills the remaining space, by using flexbox. \n       Every toolbar row uses a flexbox row layout. */\n    flex: 1 1 auto;\n}\n\n:host {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n.search-open{\n    app-toolbar-search{\n        opacity: 1;\n    }\n}\nbutton.sidebar-toggle{\n    display:block;\n}\n\n@media (max-width: 439px){\n    .navigation-closeable{\n        button.close{\n            display:none;\n        }\n        mat-divider.close-divider{\n            display:none;\n        }\n    }\n}\nbutton.close{\n    display:none;\n    ::after{\n        content: \"close\"\n    }\n}\nmat-divider.close-divider{\n    display:none;\n}\n@media (max-width:439px){\n    .navigation-closeable{\n        button.close{\n            display:block;\n            order: 1;\n            ::after{\n                content: \"arrow_back\"\n            }\n        }\n        mat-divider.close-divider{\n            display:none;\n        }\n        app-toolbar-search{\n            order:2;\n        }\n        button#btnSearch{\n            order:3;\n        }\n        button.sidebar-toggle{\n            display:none;\n        }\n    }\n}\n@media (min-width:440px){\n    .navigation-closeable{\n        button.close{\n            display:block;\n            order: 4;\n        }\n        mat-divider.close-divider{\n            display:block;\n            order: 3;\n        }\n    }\n}\n\napp-toolbar-search{\n    flex:1 1 auto;\n    opacity:0.4;\n}\n\nmat-toolbar mat-divider{\n    height:40px;\n    border-right-color: rgba(255,255,255,0.1);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-toolbar.main-toolbar(color=\"primary\",[ngClass]=\"{\\'search-open\\':(searchOpen===true),\\'navigation-closeable\\':(closeable===true)}\")    button.sidebar-toggle(mat-icon-button,(click)=\"toggleSidebar()\",i18n-aria-label=\"Toggle Sidebar@@toggleSidebar\",aria-label=\"Toggle Sidebar\",role=\"button\",aria-pressed=\"false\")        mat-icon menu    app-toolbar-search((focusSearch)=\"onFocusSearch($event)\")    button#btnSearch(mat-icon-button,(click)=\"toggleSearch()\")        mat-icon search    mat-divider.close-divider([vertical]=\"true\")    button.close(mat-icon-button,[routerLink]=\"[\\'/\\']\")        mat-iconapp-route-loading-indicator'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainToolbarModule.html":{"url":"modules/MainToolbarModule.html","title":"module - MainToolbarModule","body":"\n                   \n\n\n\n\n    Modules\n    MainToolbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainToolbarModule\n\n\n\ncluster_MainToolbarModule_declarations\n\n\n\ncluster_MainToolbarModule_exports\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nMainToolbarModule -->\n\nMainToolbarComponent->MainToolbarModule\n\n\n\n\n\nRouteLoadingIndicatorComponent\n\nRouteLoadingIndicatorComponent\n\nMainToolbarModule -->\n\nRouteLoadingIndicatorComponent->MainToolbarModule\n\n\n\n\n\nToolbarSearchBoxComponent\n\nToolbarSearchBoxComponent\n\nMainToolbarModule -->\n\nToolbarSearchBoxComponent->MainToolbarModule\n\n\n\n\n\nMainToolbarComponent \n\nMainToolbarComponent \n\nMainToolbarComponent  -->\n\nMainToolbarModule->MainToolbarComponent \n\n\n\n\n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent  -->\n\nMainToolbarModule->RouteLoadingIndicatorComponent \n\n\n\n\n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent  -->\n\nMainToolbarModule->ToolbarSearchBoxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-toolbar/main-toolbar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainToolbarComponent\n                        \n                        \n                            RouteLoadingIndicatorComponent\n                        \n                        \n                            ToolbarSearchBoxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainToolbarComponent\n                        \n                        \n                            RouteLoadingIndicatorComponent\n                        \n                        \n                            ToolbarSearchBoxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { MainToolbarComponent } from './main-toolbar.component';\nimport { RouteLoadingIndicatorComponent } from './route-loading-indicator.component';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\n@NgModule({\n    declarations: [\n        MainToolbarComponent,\n        ToolbarSearchBoxComponent,\n        RouteLoadingIndicatorComponent,\n    ],\n    exports: [\n        MainToolbarComponent,\n        CommonModule,\n        MatIconModule,\n        MatToolbarModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        RouterModule,\n        ToolbarSearchBoxComponent,\n        RouteLoadingIndicatorComponent,\n        MatProgressBarModule,\n        MatDividerModule,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatToolbarModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        MatDividerModule,\n        RouterModule,\n        MatProgressBarModule,\n    ],\n    providers: [\n    ],\n})\nexport class MainToolbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapHeaderBoxComponent.html":{"url":"components/MapHeaderBoxComponent.html","title":"component - MapHeaderBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapHeaderBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/common/map-header-box/map-header-box.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-header-box\n            \n\n            \n                styleUrls\n                ./map-header-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-header-box.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\n@Component({\n    selector: 'app-map-header-box',\n    styleUrls: ['./map-header-box.component.scss'],\n    templateUrl: './map-header-box.component.pug',\n})\nexport class MapHeaderBoxComponent {\n\n    @Input()\n    public title: string = undefined;\n    @Input()\n    public subtitle: string = undefined;\n    @Input()\n    @HostBinding('class.no-location')\n    public blur = false;\n}\n\n    \n\n    \n        ng-content\n.title-box\n    span.title(*ngIf=\"title!==undefined\",trole=\"heading\",aria-level=\"2\",title=\"{{title}}\") {{title}}\n    span.subtitle(*ngIf=\"subtitle!==undefined\",title=\"{{subtitle}}\") {{subtitle}}\nmat-icon location_off\n    \n\n    \n                \n                    ./map-header-box.component.scss\n                \n                :host {\n    position: relative;\n    min-height:250px;\n    max-height:300px;\n    height:calc(100vw / 4 * 3);\n    width: 100%;\n    user-select: none;\n    overflow:none;\n    flex:0 0;\n}\n\n:host > ::ng-deep map {\n    position: absolute;\n    display: block;\n    height: 100%;\n    width: 100%;\n    ::ng-deep .leaflet-control-attribution{\n        display:none;\n    }\n}\n\n.title-box{\n    position: absolute;\n    bottom:0px;\n    left:0px;\n    right:0px;\n    z-index: 800;\n    padding:20px 20px 10px 20px;\n    color:white;\n    text-shadow: 0 0 5px black;\n    background-image: linear-gradient(rgba(0,0,0,0.0), rgba(0,0,0,0.7));\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    span.title{\n        font-size: 20px;\n        font-weight: bold;\n    }\n    span.subtitle{\n        font-size: 12px;\n        font-weight: bold;\n    }\n}\nmat-icon{\n    position: absolute;\n    z-index: 799;\n    bottom:0px;\n    left:0px;\n    right:0px;\n    top:0px;\n    margin:auto;\n    font-size: 64px;\n    width:64px;\n    height:64px;\n    display:none;\n    color:white;\n}\n\n\n:host-context(.no-location){\n    ::ng-deep map {\n        filter: blur(2px) grayscale(100%) brightness(0.5);\n        transition: all 1s ease-out;\n    }\n    mat-icon{\n        display:block;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ng-content.title-box    span.title(*ngIf=\"title!==undefined\",trole=\"heading\",aria-level=\"2\",title=\"{{title}}\") {{title}}    span.subtitle(*ngIf=\"subtitle!==undefined\",title=\"{{subtitle}}\") {{subtitle}}mat-icon location_off'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapHeaderBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapHeaderBoxModule.html":{"url":"modules/MapHeaderBoxModule.html","title":"module - MapHeaderBoxModule","body":"\n                   \n\n\n\n\n    Modules\n    MapHeaderBoxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapHeaderBoxModule\n\n\n\ncluster_MapHeaderBoxModule_declarations\n\n\n\ncluster_MapHeaderBoxModule_exports\n\n\n\n\nMapHeaderBoxComponent\n\nMapHeaderBoxComponent\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule -->\n\nMapHeaderBoxComponent->MapHeaderBoxModule\n\n\n\n\n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent  -->\n\nMapHeaderBoxModule->MapHeaderBoxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/map-header-box/map-header-box.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapHeaderBoxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapHeaderBoxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n} from '@angular/material';\nimport { MapHeaderBoxComponent } from './map-header-box.component';\n\n@NgModule({\n    declarations: [\n        MapHeaderBoxComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        MapHeaderBoxComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class MapHeaderBoxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationSubscriber.html":{"url":"classes/NavigationSubscriber.html","title":"class - NavigationSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-toolbar/main-toolbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(toolbar: MainToolbarComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolbar\n                                                  \n                                                        \n                                                                        MainToolbarComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(event: RouterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RouterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\nexport class NavigationSubscriber extends Subscriber {\n\n    public constructor(private toolbar: MainToolbarComponent) {\n        super();\n    }\n    public next(event: RouterEvent): void {\n        if (event instanceof NavigationEnd && event.url.length > 1) {\n            this.toolbar.closeable = true;\n        } else if (event instanceof NavigationStart) {\n            this.toolbar.closeable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-main-toolbar',\n    styleUrls: ['./main-toolbar.component.scss'],\n    templateUrl: './main-toolbar.component.pug',\n})\nexport class MainToolbarComponent implements OnInit {\n    public closeable = false;\n\n    constructor(private sidebarService: SidebarService,\n        private router: Router) {\n        this.router.events.subscribe(new NavigationSubscriber(this));\n    }\n\n    public get searchOpen(): boolean {\n        return this.mSearchOpen;\n    }\n\n    public set searchOpen(open: boolean) {\n        this.mSearchOpen = open;\n    }\n    @ViewChild(ToolbarSearchBoxComponent)\n    private searchBoxComponent: ToolbarSearchBoxComponent;\n\n    private mSearchOpen = false;\n\n    ngOnInit() {\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarService.toggleSidebar();\n    }\n\n    public onFocusSearch(event) {\n        this.searchOpen = event;\n    }\n    public toggleSearch(): void {\n        if (this.searchBoxComponent) {\n            this.searchBoxComponent.doFocusSearch();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/not-found/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                endpoints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/not-found/not-found.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'home',\n        path: '/',\n        title: 'Home',\n    }, {\n        icon: 'place',\n        path: '/stops',\n        title: 'Stops',\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/not-found/not-found.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n@Component({\n    selector: 'app-not-found',\n    styleUrls: ['./not-found.component.scss'],\n    templateUrl: './not-found.component.pug',\n})\nexport class NotFoundComponent {\n\n    public readonly endpoints: {\n        icon: string;\n        path: string;\n        title: string;\n    }[] = [{\n        icon: 'home',\n        path: '/',\n        title: 'Home',\n    }, {\n        icon: 'place',\n        path: '/stops',\n        title: 'Stops',\n    }];\n    constructor() {\n    }\n\n}\n\n    \n\n    \n        .header\n    mat-icon help_outline\nh3 Not Found\nmat-nav-list(role=\"list\")\n    a(*ngFor=\"let endpoint of endpoints\",[routerLink]=\"[endpoint.path]\")\n        mat-list-item(role=\"listitem\")\n            mat-icon(matListIcon) {{endpoint.icon}}\n            h3(matLine) {{endpoint.title}}\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    flex-flow: column;\n    height: 100%;\n    background: #F9F9F9;\n}\n\n.header{\n    position: relative;\n    height:calc(100vw / 4 * 3);\n    width:100%;\n    max-height: 250px;\n    min-height:150px;\n    background:#999999;\n    mat-icon{\n        position: absolute;\n        top:0px;\n        right:0px;\n        bottom:0px;\n        left:0px;\n        margin:auto;\n        width:64px;\n        height: 64px;\n        font-size: 64px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.header    mat-icon help_outlineh3 Not Foundmat-nav-list(role=\"list\")    a(*ngFor=\"let endpoint of endpoints\",[routerLink]=\"[endpoint.path]\")        mat-list-item(role=\"listitem\")            mat-icon(matListIcon) {{endpoint.icon}}            h3(matLine) {{endpoint.title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotFoundModule.html":{"url":"modules/NotFoundModule.html","title":"module - NotFoundModule","body":"\n                   \n\n\n\n\n    Modules\n    NotFoundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\ncluster_NotFoundModule_imports\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\nNotFoundRoutingModule\n\nNotFoundRoutingModule\n\nNotFoundModule -->\n\nNotFoundRoutingModule->NotFoundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/not-found/not-found.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NotFoundRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule, MatListModule,\n} from '@angular/material';\nimport { NotFoundRoutingModule } from './not-found-routing.module';\nimport { NotFoundComponent } from './not-found.component';\n@NgModule({\n    declarations: [\n        NotFoundComponent,\n    ],\n    imports: [\n        NotFoundRoutingModule,\n        CommonModule,\n        MatListModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class NotFoundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotFoundRoutingModule.html":{"url":"modules/NotFoundRoutingModule.html","title":"module - NotFoundRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NotFoundRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/not-found/not-found-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './not-found.component';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: NotFoundComponent,\n        path: '**',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class NotFoundRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RetryDialogComponent.html":{"url":"components/RetryDialogComponent.html","title":"component - RetryDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RetryDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/common/retry-dialog/retry-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-retry-dialog\n            \n\n            \n                styleUrls\n                ./retry-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./retry-dialog.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: RetryDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        RetryDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RetryDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class RetryDialogData {\n    message?: string;\n    code?: number;\n}\n\n@Component({\n    selector: 'app-retry-dialog',\n    styleUrls: ['./retry-dialog.component.scss'],\n    templateUrl: './retry-dialog.component.pug',\n})\nexport class RetryDialogComponent {\n    constructor(public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: RetryDialogData) { }\n\n    public onNoClick(): void {\n        this.dialogRef.close(false);\n    }\n}\n\n    \n\n    \n        h1(mat-dialog-title) Error\ndiv(mat-dialog-content)\n    p {{data.message}}\n    p(*ngIf=\"data.code\") Code: {{data.code}}\ndiv(mat-dialog-actions)\n    button(mat-button,(click)=\"onNoClick()\") No Thanks\n    button(mat-button,[mat-dialog-close]=\"true\",cdkFocusInitial) Ok\n    \n\n    \n                \n                    ./retry-dialog.component.scss\n                \n                :host{\n    background: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'h1(mat-dialog-title) Errordiv(mat-dialog-content)    p {{data.message}}    p(*ngIf=\"data.code\") Code: {{data.code}}div(mat-dialog-actions)    button(mat-button,(click)=\"onNoClick()\") No Thanks    button(mat-button,[mat-dialog-close]=\"true\",cdkFocusInitial) Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RetryDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RetryDialogData.html":{"url":"classes/RetryDialogData.html","title":"class - RetryDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RetryDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/retry-dialog/retry-dialog.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                code\n                            \n                            \n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class RetryDialogData {\n    message?: string;\n    code?: number;\n}\n\n@Component({\n    selector: 'app-retry-dialog',\n    styleUrls: ['./retry-dialog.component.scss'],\n    templateUrl: './retry-dialog.component.pug',\n})\nexport class RetryDialogComponent {\n    constructor(public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: RetryDialogData) { }\n\n    public onNoClick(): void {\n        this.dialogRef.close(false);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RetryDialogModule.html":{"url":"modules/RetryDialogModule.html","title":"module - RetryDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    RetryDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RetryDialogModule\n\n\n\ncluster_RetryDialogModule_declarations\n\n\n\ncluster_RetryDialogModule_exports\n\n\n\n\nRetryDialogComponent\n\nRetryDialogComponent\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nRetryDialogModule -->\n\nRetryDialogComponent->RetryDialogModule\n\n\n\n\n\nRetryDialogComponent \n\nRetryDialogComponent \n\nRetryDialogComponent  -->\n\nRetryDialogModule->RetryDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/retry-dialog/retry-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule, MatDialogModule, MatIconModule,\n} from '@angular/material';\nimport { RetryDialogComponent } from './retry-dialog.component';\n\n@NgModule({\n    declarations: [\n        RetryDialogComponent,\n    ],\n    entryComponents: [\n        RetryDialogComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n        RetryDialogComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n    ],\n    providers: [\n    ],\n})\nexport class RetryDialogModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteListComponent.html":{"url":"components/RouteListComponent.html","title":"component - RouteListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouteListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/route-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-list\n            \n\n            \n                styleUrls\n                ./route-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./route-list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    routes\n                                \n                                \n                                    hasRoutes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/route-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(time, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/route-list.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDepartures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/route-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n\n                \n                    \n                        getroutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:19\n                                \n                            \n\n                \n                    \n                        setroutes(deps: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hasRoutes\n                    \n                \n\n                \n                    \n                        gethasRoutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-route-list',\n    styleUrls: ['./route-list.component.scss'],\n    templateUrl: './route-list.component.pug',\n})\nexport class RouteListComponent {\n\n    private mDepartures: any[] = [];\n    @Input('routes')\n    public set routes(deps: any[]) {\n        this.mDepartures = deps ? deps : [];\n    }\n\n    public get routes(): any[] {\n        return this.mDepartures;\n    }\n\n    public get hasRoutes(): boolean {\n        return this.mDepartures && this.mDepartures.length > 0;\n    }\n    public convertTime(time, data) {\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n\n}\n\n    \n\n    \n        mat-list(role=\"list\",*ngIf=\"hasRoutes\")\n    ng-container(*ngFor=\"let passage of routes\")\n        h3(matSubheader) {{passage?.shortName}}\n        mat-divider\n        mat-list-item(*ngFor=\"let direction of passage.directions\")\n            h4(matLine) {{direction}}\n.no-routes(*ngIf=\"!hasRoutes\")\n    h4 No Routes\n    \n\n    \n                \n                    ./route-list.component.scss\n                \n                :host{\n    display:block;\n}\nmat-list-item ul{\n    color:red;\n    display:block;\n    list-style-type: circle;\n    list-style-position: outside;\n    li{\n        display:list-item;\n        padding:0px 20px 0px 20px;\n    }\n}\n\ndiv.no-routes{\n    margin:15px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-list(role=\"list\",*ngIf=\"hasRoutes\")    ng-container(*ngFor=\"let passage of routes\")        h3(matSubheader) {{passage?.shortName}}        mat-divider        mat-list-item(*ngFor=\"let direction of passage.directions\")            h4(matLine) {{direction}}.no-routes(*ngIf=\"!hasRoutes\")    h4 No Routes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RouteListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteLoadingIndicatorComponent.html":{"url":"components/RouteLoadingIndicatorComponent.html","title":"component - RouteLoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouteLoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/route-loading-indicator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-loading-indicator\n            \n\n            \n                styleUrls\n                ./route-loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./route-loading-indicator.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router,\n} from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\nexport class RouteLoadingSubscriber extends Subscriber {\n\n    constructor(private indicatorCmp: RouteLoadingIndicatorComponent) {\n        super();\n    }\n    next(value?: Event): void {\n        switch (true) {\n            case value instanceof NavigationStart:\n                this.indicatorCmp.loading = true;\n                break;\n            case value instanceof NavigationEnd:\n            case value instanceof NavigationCancel:\n            case value instanceof NavigationError:\n                this.indicatorCmp.loading = false;\n                break;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-route-loading-indicator',\n    styleUrls: ['./route-loading-indicator.component.scss'],\n    templateUrl: './route-loading-indicator.component.pug',\n})\nexport class RouteLoadingIndicatorComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n\n    public loading = false;\n    constructor(private router: Router) {\n\n    }\n    public ngOnInit(): void {\n        this.subscription = this.router\n            .events\n            .subscribe(new RouteLoadingSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        mat-progress-bar(*ngIf=\"loading\",mode=\"indeterminate\",color=\"accent\")\n    \n\n    \n                \n                    ./route-loading-indicator.component.scss\n                \n                :host{\n    display:block;\n    position: relative;\n    bottom:0px;\n    right:0px;\n    left:0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-progress-bar(*ngIf=\"loading\",mode=\"indeterminate\",color=\"accent\")'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RouteLoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteLoadingSubscriber.html":{"url":"classes/RouteLoadingSubscriber.html","title":"class - RouteLoadingSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteLoadingSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-toolbar/route-loading-indicator.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(indicatorCmp: RouteLoadingIndicatorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indicatorCmp\n                                                  \n                                                        \n                                                                        RouteLoadingIndicatorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(value?: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router,\n} from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\nexport class RouteLoadingSubscriber extends Subscriber {\n\n    constructor(private indicatorCmp: RouteLoadingIndicatorComponent) {\n        super();\n    }\n    next(value?: Event): void {\n        switch (true) {\n            case value instanceof NavigationStart:\n                this.indicatorCmp.loading = true;\n                break;\n            case value instanceof NavigationEnd:\n            case value instanceof NavigationCancel:\n            case value instanceof NavigationError:\n                this.indicatorCmp.loading = false;\n                break;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-route-loading-indicator',\n    styleUrls: ['./route-loading-indicator.component.scss'],\n    templateUrl: './route-loading-indicator.component.pug',\n})\nexport class RouteLoadingIndicatorComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n\n    public loading = false;\n    constructor(private router: Router) {\n\n    }\n    public ngOnInit(): void {\n        this.subscription = this.router\n            .events\n            .subscribe(new RouteLoadingSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoutesSubscriber.html":{"url":"classes/RoutesSubscriber.html","title":"class - RoutesSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoutesSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/follow-bus-map.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(map: FollowBusMapDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    FollowBusMapDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(routes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IVehicleLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, mergeMap } from 'rxjs/operators';\nimport { createVehicleIcon } from 'src/app/leaflet';\nimport { ApiService } from 'src/app/services';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\nexport class RoutesSubscriber extends Subscriber {\n    public constructor(private map: FollowBusMapDirective) {\n        super();\n    }\n    public next(routes) {\n        this.map.setRoutePaths(routes.paths);\n    }\n}\n@Directive({\n    selector: 'map[appTripPassages]',\n})\nexport class FollowBusMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    private vehicleLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        private apiService: ApiService,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n    @Input('location')\n    public set location(id: IVehicleLocation) {\n        this.vehicleLocationSubject.next(id);\n    }\n\n    public get location(): IVehicleLocation {\n        return this.vehicleLocationSubject.getValue();\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private updateObservable: Subscription;\n    private routePolyLines: L.Polyline[] = [];\n\n    public setRoutePaths(paths: any[]): void {\n        for (const path of paths) {\n            const pointList: any[] = [];\n            for (const wayPoint of path.wayPoints) {\n                pointList.push(new L.LatLng(wayPoint.lat / 3600000, wayPoint.lon / 3600000));\n            }\n            const firstpolyline = L.polyline(pointList, {\n                color: path.color,\n                opacity: 0.5,\n                smoothFactor: 1,\n                weight: 3,\n            });\n            firstpolyline.addTo(this.getMap());\n            this.routePolyLines.push(firstpolyline);\n        }\n    }\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n    public addMarker(): void {\n        this.updateObservable = this.vehicleLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n\n                    const vehicleIcon: L.DivIcon = createVehicleIcon(location.heading, location.name.split(' ')[0], 40);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            clickable: false,\n                            icon: vehicleIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    (marker).setRotationAngle(location.heading - 90);\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n        this.vehicleLocationSubject\n            .pipe(\n                filter(num => num !== null),\n                distinctUntilChanged(),\n                mergeMap(boundsa => {\n                    return this.apiService.getRouteByTripId(boundsa.tripId);\n                }))\n            .subscribe(new RoutesSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.updateObservable.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsLoadSubscriber.html":{"url":"classes/SettingsLoadSubscriber.html","title":"class - SettingsLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(resolve: (arg: void) => void)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolve\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISettings } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { from, Observable, Subscriber } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class SettingsLoadSubscriber extends Subscriber {\n    public constructor(private resolve: (arg: void) => void) {\n        super();\n    }\n\n    public error(err: any): void {\n        this.resolve();\n        // tslint:disable-next-line:no-console\n        console.error(err);\n    }\n\n    public complete(): void {\n        this.resolve();\n    }\n}\n\n@Injectable(\n    { providedIn: 'root' },\n)\nexport class SettingsService {\n\n    private mSettings: ISettings = undefined;\n\n    constructor(private apiService: ApiService) {\n\n    }\n\n    public get settings(): ISettings {\n        return this.mSettings;\n    }\n\n    public getInitialMapCenter(): L.LatLng {\n        if (this.settings &&\n            this.settings.INITIAL_LAT &&\n            this.settings.INITIAL_LON) {\n            return new L.LatLng(this.settings.INITIAL_LAT / 3600000, this.settings.INITIAL_LON / 3600000);\n        }\n        return new L.LatLng(0, 0);\n    }\n    public getInitialMapZoom(): number {\n        if (this.settings && this.settings.INITIAL_ZOOM) {\n            return this.settings.INITIAL_ZOOM;\n        }\n        return 20;\n    }\n\n    public load(): Promise {\n        return new Promise((resolve: (arg: void) => void, reject: (err: any) => void) => {\n            return this.apiService.getSettings()\n                .pipe(tap((value: ISettings): void => {\n                    this.mSettings = value;\n                }),\n                    map((value: ISettings): void => {\n                        return;\n                    }),\n                    catchError((err: any): Observable => {\n                        return from([undefined]);\n                    }))\n                .subscribe(new SettingsLoadSubscriber(resolve));\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mSettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInitialMapCenter\n                            \n                            \n                                    Public\n                                getInitialMapZoom\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    settings\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitialMapCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMapCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.LatLng\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitialMapZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMapZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ISettings\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n\n                \n                    \n                        getsettings()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/settings.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISettings } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { from, Observable, Subscriber } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class SettingsLoadSubscriber extends Subscriber {\n    public constructor(private resolve: (arg: void) => void) {\n        super();\n    }\n\n    public error(err: any): void {\n        this.resolve();\n        // tslint:disable-next-line:no-console\n        console.error(err);\n    }\n\n    public complete(): void {\n        this.resolve();\n    }\n}\n\n@Injectable(\n    { providedIn: 'root' },\n)\nexport class SettingsService {\n\n    private mSettings: ISettings = undefined;\n\n    constructor(private apiService: ApiService) {\n\n    }\n\n    public get settings(): ISettings {\n        return this.mSettings;\n    }\n\n    public getInitialMapCenter(): L.LatLng {\n        if (this.settings &&\n            this.settings.INITIAL_LAT &&\n            this.settings.INITIAL_LON) {\n            return new L.LatLng(this.settings.INITIAL_LAT / 3600000, this.settings.INITIAL_LON / 3600000);\n        }\n        return new L.LatLng(0, 0);\n    }\n    public getInitialMapZoom(): number {\n        if (this.settings && this.settings.INITIAL_ZOOM) {\n            return this.settings.INITIAL_ZOOM;\n        }\n        return 20;\n    }\n\n    public load(): Promise {\n        return new Promise((resolve: (arg: void) => void, reject: (err: any) => void) => {\n            return this.apiService.getSettings()\n                .pipe(tap((value: ISettings): void => {\n                    this.mSettings = value;\n                }),\n                    map((value: ISettings): void => {\n                        return;\n                    }),\n                    catchError((err: any): Observable => {\n                        return from([undefined]);\n                    }))\n                .subscribe(new SettingsLoadSubscriber(resolve));\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appVersion\n                                \n                                \n                                    angularVersion\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sidebar/sidebar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/sidebar.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appVersion\n                    \n                \n\n                \n                    \n                        getappVersion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/sidebar.component.ts:22\n                                \n                            \n                    \n                        \n                                The app version found inside the package\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        angularVersion\n                    \n                \n\n                \n                    \n                        getangularVersion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/sidebar.component.ts:30\n                                \n                            \n                    \n                        \n                                The @angular/core version used\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, VERSION } from '@angular/core';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { environment } from 'src/environments/environment.example';\n@Component({\n    selector: 'app-sidebar',\n    styleUrls: ['./sidebar.component.scss'],\n    templateUrl: './sidebar.component.pug',\n})\nexport class SidebarComponent {\n    public constructor(private sidebarService: SidebarService) {\n\n    }\n\n    public closeSidebar(): void {\n        this.sidebarService.closeSidebar();\n    }\n\n    /**\n     * The app version found inside the package\n     * @returns the package version\n     */\n    public get appVersion(): string {\n        return environment.version;\n    }\n\n    /**\n     * The @angular/core version used\n     * @returns Version {@link VERSION.full}\n     */\n    public get angularVersion(): string {\n        return VERSION.full;\n    }\n}\n\n    \n\n    \n        button(mat-icon-button,(click)=\"closeSidebar()\")\n    mat-icon close\nmat-list\n    h3(matSubheader) Head\n    mat-list-item\n        mat-icon(matListIcon) warning\n        h4(matLine) No Content yet\n        p(matLine) New stuff to come?\n    mat-divider\n    mat-list-item\n        mat-icon(matListIcon) info\n        h4(matLine) Version\n        p(matLine) {{appVersion}}\n    mat-list-item\n        mat-icon(matListIcon) info\n        h4(matLine) Angular Version\n        p(matLine) {{angularVersion}}\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                :host{\n    display:block;\n}\nform,mat-form-field{\n    width:100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'button(mat-icon-button,(click)=\"closeSidebar()\")    mat-icon closemat-list    h3(matSubheader) Head    mat-list-item        mat-icon(matListIcon) warning        h4(matLine) No Content yet        p(matLine) New stuff to come?    mat-divider    mat-list-item        mat-icon(matListIcon) info        h4(matLine) Version        p(matLine) {{appVersion}}    mat-list-item        mat-icon(matListIcon) info        h4(matLine) Angular Version        p(matLine) {{angularVersion}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sidebar/sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n} from '@angular/material';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    declarations: [\n        SidebarComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        SidebarComponent,\n        MatButtonModule,\n    ],\n    imports: [\n        CommonModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        MatButtonModule,\n    ],\n    providers: [\n    ],\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sidebar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                sidebarObservable\n                            \n                            \n                                    Private\n                                sidebarStatusSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeSidebar\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sidebar.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            sidebarObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.sidebarStatusSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidebar.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidebarStatusSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidebar.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarOpen\n                    \n                \n\n                \n                    \n                        getsidebarOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/sidebar.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n    providedIn: 'root',\n})\nexport class SidebarService {\n\n    private sidebarStatusSubject: BehaviorSubject = new BehaviorSubject(false);\n    public readonly sidebarObservable: Observable = this.sidebarStatusSubject.asObservable();\n\n    public constructor() {\n    }\n\n    public get sidebarOpen(): boolean {\n        return this.sidebarStatusSubject.value;\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarStatusSubject.next(!this.sidebarStatusSubject.getValue());\n    }\n\n    public openSidebar(): void {\n        this.sidebarStatusSubject.next(true);\n    }\n\n    public closeSidebar(): void {\n        this.sidebarStatusSubject.next(false);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopInfoComponent.html":{"url":"components/StopInfoComponent.html","title":"component - StopInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StopInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/stop-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stop-info\n            \n\n            \n                styleUrls\n                ./stop-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stop-info.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccured\n                            \n                            \n                                    Private\n                                mStopInfo\n                            \n                            \n                                    Private\n                                mTimerObservable\n                            \n                            \n                                    Private\n                                mTimeUntilRefresh\n                            \n                            \n                                    Public\n                                routes\n                            \n                            \n                                    Public\n                                stopLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                tickInterval\n                            \n                            \n                                    Public\n                                    Readonly\n                                ticksToRefresh\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertTime\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeUntilRefresh\n                                \n                                \n                                    stopId\n                                \n                                \n                                    stopInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, apiService: ApiService, stopService: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-info.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(time, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:65\n                \n            \n\n\n            \n                \n                    Converts the time to a human readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData(data: IStopPassage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IStopPassage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorOccured\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStopInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopPassage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTimerObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:37\n                            \n                        \n\n                \n                    \n                        The timer overservable dictating the update interval\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTimeUntilRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:52\n                            \n                        \n\n                \n                    \n                        The stop location.\nCan be undefined or an instance of IStopLocation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            tickInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:46\n                            \n                        \n\n                \n                    \n                        Tick interval in miliseconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            ticksToRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:33\n                            \n                        \n\n                \n                    \n                        Subscription for the update Observable\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeUntilRefresh\n                    \n                \n\n                \n                    \n                        gettimeUntilRefresh()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopId\n                    \n                \n\n                \n                    \n                        getstopId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopInfo\n                    \n                \n\n                \n                    \n                        getstopInfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopLocation, IStopPassage } from '@donmahallem/trapeze-api-types';\nimport { combineLatest, from, merge, timer, Observable, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map } from 'rxjs/operators';\nimport { StopPointService } from 'src/app/services/stop-point.service';\nimport { ApiService } from '../../services';\n@Component({\n    selector: 'app-stop-info',\n    styleUrls: ['./stop-info.component.scss'],\n    templateUrl: './stop-info.component.pug',\n})\nexport class StopInfoComponent implements AfterViewInit, OnDestroy {\n\n    constructor(private route: ActivatedRoute, private apiService: ApiService,\n        private stopService: StopPointService) {\n        this.mStopInfo = this.route.snapshot.data.stopInfo;\n    }\n\n    public get timeUntilRefresh(): number {\n        return this.mTimeUntilRefresh;\n    }\n    public get stopId(): string {\n        return this.route.snapshot.params.stopId;\n    }\n\n    public get stopInfo(): IStopPassage {\n        return this.mStopInfo;\n    }\n    /**\n     * Subscription for the update Observable\n     */\n    private updateSubscription: Subscription;\n    /**\n     * The timer overservable dictating the update interval\n     */\n    private mTimerObservable: Observable;\n    private mTimeUntilRefresh = 0;\n    public routes: any[] = [];\n    private mStopInfo: IStopPassage;\n    public errorOccured = false;\n    public readonly ticksToRefresh: number = 50;\n    /**\n     * Tick interval in miliseconds\n     */\n    public readonly tickInterval: number = 200;\n\n    /**\n     * The stop location.\n     * Can be undefined or an instance of {@link IStopLocation}\n     */\n    public stopLocation: IStopLocation = undefined;\n    private updateData(data: IStopPassage): void {\n        this.errorOccured = false;\n        if ((data).stopShortName === this.stopId) {\n            this.mStopInfo = data;\n        }\n    }\n\n    /**\n     * Converts the time to a human readable format\n     * @param time time\n     * @param data data\n     */\n    public convertTime(time, data) {\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n    public ngAfterViewInit(): void {\n        this.mTimerObservable = timer(this.tickInterval, this.tickInterval);\n        this.mTimerObservable.subscribe((tick: number) => {\n            const ticksLeft: number = this.ticksToRefresh - (tick % this.ticksToRefresh);\n            const diff: number = Math.round((ticksLeft * this.tickInterval) / 1000);\n            if (diff !== this.mTimeUntilRefresh) {\n                this.mTimeUntilRefresh = diff;\n            }\n        });\n        const stopIdObvservable: Observable = this.route.params\n            .pipe(map((a: { stopId: string }): string => a.stopId));\n        stopIdObvservable.pipe(map((id: string) => {\n            return this.stopService.getStopLocation(id);\n        }))\n            .subscribe((stop) => {\n                this.stopLocation = stop;\n            });\n        const refreshObservable = combineLatest([this.mTimerObservable.pipe(filter((val: number) => {\n            return val % this.ticksToRefresh === 0 && val > 0;\n        })), stopIdObvservable])\n            .pipe(\n                map((a): string => a[1]),\n                flatMap((stopId: string): Observable => {\n                    return this.apiService.getStopPassages(stopId);\n                }),\n                catchError((err, a) => {\n                    this.errorOccured = true;\n                    return from([undefined]);\n                }),\n                filter((item: IStopPassage) => {\n                    return item !== undefined;\n                }));\n        /**\n         * combine observables\n         */\n        this.updateSubscription = merge(refreshObservable, this.route.data.pipe(map((value) => {\n            return value.stopInfo;\n        })))\n            .subscribe(this.updateData.bind(this));\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n\n}\n\n    \n\n    \n        app-map-header-box([blur]=\"stopLocation===undefined\",title=\"{{stopInfo?.stopName}}\",i18n-title=\"@@stopName\",i18n-subtitle=\"Refreshing in x seconds@@refreshingInXSeconds\",subtitle=\"Refreshing in {{timeUntilRefresh}}s\")\n    map(appStopLocation,[location]=\"stopLocation\",role=\"none\")\nmat-tab-group(mat-stretch-tabs,[dynamicHeight]=\"true\")\n    mat-tab(i18n-label=\"tab header departures|Departures@@departures\",label=\"Departures\")\n        app-departure-list([departures]=\"stopInfo?.actual\")\n    mat-tab(i18n-label=\"tab header routes|Routes@@Routes\",label=\"Routes\")\n        app-route-list([routes]=\"stopInfo?.routes\")\ndiv.error-box(*ngIf=\"errorOccured\")\n    h3 Error occured\n    p Will retry in a {{timeUntilRefresh}}s\n\n    \n\n    \n                \n                    ./stop-info.component.scss\n                \n                mat-tab-group{\n    flex-grow: 1;\n}\ndiv.error-box{\n    flex:0 0 auto;\n    background:#B00020;\n    color:white;\n    padding:5px 20px 5px 20px;\n    h3{\n        font-size: 25px;\n        line-height: 30px;\n        padding:0px;\n        margin:0px;\n    }\n    p{\n        font-size: 15px;\n        line-height: 20px;\n        padding:0px;\n        margin:0px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-map-header-box([blur]=\"stopLocation===undefined\",title=\"{{stopInfo?.stopName}}\",i18n-title=\"@@stopName\",i18n-subtitle=\"Refreshing in x seconds@@refreshingInXSeconds\",subtitle=\"Refreshing in {{timeUntilRefresh}}s\")    map(appStopLocation,[location]=\"stopLocation\",role=\"none\")mat-tab-group(mat-stretch-tabs,[dynamicHeight]=\"true\")    mat-tab(i18n-label=\"tab header departures|Departures@@departures\",label=\"Departures\")        app-departure-list([departures]=\"stopInfo?.actual\")    mat-tab(i18n-label=\"tab header routes|Routes@@Routes\",label=\"Routes\")        app-route-list([routes]=\"stopInfo?.routes\")div.error-box(*ngIf=\"errorOccured\")    h3 Error occured    p Will retry in a {{timeUntilRefresh}}s'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'StopInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StopInfoResolver.html":{"url":"guards/StopInfoResolver.html","title":"guard - StopInfoResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    StopInfoResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/stop/stop-info.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-info.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.resolver.ts:28\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopPassage } from '@donmahallem/trapeze-api-types';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../services';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class StopInfoResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: ApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getStopPassages(route.params['stopId'])\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StopLocationMapDirective.html":{"url":"directives/StopLocationMapDirective.html","title":"directive - StopLocationMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StopLocationMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/stop/stop-map.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive displaying a map with the StopLocation\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appStopLocation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopLocationSubject\n                            \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startUpdater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, userLocationService: UserLocationService, zone: NgZone, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-map.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startUpdater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startUpdater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:51\n                \n            \n\n\n            \n                \n                    Creates the Update Observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n\n                \n                    \n                        setlocation(loc)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            loc\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { createStopIcon } from 'src/app/leaflet';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\n/**\n * Directive displaying a map with the StopLocation\n */\n@Directive({\n    selector: 'map[appStopLocation]',\n})\nexport class StopLocationMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n    @Input('location')\n    public set location(loc: IStopLocation) {\n        this.stopLocationSubject.next(loc);\n    }\n    private updateSubscription: Subscription;\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private stopLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.startUpdater();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n\n    /**\n     * Creates the Update Observable\n     */\n    public startUpdater(): void {\n        if (this.updateSubscription) {\n            return;\n        }\n        this.updateSubscription = this.stopLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n                    const stopIcon: L.Icon = createStopIcon();\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            clickable: false,\n                            icon: stopIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopModule.html":{"url":"modules/StopModule.html","title":"module - StopModule","body":"\n                   \n\n\n\n\n    Modules\n    StopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StopModule\n\n\n\ncluster_StopModule_declarations\n\n\n\ncluster_StopModule_imports\n\n\n\n\nDepartureListComponent\n\nDepartureListComponent\n\n\n\nStopModule\n\nStopModule\n\nStopModule -->\n\nDepartureListComponent->StopModule\n\n\n\n\n\nDepartureListItemComponent\n\nDepartureListItemComponent\n\nStopModule -->\n\nDepartureListItemComponent->StopModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nStopModule -->\n\nRouteListComponent->StopModule\n\n\n\n\n\nStopInfoComponent\n\nStopInfoComponent\n\nStopModule -->\n\nStopInfoComponent->StopModule\n\n\n\n\n\nStopLocationMapDirective\n\nStopLocationMapDirective\n\nStopModule -->\n\nStopLocationMapDirective->StopModule\n\n\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nStopModule -->\n\nMapHeaderBoxModule->StopModule\n\n\n\n\n\nStopRoutingModule\n\nStopRoutingModule\n\nStopModule -->\n\nStopRoutingModule->StopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stop/stop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DepartureListComponent\n                        \n                        \n                            DepartureListItemComponent\n                        \n                        \n                            RouteListComponent\n                        \n                        \n                            StopInfoComponent\n                        \n                        \n                            StopLocationMapDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapHeaderBoxModule\n                        \n                        \n                            StopRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { MapHeaderBoxModule } from '../common';\nimport { DepartureListItemComponent } from './departure-list-item.component';\nimport { DepartureListComponent } from './departure-list.component';\nimport { RouteListComponent } from './route-list.component';\nimport { StopInfoComponent } from './stop-info.component';\nimport { StopInfoResolver } from './stop-info.resolver';\nimport { StopLocationMapDirective } from './stop-map.directive';\nimport { StopRoutingModule } from './stop-routing.module';\n@NgModule({\n    declarations: [\n        StopInfoComponent,\n        DepartureListComponent,\n        RouteListComponent,\n        StopLocationMapDirective,\n        DepartureListItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        StopRoutingModule,\n        MatTabsModule,\n        MapHeaderBoxModule,\n    ],\n    providers: [\n        StopInfoResolver,\n    ],\n})\nexport class StopModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StopPointLoadSubscriber.html":{"url":"classes/StopPointLoadSubscriber.html","title":"class - StopPointLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StopPointLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-point.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(service: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-point.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(stops: IStopLocation[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stops\n                                    \n                                            IStopLocation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class StopPointLoadSubscriber extends Subscriber {\n\n    public constructor(private service: StopPointService) {\n        super();\n    }\n\n    public next(stops: IStopLocation[]): void {\n        this.service.stopLocations = stops;\n    }\n\n    public error(err: any): void {\n\n    }\n\n    public complete(): void {\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StopPointService {\n\n    private stopLocationsSubject: BehaviorSubject = new BehaviorSubject([]);\n    private stopLoadSubscription: Subscription;\n    constructor(private api: ApiService) {\n    }\n\n    private loadStops(): void {\n        this.stopLoadSubscription = this.api.getStations()\n            .pipe(map((value) => {\n                return value.stops;\n            }))\n            .subscribe(new StopPointLoadSubscriber(this));\n    }\n    public get stopLocations(): IStopLocation[] {\n        return this.stopLocationsSubject.value;\n    }\n    public set stopLocations(locations: IStopLocation[]) {\n        this.stopLocationsSubject.next(locations ? locations : []);\n    }\n\n    public getStopLocation(stopShortName: string): IStopLocation {\n        for (const stop of this.stopLocations) {\n            if (stop.shortName === stopShortName) {\n                return stop;\n            }\n        }\n        return undefined;\n    }\n\n    public get isLoading(): boolean {\n        return this.stopLoadSubscription && !this.stopLoadSubscription.closed;\n    }\n\n    public get stopLocationsObservable(): Observable {\n        if (this.stopLocations.length === 0 && !this.isLoading) {\n            this.loadStops();\n        }\n        return this.stopLocationsSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopPointService.html":{"url":"injectables/StopPointService.html","title":"injectable - StopPointService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StopPointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-point.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopLoadSubscription\n                            \n                            \n                                    Private\n                                stopLocationsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getStopLocation\n                            \n                            \n                                    Private\n                                loadStops\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stopLocations\n                                \n                                \n                                    isLoading\n                                \n                                \n                                    stopLocationsObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-point.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopLocation(stopShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IStopLocation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadStops\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadStops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLoadSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLocationsSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stopLocations\n                    \n                \n\n                \n                    \n                        getstopLocations()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:42\n                                \n                            \n\n                \n                    \n                        setstopLocations(locations: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            locations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n\n                \n                    \n                        getisLoading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopLocationsObservable\n                    \n                \n\n                \n                    \n                        getstopLocationsObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class StopPointLoadSubscriber extends Subscriber {\n\n    public constructor(private service: StopPointService) {\n        super();\n    }\n\n    public next(stops: IStopLocation[]): void {\n        this.service.stopLocations = stops;\n    }\n\n    public error(err: any): void {\n\n    }\n\n    public complete(): void {\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StopPointService {\n\n    private stopLocationsSubject: BehaviorSubject = new BehaviorSubject([]);\n    private stopLoadSubscription: Subscription;\n    constructor(private api: ApiService) {\n    }\n\n    private loadStops(): void {\n        this.stopLoadSubscription = this.api.getStations()\n            .pipe(map((value) => {\n                return value.stops;\n            }))\n            .subscribe(new StopPointLoadSubscriber(this));\n    }\n    public get stopLocations(): IStopLocation[] {\n        return this.stopLocationsSubject.value;\n    }\n    public set stopLocations(locations: IStopLocation[]) {\n        this.stopLocationsSubject.next(locations ? locations : []);\n    }\n\n    public getStopLocation(stopShortName: string): IStopLocation {\n        for (const stop of this.stopLocations) {\n            if (stop.shortName === stopShortName) {\n                return stop;\n            }\n        }\n        return undefined;\n    }\n\n    public get isLoading(): boolean {\n        return this.stopLoadSubscription && !this.stopLoadSubscription.closed;\n    }\n\n    public get stopLocationsObservable(): Observable {\n        if (this.stopLocations.length === 0 && !this.isLoading) {\n            this.loadStops();\n        }\n        return this.stopLocationsSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopRoutingModule.html":{"url":"modules/StopRoutingModule.html","title":"module - StopRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stop/stop-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopInfoComponent } from './stop-info.component';\nimport { StopInfoResolver } from './stop-info.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopInfoComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':stopId',\n        resolve: {\n            stopInfo: StopInfoResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopsInfoComponent.html":{"url":"components/StopsInfoComponent.html","title":"component - StopsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StopsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stops/stops-info.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stops-info\n            \n\n            \n                styleUrls\n                ./stops-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stops-info.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mStops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/stops-info.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasHeader(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/stops-info.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStops\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stops/stops-info.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stops/stops-info.component.ts:26\n                                \n                            \n                    \n                        \n                                The stops to be displayed\n\n\n                                \n                                \n                                \n                                    Returns :     IStopLocation[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\n@Component({\n    selector: 'app-stops-info',\n    styleUrls: ['./stops-info.component.scss'],\n    templateUrl: './stops-info.component.pug',\n})\nexport class StopsInfoComponent {\n    private mStops: IStopLocation[] = [];\n    constructor(private activatedRoute: ActivatedRoute) {\n        const st: IStopLocation[] = this.activatedRoute.snapshot.data.stops.stops.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n        this.mStops = st;\n\n    }\n\n    public hasHeader(idx: number): boolean {\n        return idx === 0 || this.stops[idx].name.charAt(0) !== this.stops[idx - 1].name.charAt(0);\n    }\n    /**\n     * The stops to be displayed\n     * @returns a list of stops to be used\n     */\n    public get stops(): IStopLocation[] {\n        return this.mStops;\n    }\n\n}\n\n    \n\n    \n        mat-nav-list.stoplist(role=\"list\")\n    ng-container(*ngFor=\"let item of stops;let idx = index;\")\n        mat-divider(*ngIf=\"hasHeader(idx)&&idx>0\")\n        h3(*ngIf=\"hasHeader(idx)\",mat-subheader) {{item.name.charAt(0)}}\n        mat-list-item([routerLink]=\"['/stop', item.shortName]\",role=\"listitem\")\n            mat-icon(mat-list-icon) place\n            h4(mat-line) {{item?.name}}\n    \n\n    \n                \n                    ./stops-info.component.scss\n                \n                mat-nav-list.stoplist {\n    overflow-y: auto;\n    overflow-x: hidden;\n    flex: 1;\n    \n}\n@import './../../box-settings.scss';\n@media (min-width: #{$boxMaxWidth + 1}){\n    mat-nav-list.stoplist{\n        padding-top:100px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list.stoplist(role=\"list\")    ng-container(*ngFor=\"let item of stops;let idx = index;\")        mat-divider(*ngIf=\"hasHeader(idx)&&idx>0\")        h3(*ngIf=\"hasHeader(idx)\",mat-subheader) {{item.name.charAt(0)}}        mat-list-item([routerLink]=\"[\\'/stop\\', item.shortName]\",role=\"listitem\")            mat-icon(mat-list-icon) place            h4(mat-line) {{item?.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'StopsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsModule.html":{"url":"modules/StopsModule.html","title":"module - StopsModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\n\nStopsInfoComponent\n\nStopsInfoComponent\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nStopsInfoComponent->StopsModule\n\n\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nStopsModule -->\n\nRetryDialogModule->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Stops lazy loaded Module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StopsInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RetryDialogModule\n                        \n                        \n                            StopsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { RetryDialogModule } from '../common/retry-dialog';\nimport { StopsInfoComponent } from './stops-info.component';\nimport { StopsRoutingModule } from './stops-routing.module';\nimport { StopsResolver } from './stops.resolver';\n\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        StopsInfoComponent,\n    ],\n    imports: [\n        StopsRoutingModule,\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        MatInputModule,\n        RetryDialogModule,\n        MatDialogModule,\n    ],\n    providers: [\n        StopsResolver,\n    ],\n})\nexport class StopsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StopsResolver.html":{"url":"guards/StopsResolver.html","title":"guard - StopsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    StopsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/stops/stops.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    A Resolver for the Stations Response\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/stops.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/stops.resolver.ts:32\n                \n            \n\n\n            \n                \n                    Resolves the station response\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The activated RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The router state snapshot\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that resolves the {\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopLocations } from '@donmahallem/trapeze-api-types';\nimport { throwError, EMPTY, Observable } from 'rxjs';\nimport { catchError, retryWhen } from 'rxjs/operators';\nimport { retryDialogStrategy } from 'src/app/rxjs-util';\nimport { ApiService } from '../../services';\nimport { RetryDialogComponent } from '../common/retry-dialog';\n\n/**\n * A Resolver for the Stations Response\n */\n@Injectable()\nexport class StopsResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     */\n    public constructor(private api: ApiService,\n        private router: Router,\n        private dialog: MatDialog) { }\n\n    /**\n     * Resolves the station response\n     * @param route The activated RouteSnapshot\n     * @param state The router state snapshot\n     * @returns An observable that resolves the {@StationsResponse}\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getStations()\n            .pipe(catchError((err: any | HttpErrorResponse): Observable => {\n                if (err.status === 404) {\n                    this.router.navigate(['error', 'not-found']);\n                    return EMPTY;\n                } else {\n                    return throwError(err);\n                }\n            }),\n                retryWhen(retryDialogStrategy((error: any | HttpErrorResponse) => {\n                    return this.dialog.open(RetryDialogComponent, {\n                        data: {\n                            code: error.status ? error.status : undefined,\n                            message: 'test',\n                        },\n                    });\n                })));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsRoutingModule.html":{"url":"modules/StopsRoutingModule.html","title":"module - StopsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopsInfoComponent } from './stops-info.component';\nimport { StopsResolver } from './stops.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopsInfoComponent,\n        path: '',\n        resolve: {\n            stops: StopsResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarSearchBoxComponent.html":{"url":"components/ToolbarSearchBoxComponent.html","title":"component - ToolbarSearchBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarSearchBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/search-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar-search\n            \n\n            \n                styleUrls\n                ./search-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-box.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoComplete\n                            \n                            \n                                filteredOptions\n                            \n                            \n                                searchControl\n                            \n                            \n                                    Public\n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFn\n                            \n                            \n                                    Public\n                                doFocusSearch\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLoseFocus\n                            \n                            \n                                    Public\n                                onStopSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusSearch\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stopService: StopPointService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/search-box.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        focusSearch\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFn\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFn(user?: IStopLocation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            IStopLocation\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doFocusSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFocusSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoseFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoseFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onStopSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onStopSelected(stop?: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stop\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatAutocomplete)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('searchInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchOpen\n                    \n                \n\n\n                \n                    \n                        setsearchOpen(open: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            open\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { Observable } from 'rxjs';\nimport { flatMap, map, startWith } from 'rxjs/operators';\nimport { StopPointService } from 'src/app/services/stop-point.service';\n@Component({\n    selector: 'app-toolbar-search',\n    styleUrls: ['./search-box.component.scss'],\n    templateUrl: './search-box.component.pug',\n})\nexport class ToolbarSearchBoxComponent implements OnInit, OnDestroy {\n\n    searchControl = new FormControl();\n    filteredOptions: Observable;\n\n    @ViewChild(MatAutocomplete)\n    autoComplete: MatAutocomplete;\n    @ViewChild('searchInput')\n    public searchInput: ElementRef;\n\n    @Output()\n    public readonly focusSearch: EventEmitter = new EventEmitter();\n    constructor(private stopService: StopPointService,\n        private router: Router) {\n    }\n\n    public set searchOpen(open: boolean) {\n        if (open) {\n            this.searchControl.setValue('');\n            this.doFocusSearch();\n        }\n    }\n\n    public doFocusSearch(): void {\n        setTimeout(() => {\n            this.searchInput.nativeElement.focus();\n            this.searchInput.nativeElement.select();\n        }, 0);\n    }\n\n    public onLoseFocus(): void {\n        this.focusSearch.next(false);\n    }\n\n    public onStopSelected(stop?: MatAutocompleteSelectedEvent): void {\n        this.searchOpen = false;\n        this.focusSearch.next(false);\n        if (stop.option.value) {\n            this.searchControl.setValue('');\n            this.router.navigate(['/stop', stop.option.value.shortName]);\n        }\n    }\n    displayFn(user?: IStopLocation): string | undefined {\n        return user ? user.name : undefined;\n    }\n    public ngOnInit(): void {\n        this.filteredOptions = this.searchControl.valueChanges\n            .pipe(\n                startWith(''),\n                flatMap((value: string) => {\n                    return this.stopService.stopLocationsObservable\n                        .pipe(map((stops: IStopLocation[]) => {\n                            return stops.filter(option => option.name.toLowerCase().includes(value));\n                        }));\n                }),\n            );\n    }\n\n    public ngOnDestroy(): void {\n    }\n\n}\n\n    \n\n    \n        form(role=\"search\")\n    mat-form-field\n        input(#searchInput,(blur)=\"onLoseFocus()\",type=\"search\",aria-label=\"Number\",placeholder=\"Stopname\",matInput,[formControl]=\"searchControl\",[matAutocomplete]=\"auto\",i18n-placeholder=\"Stopname to search@@stopnameToSearch\",i18n-aria-placeholder=\"Stopname to search@@stopnameToSearch\")\n        mat-autocomplete(#auto=\"matAutocomplete\",[displayWith]=\"displayFn\",(optionSelected)=\"onStopSelected($event)\")\n            mat-option(*ngFor=\"let option of filteredOptions | async\",[value]=\"option\") {{option.name}}\n    \n\n    \n                \n                    ./search-box.component.scss\n                \n                :host{\n    display:block;\n}\nform,mat-form-field{\n    width:100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'form(role=\"search\")    mat-form-field        input(#searchInput,(blur)=\"onLoseFocus()\",type=\"search\",aria-label=\"Number\",placeholder=\"Stopname\",matInput,[formControl]=\"searchControl\",[matAutocomplete]=\"auto\",i18n-placeholder=\"Stopname to search@@stopnameToSearch\",i18n-aria-placeholder=\"Stopname to search@@stopnameToSearch\")        mat-autocomplete(#auto=\"matAutocomplete\",[displayWith]=\"displayFn\",(optionSelected)=\"onStopSelected($event)\")            mat-option(*ngFor=\"let option of filteredOptions | async\",[value]=\"option\") {{option.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarSearchBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripPassagesComponent.html":{"url":"components/TripPassagesComponent.html","title":"component - TripPassagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripPassagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/trip-passages/trip-passages.component.ts\n\n\n    \n        Description\n    \n    \n        Component displaying the TripPassages for a Trip\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-passages\n            \n\n            \n                styleUrls\n                ./trip-passages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trip-passages.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                DEBOUNCE_TIME\n                            \n                            \n                                    Private\n                                pollSubscription\n                            \n                            \n                                    Private\n                                snapshotDataSubscription\n                            \n                            \n                                    Private\n                                status\n                            \n                            \n                                    Public\n                                    Readonly\n                                StatusOps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tripData\n                                \n                                \n                                    lastTimestamp\n                                \n                                \n                                    statusCode\n                                \n                                \n                                    tripId\n                                \n                                \n                                    routeName\n                                \n                                \n                                    tripPassages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/trip-passages.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:109\n                \n            \n\n\n            \n                \n                    Returns if an error has happened during the last update\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if an error occured\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:142\n                \n            \n\n\n            \n                \n                    Initializes the update observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:170\n                \n            \n\n\n            \n                \n                    destroys created update observables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            DEBOUNCE_TIME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pollSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            snapshotDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            StatusOps\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UpdateStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tripData\n                    \n                \n\n                \n                    \n                        gettripData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:55\n                                \n                            \n                    \n                        \n                                Returns the TripPassages\n\n\n                                \n                                \n                                \n                                    Returns :         TripPassagesLocation\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastTimestamp\n                    \n                \n\n                \n                    \n                        getlastTimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:66\n                                \n                            \n                    \n                        \n                                Returns the last timestamp when data was tried to be retrieved\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusCode\n                    \n                \n\n                \n                    \n                        getstatusCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:77\n                                \n                            \n                    \n                        \n                                Returns the current set update status or UpdateStatus.LOADING\n\n\n                                \n                                \n                                \n                                    Returns :         UpdateStatus\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tripId\n                    \n                \n\n                \n                    \n                        gettripId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:87\n                                \n                            \n                    \n                        \n                                returns the current tripID\n\n\n                                \n                                    Returns :     TripId\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        routeName\n                    \n                \n\n                \n                    \n                        getrouteName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:94\n                                \n                            \n                    \n                        \n                                short hand to retrieve route name\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tripPassages\n                    \n                \n\n                \n                    \n                        gettripPassages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:101\n                                \n                            \n                    \n                        \n                                List of passages\n\n\n                                \n                                    Returns :     IActualTripPassage[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IActualTripPassage, TripId } from '@donmahallem/trapeze-api-types';\nimport { from, BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, debounceTime, flatMap, map } from 'rxjs/operators';\nimport { TripPassagesLocation } from 'src/app/models';\nimport { ApiService } from '../../services';\n\nenum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status: UpdateStatus;\n    passages: TripPassagesLocation;\n    timestamp: number;\n    failures?: number;\n}\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.pug',\n})\nexport class TripPassagesComponent implements AfterViewInit, OnDestroy {\n    public readonly DEBOUNCE_TIME: number = 5000;\n    private status: BehaviorSubject = new BehaviorSubject(undefined);\n    private snapshotDataSubscription: Subscription;\n    private pollSubscription: Subscription;\n    public readonly StatusOps: typeof UpdateStatus = UpdateStatus;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private router: Router) {\n        this.snapshotDataSubscription = this.route.data.subscribe((data) => {\n            this.status.next({\n                passages: data['tripPassages'],\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n            });\n        });\n    }\n\n    /**\n     * Returns the TripPassages\n     * @returns undefined or {@link TripPassagesLocation}\n     */\n    public get tripData(): TripPassagesLocation {\n        if (this.status.value) {\n            return this.status.value.passages;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the last timestamp when data was tried to be retrieved\n     * @returns number or 0 if no timestamp is set\n     */\n    public get lastTimestamp(): number {\n        if (this.status.value) {\n            return this.status.value.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns the current set update status or {@link UpdateStatus.LOADING}\n     * @returns the {@link UpdateStatus}\n     */\n    public get statusCode(): UpdateStatus {\n        if (this.status.value) {\n            return this.status.value.status;\n        }\n        return UpdateStatus.LOADING;\n    }\n\n    /**\n     * returns the current tripID\n     */\n    public get tripId(): TripId {\n        return this.route.snapshot.params.tripId;\n    }\n\n    /**\n     * short hand to retrieve route name\n     */\n    public get routeName(): string {\n        return (this.tripData) ? this.tripData.routeName : '';\n    }\n\n    /**\n     * List of passages\n     */\n    public get tripPassages(): IActualTripPassage[] {\n        return (this.tripData !== undefined) ? this.tripData.actual : [];\n    }\n\n    /**\n     * Returns if an error has happened during the last update\n     * @returns true if an error occured\n     */\n    public hasError(): boolean {\n        return this.statusCode >= UpdateStatus.ERROR;\n    }\n\n    private handleError(err?: any): Observable {\n        let status: UpdateStatus = UpdateStatus.ERROR;\n        if (err.status) {\n            // Http Error\n            const statusCode: number = err.status;\n            if (statusCode === 404) {\n                status = UpdateStatus.NOT_FOUND;\n                this.router.navigate(['not-found'], {\n                    queryParams: {\n                        type: 'passages',\n                    },\n                });\n            } else if (statusCode >= 500 && statusCode  {\n                return this.route.snapshot.params['tripId'];\n            }),\n            flatMap((tripId: TripId) => {\n                return this.apiService.getTripPassages(tripId);\n            }),\n            map((passages: TripPassagesLocation): IPassageStatus => {\n                return {\n                    passages: passages,\n                    status: UpdateStatus.LOADED,\n                    timestamp: Date.now(),\n                };\n            }),\n            catchError(this.handleError.bind(this)))\n            .subscribe(new Subscriber((val: IPassageStatus) => {\n                if (val.passages.tripId === this.tripId) {\n                    this.status.next(val);\n                } else {\n                    // trigger so a reload can execute\n                    this.status.next(this.status.value);\n                }\n            }));\n    }\n    /**\n     * destroys created update observables\n     */\n    public ngOnDestroy(): void {\n        if (this.snapshotDataSubscription) {\n            this.snapshotDataSubscription.unsubscribe();\n        }\n        if (this.pollSubscription) {\n            this.pollSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n    \n        app-map-header-box([blur]=\"hasError()\",title=\"{{routeName}} - {{tripData?.directionText}}\")\n    map(appTripPassages,[location]=\"tripData?.location\",role=\"none\")\ndiv.error-box(*ngIf=\"hasError()\",aria-errormessage=\"Error retrieving data\",i18n-aria-errormessage=\"@@errorUpdatingData\")\n    span.title(i18n=\"@@anErrorOccured\") An error occured (Code: {{statusCode}})\n    span.text Retrying in\n        |\n        span(appCountdownTimer,[targetTime]=\"lastTimestamp + DEBOUNCE_TIME\",[placeholder]=\"'sync'\") test\nmat-nav-list(*ngIf=\"tripId==tripData?.tripId\",role=\"list\")\n    a(*ngFor=\"let passage of tripPassages\",[routerLink]=\"['/stop', passage?.stop?.shortName]\",role=\"listitem\")\n        mat-list-item\n            mat-icon(matListIcon,role=\"figure\",i18n-aria-label=\"@@busStopIcon\",aria-label=\"Bus stop icon\") trip_origin\n            h3(matLine,aria-label=\"Stop name\",i18n-aria-label=\"@@stopName\") {{passage?.stop?.name}}\n            p(matLine)\n                span(role=\"timer\") {{passage?.actualTime}}\n                |\n                span(class=\"demo-2\",role=\"status\") -- {{passage?.status}}\n    \n\n    \n                \n                    ./trip-passages.component.scss\n                \n                h3.route-title {\n    padding: 24px;\n}\n\ndiv.error-box {\n    background: #F44336;\n    padding: 16px;\n    flex:0 0 auto; \n    span.title {\n        text-transform: capitalize;\n        font-weight: bold;\n        display: block;\n        font-size: 16px;\n    }\n    span.text {\n        font-size: 12px;\n    }\n}\n\nmat-nav-list{\n    flex-grow: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-map-header-box([blur]=\"hasError()\",title=\"{{routeName}} - {{tripData?.directionText}}\")    map(appTripPassages,[location]=\"tripData?.location\",role=\"none\")div.error-box(*ngIf=\"hasError()\",aria-errormessage=\"Error retrieving data\",i18n-aria-errormessage=\"@@errorUpdatingData\")    span.title(i18n=\"@@anErrorOccured\") An error occured (Code: {{statusCode}})    span.text Retrying in        |        span(appCountdownTimer,[targetTime]=\"lastTimestamp + DEBOUNCE_TIME\",[placeholder]=\"\\'sync\\'\") testmat-nav-list(*ngIf=\"tripId==tripData?.tripId\",role=\"list\")    a(*ngFor=\"let passage of tripPassages\",[routerLink]=\"[\\'/stop\\', passage?.stop?.shortName]\",role=\"listitem\")        mat-list-item            mat-icon(matListIcon,role=\"figure\",i18n-aria-label=\"@@busStopIcon\",aria-label=\"Bus stop icon\") trip_origin            h3(matLine,aria-label=\"Stop name\",i18n-aria-label=\"@@stopName\") {{passage?.stop?.name}}            p(matLine)                span(role=\"timer\") {{passage?.actualTime}}                |                span(class=\"demo-2\",role=\"status\") -- {{passage?.status}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripPassagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TripPassagesModule.html":{"url":"modules/TripPassagesModule.html","title":"module - TripPassagesModule","body":"\n                   \n\n\n\n\n    Modules\n    TripPassagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TripPassagesModule\n\n\n\ncluster_TripPassagesModule_declarations\n\n\n\ncluster_TripPassagesModule_imports\n\n\n\n\nFollowBusMapDirective\n\nFollowBusMapDirective\n\n\n\nTripPassagesModule\n\nTripPassagesModule\n\nTripPassagesModule -->\n\nFollowBusMapDirective->TripPassagesModule\n\n\n\n\n\nTripPassagesComponent\n\nTripPassagesComponent\n\nTripPassagesModule -->\n\nTripPassagesComponent->TripPassagesModule\n\n\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nTripPassagesModule -->\n\nCountdownTimerModule->TripPassagesModule\n\n\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nTripPassagesModule -->\n\nMapHeaderBoxModule->TripPassagesModule\n\n\n\n\n\nTripPassagesRoutingModule\n\nTripPassagesRoutingModule\n\nTripPassagesModule -->\n\nTripPassagesRoutingModule->TripPassagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FollowBusMapDirective\n                        \n                        \n                            TripPassagesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CountdownTimerModule\n                        \n                        \n                            MapHeaderBoxModule\n                        \n                        \n                            TripPassagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatIconModule, MatListModule, MatProgressSpinnerModule, MatToolbarModule } from '@angular/material';\nimport { MapHeaderBoxModule } from '../common';\nimport { CountdownTimerModule } from '../common/countdown-timer';\nimport { FollowBusMapDirective } from './follow-bus-map.directive';\nimport { TripPassagesRoutingModule } from './trip-passages-routing.module';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n@NgModule({\n    declarations: [\n        TripPassagesComponent,\n        FollowBusMapDirective,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        TripPassagesRoutingModule,\n        MapHeaderBoxModule,\n        CountdownTimerModule,\n    ],\n    providers: [\n        TripPassagesResolver,\n    ],\n})\nexport class TripPassagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TripPassagesResolver.html":{"url":"guards/TripPassagesResolver.html","title":"guard - TripPassagesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TripPassagesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/trip-passages/trip-passages.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/trip-passages.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../services';\n\n@Injectable()\nexport class TripPassagesResolver implements Resolve {\n\n    public constructor(private api: ApiService, private router: Router) { }\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api.getTripPassages(route.params['tripId'])\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['not-found']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TripPassagesRoutingModule.html":{"url":"modules/TripPassagesRoutingModule.html","title":"module - TripPassagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TripPassagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: TripPassagesComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':tripId',\n        resolve: {\n            tripPassages: TripPassagesResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class TripPassagesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLocationService.html":{"url":"injectables/UserLocationService.html","title":"injectable - UserLocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-location.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                locationErrorObservable\n                            \n                            \n                                    Private\n                                locationErrorSubject\n                            \n                            \n                                    Public\n                                    Readonly\n                                locationObservable\n                            \n                            \n                                    Private\n                                locationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPositionRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    featureAvailable\n                                \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-location.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPositionRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPositionRequest(timeout: number, highAccuracy: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-location.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                \n                                \n                                    highAccuracy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationErrorObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.locationErrorSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationErrorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.locationSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        featureAvailable\n                    \n                \n\n                \n                    \n                        getfeatureAvailable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n                \n                    \n                        getlocation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, debounceTime, flatMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserLocationService {\n\n    private locationErrorSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    public readonly locationErrorObservable: Observable = this.locationErrorSubject.asObservable();\n\n    private locationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    public readonly locationObservable: Observable = this.locationSubject.asObservable();\n    public constructor() {\n        this.locationErrorObservable\n            .pipe(debounceTime(30000),\n                flatMap((val) => {\n                    return this.createPositionRequest();\n                }),\n                catchError((err) => {\n                    this.locationErrorSubject.next(err);\n                    return EMPTY;\n                }))\n            .subscribe((val) => {\n                this.locationErrorSubject.next(undefined);\n                this.locationSubject.next(val);\n            });\n    }\n\n    public get featureAvailable(): boolean {\n        return (navigator.geolocation) ? true : false;\n    }\n\n    public get location(): Position {\n        return this.locationSubject.value;\n    }\n\n    public createPositionRequest(timeout: number = 10000, highAccuracy: boolean = false) {\n        return new Observable((subscriber) => {\n\n            const geoSuccess = (position: Position): void => {\n                subscriber.next(position);\n                subscriber.complete();\n            };\n            const geoError = (error: PositionError): void => {\n                subscriber.error(error);\n            };\n            navigator.geolocation.getCurrentPosition(geoSuccess, geoError, {\n                enableHighAccuracy: highAccuracy,\n                maximumAge: 5 * 60 * 1000, // Cache 5 minutes\n                timeout: timeout,\n            });\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLocationSubscriber.html":{"url":"classes/UserLocationSubscriber.html","title":"class - UserLocationSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLocationSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(cmp: LeafletMapComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/leaflet-map.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cmp\n                                                  \n                                                        \n                                                                        LeafletMapComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(value: Position)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Position\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.2,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VehicleLoadSubscriber.html":{"url":"classes/VehicleLoadSubscriber.html","title":"class - VehicleLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VehicleLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mainMap: MainMapDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-map/main-map.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mainMap\n                                                  \n                                                        \n                                                                    MainMapDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(res: IVehicleLocationList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            IVehicleLocationList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { combineLatest, from, timer, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map, startWith } from 'rxjs/operators';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { createStopIcon, createVehicleIcon } from '../../leaflet';\nimport { IMapBounds, LeafletMapComponent, MapMoveEvent, MapMoveEventType } from '../../modules/common/leaflet-map.component';\nimport { StopPointService } from '../../services/stop-point.service';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { ApiService } from './../../services';\n\nexport class VehicleLoadSubscriber extends Subscriber {\n\n    public constructor(private mainMap: MainMapDirective) {\n        super();\n    }\n    public next(res: IVehicleLocationList): void {\n        this.mainMap.setVehicles(res);\n    }\n}\n\n@Directive({\n    selector: 'map[appMainMap]',\n})\nexport class MainMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(elRef: ElementRef,\n        private apiService: ApiService,\n        private router: Router,\n        private stopService: StopPointService,\n        userLocationService: UserLocationService,\n        private snackBar: MatSnackBar,\n        settings: SettingsService,\n        zone: NgZone) {\n        super(elRef, zone, userLocationService, settings);\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleUpdateSubscription: Subscription;\n\n    public setVehicles(vehicles: IVehicleLocationList): void {\n        if (this.vehicleMarkerLayer !== undefined) {\n            this.vehicleMarkerLayer.clearLayers();\n        } else {\n            this.vehicleMarkerLayer = L.featureGroup();\n            this.vehicleMarkerLayer.addTo(this.getMap());\n            this.vehicleMarkerLayer.on('click', this.markerOnClick.bind(this));\n        }\n        if (vehicles && Array.isArray(vehicles.vehicles)) {\n            for (const veh of vehicles.vehicles) {\n                if (veh.isDeleted === true) {\n                    continue;\n                }\n                this.addVehicleMarker(veh).addTo(this.vehicleMarkerLayer);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.startVehicleUpdater();\n        const ourCustomControl = L.Control.extend({\n            onAdd: () => {\n                const container = L.DomUtil.create('i', 'material-icons leaflet-bar leaflet-control leaflet-control-custom');\n                container.style.backgroundColor = 'white';\n                container.style.width = '42px';\n                container.style.height = '42px';\n                container.style.lineHeight = '42px';\n                container.style.textAlign = 'center';\n                container.style.verticalAlign = 'center';\n                container.style.cursor = 'pointer';\n                container.innerHTML = 'my_location';\n                container.style.userSelect = 'none';\n                container.style.msUserSelect = 'none';\n                container.onclick = () => {\n                    if (this.userLocationService.location) {\n                        const pos: Position = this.userLocationService.location;\n                        this.getMap().panTo({\n                            alt: 5000,\n                            lat: pos.coords.latitude, // / 3600000,\n                            lng: pos.coords.longitude, // / 3600000,\n                        },\n                            { animate: true });\n                    } else {\n                        this.snackBar.open('No location acquired yet!',\n                            undefined,\n                            {\n                                duration: 2000,\n                            });\n                    }\n                };\n                return container;\n            },\n            options: {\n                position: 'bottomright',\n                // control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'\n            },\n        });\n        this.getMap().addControl(new ourCustomControl());\n        // this.getMap().flyTo(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n    }\n\n    public startVehicleUpdater(): void {\n        // as mapMove doesn't emit on init this needs to be provided to load atleast once\n        const primedMoveObservable: Observable = this.mapMove.pipe(\n            startWith({\n                type: MapMoveEventType.END,\n            }));\n        this.vehicleUpdateSubscription = combineLatest([timer(0, 5000), primedMoveObservable])\n            .pipe(\n                map((value: [number, MapMoveEvent]): MapMoveEvent => {\n                    return value[1];\n                }),\n                filter((event: MapMoveEvent): boolean => {\n                    return (event.type === MapMoveEventType.END);\n                }),\n                flatMap((moveEvent: MapMoveEvent) => {\n                    const bounds: IMapBounds = {\n                        bottom: this.mapBounds.getSouth(),\n                        left: this.mapBounds.getWest(),\n                        right: this.mapBounds.getEast(),\n                        top: this.mapBounds.getNorth(),\n                    };\n                    return this.apiService.getVehicleLocations(bounds);\n                }),\n                catchError((err: Error) => {\n                    return from([{}]);\n                }))\n            .subscribe(new VehicleLoadSubscriber(this));\n    }\n\n    public markerOnClick(event) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['passages', event.sourceTarget.data.tripId]);\n        });\n    }\n    public addVehicleMarker(vehicle: IVehicleLocation): L.Marker {\n        const vehicleIcon: L.DivIcon = createVehicleIcon(vehicle.heading, vehicle.name.split(' ')[0], 40);\n        const markerT: any = L.marker([vehicle.latitude / 3600000, vehicle.longitude / 3600000], \n            {\n                icon: vehicleIcon,\n                rotationAngle: vehicle.heading - 90,\n                title: vehicle.name,\n                zIndexOffset: 100,\n            });\n        markerT.data = vehicle;\n        return markerT;\n    }\n    public addMarker() {\n        this.stopService.stopLocationsObservable\n            .subscribe((stops: IStopLocation[]) => {\n                const stopList: L.Marker[] = [];\n                for (const stop of stops) {\n                    if (stop === null) {\n                        continue;\n                    }\n                    const greenIcon = createStopIcon();\n                    const markerT: L.Marker = L.marker([stop.latitude / 3600000, stop.longitude / 3600000],\n                        {\n                            clickable: true,\n                            icon: greenIcon,\n                            riseOffset: 10,\n                            riseOnHover: true,\n                            title: stop.name,\n                            zIndexOffset: 10,\n                        });\n                    (markerT).data = stop;\n                    stopList.push(markerT);\n                }\n                if (this.stopMarkerLayer !== undefined) {\n                    this.stopMarkerLayer.remove();\n                }\n                const featureGroup: L.FeatureGroup = L.featureGroup(stopList);\n                this.stopMarkerLayer = featureGroup.addTo(this.getMap());\n                featureGroup.on('click', this.stopMarkerOnClick.bind(this));\n            });\n    }\n\n    public stopMarkerOnClick(event: { sourceTarget: { data: IStopLocation } }) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['stop', event.sourceTarget.data.shortName]);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.vehicleUpdateSubscription) {\n            this.vehicleUpdateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-error-handler.ts\n            \n            injectable\n            AppErrorHandler\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/app-preloading-strategy.ts\n            \n            class\n            AppPreloadingStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            moduleImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            SettingsInitializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/drawable.directive.ts\n            \n            directive\n            DrawableDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_SHADOW_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/icons.ts\n            \n            variable\n            createStopIcon\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/icons.ts\n            \n            variable\n            createVehicleIcon\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Bounds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/countdown-timer/countdown-timer.directive.ts\n            \n            directive\n            CountdownTimerDirective\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            class\n            LeafletMapComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            class\n            UserLocationSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapBounds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapMoveEndEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapMoveStartEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/common/map-header-box/map-header-box.component.ts\n            \n            component\n            MapHeaderBoxComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/common/retry-dialog/retry-dialog.component.ts\n            \n            component\n            RetryDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/retry-dialog/retry-dialog.component.ts\n            \n            class\n            RetryDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-map/main-map.directive.ts\n            \n            directive\n            MainMapDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/main-map/main-map.directive.ts\n            \n            class\n            VehicleLoadSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/main-toolbar.component.ts\n            \n            component\n            MainToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/main-toolbar.component.ts\n            \n            class\n            NavigationSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/route-loading-indicator.component.ts\n            \n            component\n            RouteLoadingIndicatorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/route-loading-indicator.component.ts\n            \n            class\n            RouteLoadingSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/search-box.component.ts\n            \n            component\n            ToolbarSearchBoxComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/stop/departure-list-item.component.ts\n            \n            component\n            DepartureListItemComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/modules/stop/departure-list.component.ts\n            \n            component\n            DepartureListComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/route-list.component.ts\n            \n            component\n            RouteListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-info.component.ts\n            \n            component\n            StopInfoComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-info.resolver.ts\n            \n            guard\n            StopInfoResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-map.directive.ts\n            \n            directive\n            StopLocationMapDirective\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/modules/stops/stops-info.component.ts\n            \n            component\n            StopsInfoComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stops/stops.resolver.ts\n            \n            guard\n            StopsResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/follow-bus-map.directive.ts\n            \n            directive\n            FollowBusMapDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/follow-bus-map.directive.ts\n            \n            class\n            RoutesSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.component.ts\n            \n            component\n            TripPassagesComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.component.ts\n            \n            interface\n            IPassageStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.resolver.ts\n            \n            guard\n            TripPassagesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/rxjs-util/retry-dialog-strategy.ts\n            \n            variable\n            retryDialogStrategy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            injectable\n            AppNotificationService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            interface\n            IAppNotification\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            class\n            SettingsLoadSubscriber\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/stop-point.service.ts\n            \n            class\n            StopPointLoadSubscriber\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/stop-point.service.ts\n            \n            injectable\n            StopPointService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/user-location.service.ts\n            \n            injectable\n            UserLocationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/app-version.ts\n            \n            function\n            getAppVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.base.ts\n            \n            interface\n            IEnvironmentBase\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.pwa.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.14\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.14\n        \n            @angular/compiler : ^7.2.14\n        \n            @angular/core : ^7.2.14\n        \n            @angular/forms : ^7.2.14\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ^7.2.14\n        \n            @angular/platform-browser-dynamic : ^7.2.14\n        \n            @angular/pwa : ^0.13.8\n        \n            @angular/router : ^7.2.14\n        \n            @angular/service-worker : ^7.2.14\n        \n            @donmahallem/trapeze-api-types : ^1.2.1\n        \n            @types/leaflet : 1.4.4\n        \n            core-js : ^3.0.1\n        \n            leaflet : ^1.4.0\n        \n            leaflet-rotatedmarker : ^0.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-cli-pug-loader : ^0.1.7\n        \n            rxjs : ^6.5.1\n        \n            zone.js : ^0.9.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppNotificationType   (src/.../app-notification.service.ts)\n                        \n                        \n                            MapMoveEventType   (src/.../leaflet-map.component.ts)\n                        \n                        \n                            UpdateStatus   (src/.../trip-passages.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/app-notification.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AppNotificationType\n                    \n                \n                    \n                        \n                            Notification Type\n\n                        \n                    \n                        \n                            \n                                 ALERT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/modules/common/leaflet-map.component.ts\n    \n        \n            \n                \n                    \n                        \n                        MapMoveEventType\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/modules/trip-passages/trip-passages.component.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdateStatus\n                    \n                \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 LOADED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PAUSED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getAppVersion   (src/.../app-version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/app-version.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getAppVersion\n                        \n                        \n                    \n                \n            \n            \n                \ngetAppVersion()\n                \n            \n\n\n\n\n            \n                \n                    Reads the angular app version from the package file\n\n\n                    \n                    \n                    \n                        Returns :         AppVersion\n\n                    \n                    \n                        The current app version\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ntrapeze-client-ng\n   \nNgsw Disabled: \nNgsw Enabled:  \nDescription\nThis is the angular client for the Trapeze Backend provided by this express route.\nDocumentation\nThe Documentation can be found HERE\nUsage\nIn order to build this client successfully you will need to copy the environment.example.ts file and modify the values as you need.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CountdownTimerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainMapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainToolbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapHeaderBoxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotFoundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotFoundRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RetryDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TripPassagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TripPassagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CountdownTimerModule\n\n\n\ncluster_CountdownTimerModule_declarations\n\n\n\ncluster_CountdownTimerModule_exports\n\n\n\ncluster_MainMapModule\n\n\n\ncluster_MainMapModule_declarations\n\n\n\ncluster_MainMapModule_exports\n\n\n\ncluster_MainToolbarModule\n\n\n\ncluster_MainToolbarModule_declarations\n\n\n\ncluster_MainToolbarModule_exports\n\n\n\ncluster_MapHeaderBoxModule\n\n\n\ncluster_MapHeaderBoxModule_declarations\n\n\n\ncluster_MapHeaderBoxModule_exports\n\n\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\ncluster_NotFoundModule_imports\n\n\n\ncluster_RetryDialogModule\n\n\n\ncluster_RetryDialogModule_declarations\n\n\n\ncluster_RetryDialogModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_StopModule\n\n\n\ncluster_StopModule_declarations\n\n\n\ncluster_StopModule_imports\n\n\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\ncluster_TripPassagesModule\n\n\n\ncluster_TripPassagesModule_declarations\n\n\n\ncluster_TripPassagesModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrawableDirective\n\nDrawableDirective\n\nAppModule -->\n\nDrawableDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainMapModule\n\nMainMapModule\n\nAppModule -->\n\nMainMapModule->AppModule\n\n\n\n\n\nMainMapDirective \n\nMainMapDirective \n\nMainMapDirective  -->\n\nMainMapModule->MainMapDirective \n\n\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nAppModule -->\n\nMainToolbarModule->AppModule\n\n\n\n\n\nMainToolbarComponent \n\nMainToolbarComponent \n\nMainToolbarComponent  -->\n\nMainToolbarModule->MainToolbarComponent \n\n\n\n\n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent  -->\n\nMainToolbarModule->RouteLoadingIndicatorComponent \n\n\n\n\n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent  -->\n\nMainToolbarModule->ToolbarSearchBoxComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nAppNotificationService\n\nAppNotificationService\n\nAppModule -->\n\nAppNotificationService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nStopPointService\n\nStopPointService\n\nAppModule -->\n\nStopPointService->AppModule\n\n\n\n\n\nUserLocationService\n\nUserLocationService\n\nAppModule -->\n\nUserLocationService->AppModule\n\n\n\n\n\nCountdownTimerDirective\n\nCountdownTimerDirective\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nCountdownTimerModule -->\n\nCountdownTimerDirective->CountdownTimerModule\n\n\n\n\n\nCountdownTimerDirective \n\nCountdownTimerDirective \n\nCountdownTimerDirective  -->\n\nCountdownTimerModule->CountdownTimerDirective \n\n\n\n\n\nTripPassagesModule\n\nTripPassagesModule\n\nTripPassagesModule -->\n\nCountdownTimerModule->TripPassagesModule\n\n\n\n\n\nMainMapDirective\n\nMainMapDirective\n\nMainMapModule -->\n\nMainMapDirective->MainMapModule\n\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\nMainToolbarModule -->\n\nMainToolbarComponent->MainToolbarModule\n\n\n\n\n\nRouteLoadingIndicatorComponent\n\nRouteLoadingIndicatorComponent\n\nMainToolbarModule -->\n\nRouteLoadingIndicatorComponent->MainToolbarModule\n\n\n\n\n\nToolbarSearchBoxComponent\n\nToolbarSearchBoxComponent\n\nMainToolbarModule -->\n\nToolbarSearchBoxComponent->MainToolbarModule\n\n\n\n\n\nMapHeaderBoxComponent\n\nMapHeaderBoxComponent\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule -->\n\nMapHeaderBoxComponent->MapHeaderBoxModule\n\n\n\n\n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent  -->\n\nMapHeaderBoxModule->MapHeaderBoxComponent \n\n\n\n\n\nStopModule\n\nStopModule\n\nStopModule -->\n\nMapHeaderBoxModule->StopModule\n\n\n\nTripPassagesModule -->\n\nMapHeaderBoxModule->TripPassagesModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\nNotFoundRoutingModule\n\nNotFoundRoutingModule\n\nNotFoundModule -->\n\nNotFoundRoutingModule->NotFoundModule\n\n\n\n\n\nRetryDialogComponent\n\nRetryDialogComponent\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nRetryDialogModule -->\n\nRetryDialogComponent->RetryDialogModule\n\n\n\n\n\nRetryDialogComponent \n\nRetryDialogComponent \n\nRetryDialogComponent  -->\n\nRetryDialogModule->RetryDialogComponent \n\n\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nRetryDialogModule->StopsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nDepartureListComponent\n\nDepartureListComponent\n\nStopModule -->\n\nDepartureListComponent->StopModule\n\n\n\n\n\nDepartureListItemComponent\n\nDepartureListItemComponent\n\nStopModule -->\n\nDepartureListItemComponent->StopModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nStopModule -->\n\nRouteListComponent->StopModule\n\n\n\n\n\nStopInfoComponent\n\nStopInfoComponent\n\nStopModule -->\n\nStopInfoComponent->StopModule\n\n\n\n\n\nStopLocationMapDirective\n\nStopLocationMapDirective\n\nStopModule -->\n\nStopLocationMapDirective->StopModule\n\n\n\n\n\nStopRoutingModule\n\nStopRoutingModule\n\nStopModule -->\n\nStopRoutingModule->StopModule\n\n\n\n\n\nStopsInfoComponent\n\nStopsInfoComponent\n\nStopsModule -->\n\nStopsInfoComponent->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\nFollowBusMapDirective\n\nFollowBusMapDirective\n\nTripPassagesModule -->\n\nFollowBusMapDirective->TripPassagesModule\n\n\n\n\n\nTripPassagesComponent\n\nTripPassagesComponent\n\nTripPassagesModule -->\n\nTripPassagesComponent->TripPassagesModule\n\n\n\n\n\nTripPassagesRoutingModule\n\nTripPassagesRoutingModule\n\nTripPassagesModule -->\n\nTripPassagesRoutingModule->TripPassagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        14 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppVersion   (src/.../app-version.ts)\n                        \n                        \n                            CreateDialogFunc   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            CreateDialogFuncResponse   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            ErrorItem   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            MapMoveEvent   (src/.../leaflet-map.component.ts)\n                        \n                        \n                            RetryDialogStrategyFunc   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            RetryDialogStrategyFuncResponse   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            TripPassagesLocation   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/app-version.ts\n    \n    \n        \n            \n                \n                    \n                    AppVersion\n                \n            \n            \n                \n                    App Version\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/rxjs-util/retry-dialog-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    CreateDialogFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CreateDialogFuncResponse\n                \n            \n            \n                \n                            MatDialogRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ErrorItem\n                \n            \n            \n                \n                        any | HttpErrorResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RetryDialogStrategyFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RetryDialogStrategyFuncResponse\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/modules/common/leaflet-map.component.ts\n    \n    \n        \n            \n                \n                    \n                    MapMoveEvent\n                \n            \n            \n                \n                        IMapMoveStartEvent | IMapMoveEndEvent\n\n                \n            \n        \n    \n    src/app/models/index.ts\n    \n    \n        \n            \n                \n                    \n                    TripPassagesLocation\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createStopIcon   (src/.../icons.ts)\n                        \n                        \n                            createVehicleIcon   (src/.../icons.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.example.pwa.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            moduleImports   (src/.../app.module.ts)\n                        \n                        \n                            retryDialogStrategy   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            SettingsInitializer   (src/.../app.module.ts)\n                        \n                        \n                            STOP_ICON_SHADOW_URL   (src/.../constants.ts)\n                        \n                        \n                            STOP_ICON_URL   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/leaflet/icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createStopIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Icon\n\n                        \n                    \n                    \n                        \n                            Default value : (iconSize: number = 24): L.Icon => {\n    return L.icon({\n        iconAnchor: [iconSize / 2, iconSize / 2], // point of the icon which will correspond to marker's location\n        // shadowUrl: 'leaf-shadow.png',\n        iconSize: [iconSize, iconSize], // size of the icon\n        iconUrl: STOP_ICON_URL,\n        popupAnchor: [iconSize / 2, iconSize / 2], // point from which the popup should open relative to the iconAnchor\n        shadowAnchor: [iconSize / 7 * 3, iconSize / 7 * 3],  // the same for the shadow\n        shadowSize: [iconSize * 1.1, iconSize * 1.1], // size of the shadow\n        shadowUrl: STOP_ICON_SHADOW_URL,\n    });\n}\n                        \n                    \n\n                \n                    \n                        Creates an StopIcon instance to be used for leaflet markers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createVehicleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.DivIcon\n\n                        \n                    \n                    \n                        \n                            Default value : (heading: number, name: string, iconSize: number = 40) => {\n        return L.divIcon({\n            className: heading > 180 ? 'vehiclemarker-rotated' : 'vehiclemarker',\n            html: '' + name.split(' ')[0] + '',\n            iconAnchor: [iconSize / 2, Math.round(iconSize / 2 / 68 * 44)], // point of the icon which will correspond to marker's location\n            iconSize: [iconSize, Math.round(iconSize / 68 * 44)], // size of the icon\n            popupAnchor: [12, 12], // point from which the popup should open relative to the iconAnchor\n            shadowAnchor: [32, 32],  // the same for the shadow\n            shadowSize: [24, 24], // size of the shadow\n        });\n    }\n                        \n                    \n\n                \n                    \n                        Creates an vehicle icon to be used for leaflet markers\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.example.pwa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: true,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.example.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moduleImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatInputModule,\n    MainMapModule,\n    MainToolbarModule,\n    SidebarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production && environment.pwa === true,\n    }),\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SettingsInitializer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (appInitService: SettingsService) => {\n    return (): Promise => {\n        return appInitService.load();\n    };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/rxjs-util/retry-dialog-strategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            retryDialogStrategy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RetryDialogStrategyFunc\n\n                        \n                    \n                    \n                        \n                            Default value : (createDialog: CreateDialogFunc) => {\n    return (errors: Observable): Observable => {\n        let dialogOpen = false;\n        return errors.pipe(skipWhile((): boolean => dialogOpen),\n            flatMap((error: ErrorItem): Observable => {\n                dialogOpen = true;\n                const dialogRef: CreateDialogFuncResponse = createDialog(error);\n                return dialogRef.afterClosed()\n                    .pipe(map((tapedValue: boolean): true => {\n                        dialogOpen = false;\n                        if (tapedValue !== true) {\n                            /**\n                             * Rethrow error if dialog was dismissed\n                             */\n                            throw error;\n                        }\n                        /**\n                         * Retry the preceeding stream\n                         */\n                        return true;\n                    }));\n            }));\n    };\n}\n                        \n                    \n\n                \n                    \n                        If an error occurs it will call the dialog and waits for its result.\nIf the result equals true the stream will be retried\n\n                    \n                \n\n            \n        \n\n    src/app/leaflet/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_SHADOW_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0i' +\n    'MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBzdmcgIFBVQkxJ' +\n    'QyAnLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5v' +\n    'cmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkJz4NCjxzdmcgd2lk' +\n    'dGg9IjY0IiBoZWlnaHQ9IjY0IiBiYXNlUHJvZmlsZT0iZnVsbCIgdmVyc2lv' +\n    'bj0iMS4xIiB2aWV3Qm94PSItMiAtMiA3MiA3MiIgeG1sbnM9Imh0dHA6Ly93' +\n    'd3cudzMub3JnLzIwMDAvc3ZnIj4NCjxzdHlsZT4uaGVhdnkgeyBmb250OiBi' +\n    'b2xkIDMycHggc2Fucy1zZXJpZjsgY29sb3I6cHVycGxlOyB9PC9zdHlsZT4N' +\n    'CjxkZWZzPg0KPGZpbHRlciBpZD0iYiIgeD0iMCIgeT0iMCI+DQo8ZmVHYXVz' +\n    'c2lhbkJsdXIgaW49IlNvdXJjZUdyYXBoaWMiIHN0ZERldmlhdGlvbj0iMyIv' +\n    'Pg0KPC9maWx0ZXI+DQo8L2RlZnM+DQo8bWFzayBpZD0iYSI+DQo8cmVjdCB3' +\n    'aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iI2ZmZiIvPg0KPHRleHQg' +\n    'Y2xhc3M9ImhlYXZ5IiB4PSIzNCIgeT0iNDYiIGZpbGw9ImJsYWNrIiBzdHJv' +\n    'a2U9ImJsYWNrIiBzdHJva2Utd2lkdGg9IjEuNSIgdGV4dC1hbmNob3I9Im1p' +\n    'ZGRsZSI+SDwvdGV4dD4NCjwvbWFzaz4NCjxnIGZpbHRlcj0idXJsKCNiKSIg' +\n    'b3BhY2l0eT0iLjUiPg0KPHJlY3QgeD0iLTEwIiB5PSItMTAiIHdpZHRoPSIx' +\n    'MDAiIGhlaWdodD0iMTAwIiBmaWxsPSIjZmZmIiBvcGFjaXR5PSIwIi8+DQo8' +\n    'Y2lyY2xlIGN4PSIzNCIgY3k9IjM0IiByPSIzMiIgbWFzaz0idXJsKCNhKSIg' +\n    'c3Ryb2tlPSIjMDAwIi8+DQo8L2c+DQo8L3N2Zz4='\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiB' +\n    'lbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBzdmcgIFBVQkxJQyAnLS8vVzNDLy9' +\n    'EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEu' +\n    'MS9EVEQvc3ZnMTEuZHRkJz4NCjxzdmcgd2lkdGg9IjY0IiBoZWlnaHQ9IjY0IiBiYXNlU' +\n    'HJvZmlsZT0iZnVsbCIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgNjggNjgiIHhtbG5' +\n    'zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+DQo8c3R5bGU+LmhlYXZ5IHsgZm9udD' +\n    'ogYm9sZCAzMnB4IHNhbnMtc2VyaWY7IGNvbG9yOnB1cnBsZTsgfTwvc3R5bGU+DQo8bWFza' +\n    'yBpZD0iYSI+DQo8cmVjdCB3aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iI2ZmZiIv' +\n    'Pg0KPHRleHQgY2xhc3M9ImhlYXZ5IiB4PSIzNCIgeT0iNDYiIGZpbGw9ImJsYWNrIiBzdHJv' +\n    'a2U9ImJsYWNrIiBzdHJva2Utd2lkdGg9IjEuNSIgdGV4dC1hbmNob3I9Im1pZGRsZSI+SDwv' +\n    'dGV4dD4NCjwvbWFzaz4NCjxjaXJjbGUgY3g9IjM0IiBjeT0iMzQiIHI9IjMyIiBtYXNrPSJ1' +\n    'cmwoI2EpIiBzdHJva2U9IiMwMDAiLz4NCjx0ZXh0IGNsYXNzPSJoZWF2eSIgeD0iMzQiIHk9' +\n    'IjQ2IiBmaWxsPSJ3aGl0ZSIgb3BhY2l0eT0iLjUiIHN0cm9rZT0id2hpdGUiIHN0cm9rZS13' +\n    'aWR0aD0iMS41IiB0ZXh0LWFuY2hvcj0ibWlkZGxlIj5IPC90ZXh0Pg0KPC9zdmc+'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
