var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.256,1,1.466]],["body/injectables/ApiService.html",[0,1.535,1,1.791,2,1.872,3,0.171,4,0.132,5,0.092,6,2.931,7,0.314,8,0.878,9,1.16,10,6.189,11,4.841,12,4.841,13,5.378,14,5.378,15,4.207,16,4.841,17,4.207,18,4.841,19,4.841,20,0.66,21,3.372,22,6.189,23,1.163,24,3.372,25,1.355,26,0.015,27,1.112,28,0.705,29,1.158,30,3.789,31,3.372,32,1.245,33,1.656,34,4.841,35,5.015,36,3.372,37,2.515,38,4.841,39,7.522,40,3.372,41,3.372,42,3.372,43,4.841,44,5.402,45,3.372,46,4.841,47,3.372,48,4.841,49,3.372,50,4.841,51,3.372,52,4.841,53,3.1,54,3.372,55,2.104,56,0.276,57,2.104,58,0.16,59,2.639,60,3.372,61,2.931,62,2.639,63,2.104,64,2.639,65,1.069,66,1.03,67,1.069,68,0.686,69,2.249,70,3.372,71,2.249,72,3.372,73,2.639,74,2.104,75,1.776,76,1.689,77,0.146,78,0.03,79,0.767,80,1.149,81,3.372,82,4.841,83,7.321,84,4.841,85,3.372,86,3.372,87,1.323,88,4.841,89,2.639,90,3.372,91,3.372,92,1.689,93,3.372,94,3.435,95,1.689,96,3.372,97,1.61,98,3.372,99,1.61,100,3.372,101,3.372,102,3.372,103,3.372,104,0.006,105,0.008,106,0.006]],["title/components/AppComponent.html",[107,0.638,108,1.356]],["body/components/AppComponent.html",[3,0.08,4,0.089,5,0.062,7,0.513,8,0.651,9,0.72,20,0.444,23,1.077,25,0.677,26,0.015,27,0.949,28,0.624,29,0.578,32,0.746,33,1.524,35,2.97,56,0.23,58,0.108,76,1.799,77,0.098,78,0.02,79,0.516,80,0.351,87,0.981,92,1.137,95,1.799,97,1.084,99,2.417,104,0.004,105,0.006,106,0.004,107,0.717,108,1.732,109,1.382,110,0.911,111,0.911,112,0.911,113,0.911,114,1.973,115,0.946,116,2.472,117,0.748,118,2.006,119,2.219,120,1.228,121,4.454,122,1.228,123,3.591,124,0.787,125,3.87,126,4.454,127,4.454,128,6.554,129,4.454,130,1.944,131,2.81,132,3.591,133,3.636,134,1.228,135,4.454,136,1.777,137,3.443,138,3.591,139,2.271,140,0.918,141,3.591,142,2.271,143,2.271,144,2.271,145,2.97,146,3.591,147,2.271,148,2.271,149,2.271,150,4.454,151,3.591,152,2.271,153,4.454,154,3.591,155,2.271,156,0.644,157,0.536,158,2.271,159,2.271,160,2.271,161,1.196,162,0.777,163,1.182,164,1.973,165,2.271,166,2.271,167,2.271,168,2.394,169,2.271,170,2.271,171,2.271,172,2.271,173,1.973,174,1.777,175,2.271,176,2.271,177,0.72,178,2.271,179,2.863,180,3.591,181,3.591,182,4.454,183,3.591,184,3.12,185,2.779,186,3.591,187,6.554,188,4.56,189,2.68,190,3.591,191,2.331,192,2.523,193,1.036,194,2.662,195,4.211,196,5.002,197,2.762,198,2.394,199,4.454,200,5.951,201,2.81,202,3.962,203,3.87,204,3.535,205,2.972,206,2.779,207,3.158,208,1.973,209,1.777,210,2.264,211,3.972,212,1.777,213,3.12,214,2.271,215,2.579,216,2.472,217,2.579,218,3.87,219,2.271,220,2.271,221,1.777,222,1.973,223,1.973,224,3.591,225,1.973,226,4.399,227,2.271,228,2.394,229,3.677,230,2.271,231,2.271,232,4.454,233,5.336,234,3.199,235,2.97,236,2.97,237,3.591,238,4.454,239,3.486,240,2.779,241,2.271,242,1.973,243,2.271,244,2.271,245,2.271,246,3.591,247,3.591,248,3.591,249,3.591,250,6.367,251,3.591,252,4.454,253,2.801,254,5.514,255,3.591,256,2.271,257,2.394,258,3.486,259,2.271,260,2.81,261,3.12,262,2.271,263,0.847,264,3.591,265,2.271,266,1.26,267,1.973,268,2.271,269,2.271,270,2.24,271,2.271,272,2.271,273,2.271,274,1.777,275,4.316,276,2.345,277,3.591,278,3.591,279,2.271,280,3.591,281,3.591,282,2.271,283,2.271,284,2.271,285,2.271,286,2.271,287,1.631,288,2.271,289,1.973,290,1.777,291,1.973,292,1.417,293,1.514,294,2.81,295,2.271,296,1.777,297,0.577,298,1.382,299,1.44,300,0.556,301,2.03,302,0.911,303,0.911,304,0.748,305,0.777,306,0.911,307,0.777,308,1.382,309,1.44,310,0.777,311,0.807,312,0.911,313,0.748,314,0.911,315,0.777,316,0.462,317,0.84,318,0.911,319,0.748,320,0.911,321,0.72,322,0.807,323,0.911,324,0.777,325,0.748,326,0.748,327,0.911,328,0.777,329,0.911,330,0.748,331,0.668,332,1.44,333,0.748,334,0.668,335,0.748,336,0.911,337,0.72,338,0.807,339,0.777,340,0.72,341,0.748,342,0.911,343,0.911,344,0.72,345,0.911,346,0.72,347,0.911,348,0.748,349,0.874,350,0.911]],["title/injectables/AppErrorHandler.html",[0,1.256,351,2.846]],["body/injectables/AppErrorHandler.html",[0,1.686,2,2.139,3,0.136,4,0.151,5,0.106,7,0.358,8,0.964,9,1.098,20,0.754,23,1.015,25,1.147,26,0.015,27,0.942,28,0.675,29,0.981,32,1.194,56,0.239,57,2.405,58,0.183,77,0.167,78,0.034,79,0.876,80,0.942,104,0.007,105,0.009,106,0.007,115,1.015,130,2.321,140,1.19,157,1.255,177,1.686,351,4.715,352,4.947,353,2.698,354,3.349,355,2.224,356,5.318,357,5.318,358,5.705,359,4.622,360,5.318,361,6.566,362,3.854,363,7.122,364,3.854,365,5.318,366,4.959,367,3.854,368,6.566,369,5.318,370,7.122,371,4.045,372,3.854,373,5.318,374,5.318,375,4.622,376,6.09,377,4.374,378,4.766,379,3.82,380,3.854,381,3.82,382,5.318,383,5.318,384,5.318,385,5.318,386,5.318,387,2.357,388,5.318,389,6.09,390,4.622,391,2.768,392,3.349,393,3.349,394,3.854,395,1.269,396,0.979,397,3.854,398,2.139,399,3.854,400,5.318,401,2.405,402,3.854,403,3.017,404,3.854,405,2.57,406,5.318,407,3.017,408,2.029,409,3.017,410,3.017,411,3.854,412,3.854,413,2.426,414,3.349,415,5.318,416,3.017,417,3.854,418,3.854,419,6.566,420,2.768,421,3.854]],["title/modules/AppModule.html",[422,0.97,423,2.846]],["body/modules/AppModule.html",[3,0.134,4,0.15,5,0.104,26,0.015,56,0.316,57,2.378,58,0.181,69,2.541,77,0.229,78,0.034,80,0.816,104,0.007,105,0.009,106,0.007,108,2.657,119,1.496,162,1.304,163,2.337,164,3.312,297,0.968,316,0.775,351,3.79,353,1.304,371,4.168,381,2.737,387,1.805,390,4.586,392,3.312,393,3.312,396,1.34,422,0.933,423,5.867,424,1.304,425,1.593,426,2.761,427,2.761,428,2.761,429,1.409,430,3.312,431,3.312,432,3.312,433,3.312,434,3.312,435,4.428,436,4.428,437,4.428,438,4.428,439,2.743,440,3.555,441,2.846,442,2.407,443,1.738,444,1.593,445,2.983,446,2.031,447,4.586,448,5.277,449,2.031,450,2.52,451,3.79,452,4.586,453,3.811,454,4.586,455,4.586,456,4.586,457,3.811,458,3.811,459,3.312,460,3.312,461,3.811,462,3.811,463,2.541,464,3.811,465,5.277,466,2.541,467,3.811,468,3.811,469,3.811,470,2.983,471,2.541,472,2.983,473,1.82,474,4.13,475,3.312,476,2.737,477,3.312,478,4.13,479,3.312,480,3.312,481,2.983,482,3.312,483,3.312,484,2.737,485,3.811,486,5.277,487,3.811,488,3.811]],["title/injectables/AppNotificationService.html",[0,1.256,371,2.327]],["body/injectables/AppNotificationService.html",[0,1.85,2,2.455,3,0.23,4,0.174,5,0.121,7,0.411,8,1.058,9,0.988,20,1.279,23,1.074,25,0.833,26,0.015,27,0.684,28,0.708,29,0.712,32,0.978,33,1.997,37,2.289,56,0.229,58,0.21,68,0.899,75,2.329,76,2.216,77,0.283,78,0.039,80,0.684,104,0.008,105,0.01,106,0.008,124,1.279,130,2.547,134,1.997,140,1.058,156,1.254,157,1.044,177,1.402,210,1.573,253,2.018,353,1.997,355,1.849,371,3.427,377,5.631,391,4.192,401,3.641,403,4.568,413,2.018,489,5.186,490,3.177,491,1.279,492,5.676,493,5.837,494,5.676,495,5.837,496,5.072,497,4.989,498,4.424,499,5.072,500,5.072,501,4.441,502,1.717,503,5.072,504,5.072,505,4.424,506,4.424,507,2.329,508,4.568,509,1.93,510,1.513,511,3.844,512,3.844]],["title/classes/AppPreloadingStrategy.html",[78,0.035,513,2.846]],["body/classes/AppPreloadingStrategy.html",[3,0.198,4,0.22,5,0.154,7,0.521,8,1.229,23,0.867,25,1.056,26,0.014,27,0.867,28,0.549,29,0.903,32,0.94,37,2.311,56,0.266,68,1.14,77,0.243,78,0.049,80,0.867,87,2.119,104,0.01,105,0.012,106,0.01,115,1.786,352,4.87,513,4.87,514,2.677,515,5.307,516,4.027,517,6.335,518,6.781,519,6.781,520,5.05,521,5.235,522,5.607,523,1.712,524,4.521,525,5.607]],["title/modules/AppRoutingModule.html",[422,0.97,435,2.472]],["body/modules/AppRoutingModule.html",[3,0.19,4,0.211,5,0.148,26,0.015,56,0.281,58,0.256,104,0.009,105,0.012,106,0.009,119,1.527,331,1.584,334,1.584,339,1.842,352,3.868,353,1.842,395,1.773,396,1.367,424,1.842,429,1.992,435,3.36,446,2.073,449,2.547,513,4.752,515,4.215,517,4.68,523,1.644,526,3.59,527,4.128,528,3.159,529,5.385,530,6.616,531,7.47,532,5.385,533,2.989,534,5.385,535,4.333,536,5.385,537,5.385,538,5.385,539,5.385,540,4.68,541,5.385,542,2.835,543,5.385,544,5.385]],["title/interfaces/Bounds.html",[55,2.472,510,1.356]],["body/interfaces/Bounds.html",[3,0.197,4,0.22,5,0.153,7,0.52,26,0.014,28,0.76,55,4.225,56,0.22,63,4.225,65,1.774,66,1.709,67,1.774,71,3.73,77,0.293,92,3.791,95,3.791,97,3.614,99,3.614,104,0.01,105,0.012,106,0.01,124,1.484,510,1.914,545,3.106,546,4.379,547,2.704,548,6.772,549,2.244]],["title/components/CommonErrorComponent.html",[107,0.638,304,1.305]],["body/components/CommonErrorComponent.html",[3,0.147,4,0.163,5,0.114,20,1.24,23,0.643,26,0.014,27,0.979,56,0.163,58,0.197,77,0.18,78,0.037,87,1.531,104,0.007,105,0.01,106,0.007,107,1.02,108,1.423,109,2.157,110,1.668,111,1.668,112,1.668,113,1.668,117,1.37,118,2.155,119,2.289,120,1.917,122,1.917,163,1.37,179,2.649,191,1.479,192,1.601,193,1.898,194,2.342,195,2.988,197,2.084,198,4.224,204,3.336,205,2.443,206,3.495,207,2.595,217,2.988,229,2.774,234,2.988,235,2.774,236,2.774,257,2.774,270,2.595,276,2.19,292,2.595,297,1.056,298,2.157,299,2.247,300,1.018,301,2.718,302,1.668,303,1.668,304,2.232,305,2.59,306,1.668,307,1.423,308,2.157,309,2.247,310,1.423,311,1.479,312,1.668,313,1.37,314,1.668,315,1.423,316,0.846,317,2.507,318,1.668,319,1.37,320,1.668,321,1.319,322,1.479,323,1.668,324,1.423,325,1.37,326,1.37,327,1.668,328,1.423,329,1.668,330,1.37,331,1.224,332,2.247,333,1.37,334,1.224,335,1.37,336,1.668,337,1.319,338,1.479,339,1.423,340,1.319,341,1.37,342,1.668,343,1.668,344,1.319,345,1.668,346,1.319,347,1.668,348,1.37,349,1.601,350,1.668,353,2.493,405,4.224,509,1.816,550,4.869,551,3.615,552,6.335,553,5.603,554,4.16,555,2.765,556,3.615,557,3.256,558,3.256,559,5.603,560,5.603,561,3.615,562,3.615,563,3.256,564,2.443,565,3.615,566,3.615,567,3.615,568,3.256,569,3.256,570,4.385,571,2.595,572,2.595,573,3.615,574,4.16]],["title/directives/CountdownTimerDirective.html",[300,0.97,341,1.305]],["body/directives/CountdownTimerDirective.html",[3,0.138,4,0.154,5,0.107,7,0.365,8,0.976,9,1.078,23,1.171,25,0.739,26,0.015,27,0.606,28,0.679,29,0.631,32,1.03,33,1.841,56,0.241,58,0.186,68,0.797,77,0.17,78,0.035,80,0.606,104,0.007,105,0.009,106,0.007,115,1.418,116,3.411,117,1.291,118,1.418,124,1.179,131,3.671,134,1.841,140,1.256,156,1.742,157,1.449,263,0.925,300,1.619,316,0.797,340,1.243,341,2.178,355,1.639,396,0.995,444,2.25,491,1.483,502,1.583,547,2.414,575,6,576,6,577,3.407,578,2.273,579,5.381,580,5.176,581,6.145,582,4.809,583,2.446,584,3.16,585,6.931,586,7.333,587,5.381,588,6.613,589,3.921,590,2.834,591,3.357,592,5.381,593,3.608,594,3.921,595,3.921,596,3.921,597,3.921,598,3.078,599,5.381,600,3.921,601,2.185,602,3.921,603,3.921,604,3.407,605,3.411,606,2.816,607,2.614,608,1.291,609,3.069,610,1.45,611,1.341,612,3.921,613,3.921,614,3.921,615,2.816,616,5.381,617,4.212,618,3.069,619,3.407,620,3.921,621,3.069,622,4.676,623,3.921,624,3.069,625,3.407,626,3.069]],["title/modules/CountdownTimerModule.html",[422,0.97,627,2.642]],["body/modules/CountdownTimerModule.html",[3,0.186,4,0.208,5,0.145,26,0.015,56,0.291,58,0.251,77,0.229,78,0.047,104,0.009,105,0.011,106,0.009,162,1.81,297,1.343,341,2.685,355,2.212,422,1.739,424,1.81,425,2.212,426,3.241,427,2.413,428,2.985,429,2.628,442,2.985,443,2.413,444,2.212,446,2.037,449,2.519,450,3.393,575,4.141,576,4.141,627,5.252,628,4.598,629,4.598,630,4.598,631,5.291,632,6.545,633,6.545,634,3.559,635,2.527,636,5.291,637,5.291]],["title/components/DepartureListComponent.html",[107,0.638,307,1.356]],["body/components/DepartureListComponent.html",[3,0.124,4,0.138,5,0.096,7,0.326,8,0.903,9,0.947,23,1.029,25,0.662,26,0.015,27,0.975,28,0.568,29,0.565,32,1.159,56,0.196,58,0.167,65,1.113,66,1.072,67,1.113,77,0.152,78,0.031,80,0.77,87,1.362,89,6.124,104,0.006,105,0.009,106,0.006,107,1.072,108,1.201,109,1.918,110,1.408,111,1.408,112,1.408,113,1.408,117,1.156,118,2.12,119,2.26,120,1.705,122,1.705,124,1.092,134,1.705,140,0.637,156,0.996,157,0.828,163,1.156,177,1.58,179,2.083,191,1.249,192,1.352,193,1.602,216,1.949,228,3.322,263,0.828,297,0.892,298,1.918,299,1.998,300,0.859,301,2.528,302,1.408,303,1.408,304,1.156,305,1.201,306,1.408,307,2.156,308,3.012,309,1.998,310,1.201,311,2.529,312,1.408,313,1.156,314,1.408,315,1.201,316,0.714,317,1.299,318,1.408,319,1.156,320,1.408,321,1.113,322,1.249,323,1.408,324,1.201,325,1.156,326,1.156,327,1.408,328,1.201,329,1.408,330,1.156,331,1.033,332,1.998,333,1.156,334,1.033,335,1.156,336,1.408,337,1.113,338,1.249,339,1.201,340,1.113,341,1.156,342,1.408,343,1.408,344,1.113,345,1.408,346,1.113,347,1.408,348,1.156,349,1.352,350,1.408,355,1.468,387,1.705,484,4.16,491,1.134,584,2.926,605,1.949,611,2.156,638,5.412,639,2.748,640,5.033,641,4.33,642,5.033,643,6.304,644,4.33,645,3.511,646,4.934,647,6.304,648,3.322,649,6.009,650,3.511,651,3.511,652,3.511,653,3.511,654,3.511,655,3.511,656,5.478,657,1.072,658,3.051,659,4.983,660,3.9,661,3.9,662,3.511,663,4.983,664,4.33,665,2.748,666,2.748,667,3.511,668,3.051,669,3.511]],["title/components/DepartureListItemComponent.html",[107,0.638,310,1.356]],["body/components/DepartureListItemComponent.html",[3,0.089,4,0.099,5,0.069,7,0.234,8,0.704,9,1.016,23,1.104,25,0.895,26,0.015,27,0.946,28,0.567,29,0.765,32,1.212,33,1.625,56,0.21,58,0.119,65,1.232,66,1.186,67,0.796,77,0.109,78,0.022,80,1.068,87,1.062,89,3.719,104,0.004,105,0.007,106,0.004,107,0.765,108,0.859,109,1.496,110,1.007,111,1.007,112,1.007,113,1.007,117,0.827,118,2.036,119,2.129,120,1.329,122,1.329,124,0.851,134,1.329,140,0.455,156,1.516,157,1.121,163,0.827,177,1.696,179,2.236,185,1.567,191,0.893,192,0.967,193,1.146,216,1.394,263,1.121,276,1.322,297,0.638,298,1.496,299,1.558,300,0.615,301,2.144,302,1.007,303,1.007,304,0.827,305,0.859,306,1.007,307,0.859,308,3,309,1.558,310,1.829,311,2.76,312,1.007,313,0.827,314,1.007,315,0.859,316,0.511,317,0.929,318,1.007,319,0.827,320,1.007,321,0.796,322,0.893,323,1.007,324,0.859,325,0.827,326,0.827,327,1.007,328,0.859,329,1.007,330,0.827,331,0.739,332,1.558,333,0.827,334,0.739,335,0.827,336,1.007,337,0.796,338,0.893,339,0.859,340,0.796,341,0.827,342,1.007,343,1.007,344,0.796,345,1.007,346,0.796,347,1.007,348,0.827,349,0.967,350,1.007,355,1.624,395,2.169,396,1.206,413,1.772,484,3.413,491,1.324,547,2.275,571,1.567,584,2.281,590,3.358,593,2.79,605,1.394,611,0.859,615,1.804,638,5.661,649,6.204,657,1.868,665,1.966,666,1.966,670,2.182,671,3.336,672,4.752,673,3.885,674,4.752,675,4.752,676,4.752,677,3.885,678,3.041,679,5.783,680,4.154,681,7.033,682,3.885,683,3.885,684,2.511,685,3.885,686,1.978,687,4.752,688,3.885,689,2.511,690,2.511,691,3.885,692,3.885,693,3.885,694,3.885,695,3.885,696,2.511,697,3.376,698,3.885,699,2.79,700,2.511,701,3.885,702,2.511,703,2.511,704,3.885,705,2.511,706,2.511,707,2.511,708,2.511,709,2.511,710,2.511,711,2.511,712,3.885,713,5.348,714,2.511,715,2.511,716,2.511,717,3.376,718,2.511,719,2.511,720,3.885,721,3.885,722,2.511,723,3.885,724,2.511,725,1.966,726,3.885,727,4.186,728,2.511,729,3.885,730,2.511,731,2.511,732,2.511,733,2.511,734,2.511,735,1.804,736,2.511,737,1.804,738,3.719,739,1.966,740,3.413,741,2.511,742,3.885,743,2.511,744,3.885,745,2.511,746,3.885,747,2.511,748,2.511,749,5.348,750,2.511,751,2.182,752,2.182,753,2.511,754,3.885,755,3.885,756,6.115,757,2.511,758,1.674,759,1.966,760,2.511,761,2.511,762,2.511,763,2.511,764,2.511,765,2.511,766,2.511]],["title/directives/DrawableDirective.html",[163,1.305,300,0.97]],["body/directives/DrawableDirective.html",[3,0.137,4,0.153,5,0.107,7,0.361,8,0.97,20,0.761,23,1.221,25,1.008,26,0.015,27,0.827,28,0.677,29,0.861,32,1.104,56,0.153,58,0.184,77,0.168,78,0.034,79,0.884,80,0.827,104,0.007,105,0.009,106,0.007,115,1.409,116,3.395,117,1.28,118,1.409,124,1.172,125,5.315,131,3.658,140,1.109,156,1.102,157,0.917,163,1.761,210,1.382,263,1.685,274,4.187,300,1.309,340,1.232,502,1.144,697,3.378,737,3.842,767,3.378,768,5.35,769,6.117,770,4.788,771,4.111,772,6.589,773,5.35,774,4.649,775,6.117,776,5.35,777,5.35,778,5.35,779,5.35,780,5.35,781,5.35,782,3.887,783,3.006,784,5.35,785,5.35,786,5.315,787,6.91,788,3.655,789,3.887,790,3.887,791,3.887,792,3.887,793,3.887,794,3.887,795,3.887,796,3.887,797,3.887,798,3.887,799,3.887,800,3.887,801,5.35,802,3.887,803,5.35,804,3.887,805,3.887,806,6.117,807,3.887,808,5.35,809,3.887,810,4.187,811,3.887,812,3.887,813,4.649,814,3.887,815,3.887,816,3.887,817,3.887,818,3.887,819,3.887,820,3.887,821,3.887,822,3.887,823,6.117,824,3.887,825,3.887,826,3.887,827,3.887,828,3.887,829,3.887,830,3.887,831,3.887,832,2.792,833,3.887,834,3.887,835,3.887,836,3.887,837,3.887,838,6.117,839,3.887,840,3.887,841,3.887,842,3.887,843,5.35,844,3.887,845,5.35,846,3.887,847,3.887,848,3.887,849,3.887,850,3.887,851,3.887]],["title/modules/ErrorModule.html",[422,0.97,852,2.846]],["body/modules/ErrorModule.html",[3,0.185,4,0.206,5,0.144,26,0.015,56,0.304,58,0.249,77,0.227,78,0.046,104,0.009,105,0.011,106,0.009,162,1.796,297,1.333,304,2.554,305,1.796,319,2.554,353,1.796,422,1.285,424,1.796,425,2.195,426,3.23,427,2.395,428,2.971,429,1.942,442,2.971,443,2.395,444,2.195,446,2.507,449,2.507,450,3.11,463,3.5,634,3.262,635,2.507,852,5.793,853,4.562,854,4.562,855,4.562,856,5.172,857,5.25,858,4.343,859,4.562,860,4.562]],["title/modules/ErrorRoutingModule.html",[422,0.97,856,2.642]],["body/modules/ErrorRoutingModule.html",[3,0.197,4,0.22,5,0.153,26,0.015,56,0.297,58,0.266,77,0.242,78,0.049,104,0.01,105,0.012,106,0.01,107,1.091,304,2.23,305,1.914,319,2.23,396,1.421,424,1.914,429,2.069,446,2.154,449,2.607,523,1.709,526,3.73,527,4.225,528,3.234,535,4.043,540,4.862,542,3.566,856,4.515,859,4.862,860,4.862,861,5.595,862,5.595,863,5.595]],["title/directives/FollowBusMapDirective.html",[300,0.97,344,1.256]],["body/directives/FollowBusMapDirective.html",[1,2.486,3,0.103,4,0.115,5,0.08,7,0.272,8,0.791,9,1.088,20,0.572,23,1.142,25,0.983,26,0.015,27,0.806,28,0.636,29,0.84,32,1.037,56,0.282,58,0.139,63,3.254,65,0.927,66,0.893,67,0.927,68,0.594,74,1.824,77,0.189,78,0.038,79,0.665,80,0.674,94,3.601,104,0.005,105,0.008,106,0.005,115,1.149,117,0.963,118,1.149,124,0.955,130,1.276,134,1.492,140,1.252,156,1.479,157,1.23,197,1.464,210,1.04,263,0.69,300,1.067,316,0.594,340,0.927,344,1.654,387,1,395,1.436,396,1.647,398,1.623,439,2.555,441,2.77,473,1.396,491,1.461,502,1.535,509,1.276,535,1.623,549,2.601,555,1.276,578,1.929,583,2.138,584,2.561,598,2.612,601,1.855,605,1.623,608,1.436,609,3.413,610,1.081,611,1,657,1.332,758,1.949,783,2.637,864,3.931,865,5.844,866,5.362,867,1.824,868,2.276,869,3.79,870,4.532,871,3.477,872,4.532,873,4.532,874,4.153,875,2.637,876,4.361,877,2.721,878,2.896,879,2.896,880,3.79,881,1.623,882,3.79,883,2.924,884,2.541,885,2.924,886,3.79,887,2.924,888,3.79,889,3.79,890,2.541,891,2.612,892,2.541,893,2.924,894,2.721,895,2.541,896,2.924,897,2.924,898,2.924,899,1.334,900,1.172,901,1.824,902,2.541,903,1.824,904,2.288,905,2.541,906,1.464,907,1.464,908,1.989,909,2.288,910,2.1,911,1.551,912,1.081,913,2.541,914,2.541,915,1.949,916,2.288,917,2.541,918,2.541,919,2.541,920,2.541,921,2.541,922,2.541,923,2.541,924,2.541,925,2.541,926,2.541,927,2.541,928,1.623,929,2.541,930,1.623,931,2.541,932,2.541,933,2.541,934,2.541,935,1.949,936,2.1,937,2.288,938,2.288,939,2.288,940,2.288,941,2.288,942,1.623,943,2.1,944,2.288,945,2.288,946,2.288,947,2.541,948,3.79,949,2.288,950,2.908,951,2.288,952,2.288,953,3.132,954,1.949,955,2.541,956,2.541,957,1.949,958,2.288,959,1.949,960,2.288,961,3.413,962,1.949,963,1.623,964,2.288,965,1.949,966,2.541,967,2.1,968,2.288,969,1.949,970,1.949,971,1.949,972,1.949,973,2.288,974,1.949,975,1.949,976,1.824,977,2.541,978,2.541,979,2.1,980,2.541,981,2.541,982,1.334,983,2.541,984,1.949,985,2.541]],["title/interfaces/IAppNotification.html",[497,2.846,510,1.356]],["body/interfaces/IAppNotification.html",[0,1.891,3,0.234,4,0.179,5,0.125,7,0.425,9,0.848,20,0.895,26,0.015,28,0.779,29,1.205,33,2.56,37,2.105,56,0.234,58,0.217,68,0.929,75,2.407,76,2.29,77,0.288,78,0.04,80,0.707,104,0.008,105,0.01,106,0.008,124,1.307,130,3.266,140,0.829,177,2.105,210,1.626,253,2.085,353,2.04,371,2.685,377,5.664,391,5.053,401,4.669,403,5.858,413,2.085,489,3.284,490,3.284,491,0.895,492,3.973,494,3.973,496,3.973,497,4.768,499,3.973,500,3.973,501,4.131,502,1.345,503,3.973,504,3.973,507,2.407,508,4.668,509,1.995,510,1.564,511,3.973,512,3.973,545,2.538]],["title/interfaces/IEnvironmentBase.html",[510,1.356,986,2.846]],["body/interfaces/IEnvironmentBase.html",[3,0.2,4,0.222,5,0.155,7,0.527,26,0.014,28,0.745,29,1.099,33,2.505,56,0.222,77,0.245,104,0.01,105,0.012,106,0.01,119,1.606,124,1.495,177,2.505,510,1.938,545,3.144,986,4.9,987,4.923,988,6.604,989,6.604,990,6.604,991,5.185,992,5.459,993,3.317]],["title/interfaces/IMapBounds.html",[53,1.985,510,1.356]],["body/interfaces/IMapBounds.html",[3,0.122,4,0.136,5,0.095,7,0.322,9,1.03,26,0.015,28,0.722,53,2.469,56,0.27,58,0.164,68,0.703,77,0.307,78,0.043,79,1.121,80,0.968,92,3.136,95,3.136,97,2.989,99,2.989,104,0.006,105,0.009,106,0.006,115,0.911,124,1.08,140,0.894,161,1.821,194,1.446,210,1.23,240,3.583,253,2.248,263,0.816,316,1.167,395,1.623,396,1.251,413,1.577,439,1.823,441,2.303,473,1.651,491,1.124,501,3.372,502,1.017,507,1.821,510,1.965,545,1.919,547,2.57,549,1.976,578,1.823,583,1.279,590,1.821,591,2.157,593,2.03,601,1.753,608,1.623,611,1.183,657,2.101,686,1.279,771,2.157,783,2.248,788,1.651,868,2.151,875,1.577,878,1.732,879,2.877,881,1.919,891,2.469,899,1.577,900,1.387,906,1.732,907,1.732,908,2.248,911,1.23,912,1.279,928,1.919,930,1.919,942,2.736,963,1.919,993,1.509,994,1.919,995,1.919,996,2.306,997,2.306,998,1.919,999,1.821,1000,2.03,1001,2.157,1002,2.736,1003,3.286,1004,2.736,1005,2.894,1006,1.919,1007,2.03,1008,2.306,1009,2.03,1010,2.306,1011,2.306,1012,2.306,1013,3.829,1014,1.821,1015,2.306,1016,2.306,1017,3.286,1018,2.03,1019,2.306,1020,2.306,1021,2.306,1022,2.306,1023,2.306,1024,2.306,1025,2.306,1026,2.306,1027,2.306,1028,3.286,1029,2.306,1030,2.306,1031,2.306,1032,2.03,1033,2.306,1034,2.157,1035,2.157,1036,2.306,1037,2.306,1038,2.306,1039,2.306,1040,2.306,1041,2.306,1042,2.306,1043,2.157,1044,2.306,1045,2.157,1046,2.306,1047,2.306,1048,2.306,1049,3.286,1050,2.306,1051,2.306,1052,3.286,1053,2.306,1054,2.306,1055,2.306,1056,2.03,1057,3.829,1058,2.306,1059,2.306,1060,3.286,1061,2.306,1062,2.306,1063,2.306,1064,2.306,1065,2.306,1066,2.306,1067,2.306,1068,3.286,1069,2.306,1070,3.286,1071,2.306,1072,2.306,1073,2.306,1074,2.306,1075,1.732,1076,2.306,1077,2.306,1078,2.306,1079,2.306,1080,3.286,1081,2.306,1082,2.306,1083,2.306]],["title/interfaces/IMapMoveEndEvent.html",[510,1.356,1004,2.2]],["body/interfaces/IMapMoveEndEvent.html",[3,0.125,4,0.139,5,0.097,7,0.33,9,1.037,26,0.015,28,0.726,53,1.779,56,0.272,58,0.169,68,0.722,77,0.309,78,0.044,79,1.142,80,0.98,92,1.779,95,1.779,97,1.697,99,1.697,104,0.006,105,0.009,106,0.006,115,0.936,124,1.101,140,0.911,161,1.871,194,1.485,210,1.263,240,3.637,253,2.292,263,0.838,316,1.185,395,1.654,396,1.276,413,1.621,439,1.858,441,2.337,473,1.697,491,1.141,501,3.423,502,1.045,507,1.871,510,1.994,545,1.972,547,2.349,549,2.015,578,1.858,583,1.314,590,1.871,591,2.216,593,2.086,601,1.787,608,1.654,611,1.215,657,2.12,686,1.314,771,2.216,783,2.292,788,1.697,868,2.193,875,1.621,878,1.779,879,2.92,881,1.972,891,2.517,899,1.621,900,1.425,906,1.779,907,1.779,908,2.292,911,1.263,912,1.314,928,1.972,930,1.972,942,2.789,963,1.972,993,1.55,994,1.972,995,1.972,996,2.369,997,2.369,998,1.972,999,1.871,1000,2.086,1001,2.216,1002,2.789,1003,3.35,1004,3.236,1005,3.721,1006,1.972,1007,2.086,1008,2.369,1009,2.086,1010,2.369,1011,2.369,1012,2.369,1013,3.886,1014,1.871,1015,2.369,1016,2.369,1017,3.35,1018,2.086,1019,2.369,1020,2.369,1021,2.369,1022,2.369,1023,2.369,1024,2.369,1025,2.369,1026,2.369,1027,2.369,1028,3.35,1029,2.369,1030,2.369,1031,2.369,1032,2.086,1033,2.369,1034,2.216,1035,2.216,1036,2.369,1037,2.369,1038,2.369,1039,2.369,1040,2.369,1041,2.369,1042,2.369,1043,2.216,1044,2.369,1045,2.216,1046,2.369,1047,2.369,1048,2.369,1049,3.35,1050,2.369,1051,2.369,1052,3.35,1053,2.369,1054,2.369,1055,2.369,1056,2.086,1057,3.886,1058,2.369,1059,2.369,1060,3.35,1061,2.369,1062,2.369,1063,2.369,1064,2.369,1065,2.369,1066,2.369,1067,2.369,1068,3.35,1069,2.369,1070,3.35,1071,2.369,1072,2.369,1073,2.369,1074,2.369,1075,1.779,1076,2.369,1077,2.369,1078,2.369,1079,2.369,1080,3.35,1081,2.369,1082,2.369,1083,2.369]],["title/interfaces/IMapMoveStartEvent.html",[510,1.356,1002,2.2]],["body/interfaces/IMapMoveStartEvent.html",[3,0.125,4,0.139,5,0.097,7,0.33,9,1.037,26,0.015,28,0.726,53,1.779,56,0.272,58,0.169,68,0.722,77,0.309,78,0.044,79,1.142,80,0.98,92,1.779,95,1.779,97,1.697,99,1.697,104,0.006,105,0.009,106,0.006,115,0.936,124,1.101,140,0.911,161,1.871,194,1.485,210,1.263,240,3.637,253,2.292,263,0.838,316,1.185,395,1.654,396,1.276,413,1.621,439,1.858,441,2.337,473,1.697,491,1.141,501,3.423,502,1.045,507,1.871,510,1.994,545,1.972,547,2.349,549,2.015,578,1.858,583,1.314,590,1.871,591,2.216,593,2.086,601,1.787,608,1.654,611,1.215,657,2.12,686,1.314,771,2.216,783,2.292,788,1.697,868,2.193,875,1.621,878,1.779,879,2.92,881,1.972,891,2.517,899,1.621,900,1.425,906,1.779,907,1.779,908,2.292,911,1.263,912,1.314,928,1.972,930,1.972,942,2.789,963,1.972,993,1.55,994,1.972,995,1.972,996,2.369,997,2.369,998,1.972,999,1.871,1000,2.086,1001,2.216,1002,3.236,1003,4.225,1004,2.789,1005,2.95,1006,1.972,1007,2.086,1008,2.369,1009,2.086,1010,2.369,1011,2.369,1012,2.369,1013,3.886,1014,1.871,1015,2.369,1016,2.369,1017,3.35,1018,2.086,1019,2.369,1020,2.369,1021,2.369,1022,2.369,1023,2.369,1024,2.369,1025,2.369,1026,2.369,1027,2.369,1028,3.35,1029,2.369,1030,2.369,1031,2.369,1032,2.086,1033,2.369,1034,2.216,1035,2.216,1036,2.369,1037,2.369,1038,2.369,1039,2.369,1040,2.369,1041,2.369,1042,2.369,1043,2.216,1044,2.369,1045,2.216,1046,2.369,1047,2.369,1048,2.369,1049,3.35,1050,2.369,1051,2.369,1052,3.35,1053,2.369,1054,2.369,1055,2.369,1056,2.086,1057,3.886,1058,2.369,1059,2.369,1060,3.35,1061,2.369,1062,2.369,1063,2.369,1064,2.369,1065,2.369,1066,2.369,1067,2.369,1068,3.35,1069,2.369,1070,3.35,1071,2.369,1072,2.369,1073,2.369,1074,2.369,1075,1.779,1076,2.369,1077,2.369,1078,2.369,1079,2.369,1080,3.35,1081,2.369,1082,2.369,1083,2.369]],["title/interfaces/IPassageStatus.html",[510,1.356,1084,2.846]],["body/interfaces/IPassageStatus.html",[1,1.999,3,0.11,4,0.122,5,0.085,7,0.289,9,1.037,26,0.015,27,0.48,28,0.622,29,0.735,30,2.432,32,1.202,33,1.063,35,4.229,37,1.446,56,0.269,58,0.147,65,0.985,66,0.949,67,0.985,68,0.632,71,4.569,77,0.198,78,0.027,79,0.706,80,1.168,87,1.247,104,0.005,105,0.008,106,0.005,107,0.87,115,0.818,118,0.818,119,0.881,120,1.063,122,1.063,124,0.999,140,0.563,174,2.432,177,0.985,189,2.359,210,1.105,253,1.417,263,1.076,311,1.105,316,0.632,326,1.023,337,0.985,338,2.118,339,2.495,353,2.037,387,1.063,396,0.789,405,2.072,416,2.432,420,3.276,491,1.298,502,0.914,507,1.636,509,1.356,510,1.063,523,0.949,533,1.725,542,1.636,545,1.725,547,2.401,564,1.824,578,1.687,580,5.502,583,1.149,598,2.285,601,1.922,608,1.023,610,1.149,611,1.56,624,3.57,657,1.651,680,5.238,686,1.149,699,3.276,864,1.636,868,1.991,894,1.938,982,1.417,993,1.991,1075,1.556,1084,4.277,1085,2.232,1086,5.175,1087,5.615,1088,3.276,1089,3.964,1090,1.484,1091,2.432,1092,1.824,1093,2.7,1094,1.725,1095,2.232,1096,2.432,1097,2.432,1098,2.432,1099,2.846,1100,2.432,1101,2.432,1102,4.23,1103,2.7,1104,2.7,1105,2.7,1106,2.232,1107,2.7,1108,2.7,1109,2.7,1110,2.7,1111,3.964,1112,2.7,1113,2.7,1114,2.7,1115,3.964,1116,3.882,1117,2.7,1118,4.697,1119,2.7,1120,3.964,1121,2.7,1122,2.7,1123,2.7,1124,2.7,1125,3.882,1126,3.964,1127,5.512,1128,2.7,1129,2.7,1130,2.7,1131,2.7,1132,2.7,1133,2.7,1134,3.964,1135,2.7,1136,2.7,1137,2.7,1138,2.7,1139,2.7,1140,3.964,1141,2.7,1142,3.041,1143,2.7,1144,2.432,1145,2.7,1146,2.7,1147,2.7,1148,2.7,1149,2.7,1150,2.7,1151,2.7,1152,2.7,1153,2.7,1154,2.7,1155,2.7,1156,2.7,1157,2.7,1158,2.7,1159,2.7,1160,2.432,1161,2.7,1162,2.7,1163,2.7]],["title/classes/LeafletMapComponent.html",[78,0.035,908,1.808]],["body/classes/LeafletMapComponent.html",[3,0.102,4,0.113,5,0.079,7,0.269,8,0.784,9,1.1,20,0.566,23,1.139,25,0.976,26,0.015,27,0.801,28,0.722,29,0.834,32,1.082,53,1.447,56,0.254,58,0.137,68,0.587,77,0.29,78,0.038,79,0.983,80,0.889,92,1.447,95,1.447,97,1.38,99,1.38,104,0.005,105,0.008,106,0.005,115,1.139,124,0.947,134,1.479,140,1.116,145,1.927,156,1.226,157,1.02,161,1.522,194,1.208,210,1.028,240,3.231,253,1.972,263,0.682,316,1.251,355,1.208,395,1.423,396,1.098,413,1.318,439,2.126,441,2.684,473,1.38,491,1.378,501,3.614,502,1.272,507,1.522,510,1.772,514,1.38,547,2.204,549,2.305,578,1.915,583,2.126,590,1.522,591,1.803,593,2.538,601,1.842,608,1.423,611,1.479,657,2.188,686,1.069,771,2.697,783,2.622,788,1.38,868,2.26,875,2.622,877,1.803,878,2.594,879,3.083,881,2.4,891,2.594,899,1.318,900,1.159,906,1.447,907,1.447,908,2.362,911,1.028,912,1.069,928,1.604,930,1.604,942,3.416,943,2.075,963,1.604,993,2.26,994,4.135,995,1.604,996,1.927,997,1.927,998,1.604,999,1.522,1000,1.697,1001,1.803,1002,2.4,1003,2.882,1004,2.4,1005,2.538,1006,1.604,1007,1.697,1008,1.927,1009,1.697,1010,1.927,1011,1.927,1012,1.927,1013,3.453,1014,2.727,1015,2.882,1016,3.453,1017,3.833,1018,3.041,1019,3.453,1020,3.453,1021,1.927,1022,1.927,1023,1.927,1024,1.927,1025,1.927,1026,1.927,1027,1.927,1028,2.882,1029,1.927,1030,1.927,1031,1.927,1032,1.697,1033,1.927,1034,1.803,1035,1.803,1036,1.927,1037,1.927,1038,1.927,1039,1.927,1040,1.927,1041,1.927,1042,1.927,1043,1.803,1044,1.927,1045,1.803,1046,1.927,1047,1.927,1048,1.927,1049,2.882,1050,1.927,1051,1.927,1052,2.882,1053,1.927,1054,1.927,1055,1.927,1056,2.538,1057,4.103,1058,2.882,1059,3.453,1060,2.882,1061,1.927,1062,1.927,1063,1.927,1064,1.927,1065,1.927,1066,1.927,1067,1.927,1068,2.882,1069,1.927,1070,2.882,1071,1.927,1072,1.927,1073,1.927,1074,1.927,1075,1.447,1076,3.833,1077,2.882,1078,1.927,1079,2.882,1080,3.453,1081,3.453,1082,2.882,1083,1.927,1164,4.323,1165,4.323,1166,2.89,1167,2.89,1168,2.89,1169,2.89,1170,2.89,1171,2.89,1172,2.89,1173,2.89,1174,2.89,1175,2.89,1176,2.89,1177,2.89,1178,2.89]],["title/directives/MainMapDirective.html",[300,0.97,346,1.256]],["body/directives/MainMapDirective.html",[1,2.265,3,0.08,4,0.089,5,0.062,7,0.21,8,0.648,9,1.101,20,0.442,23,1.075,25,1.036,26,0.015,27,0.85,28,0.657,29,0.885,32,1.065,37,1.132,53,1.789,55,1.407,56,0.277,58,0.107,63,3.147,64,4.302,65,0.715,66,0.689,67,0.715,68,0.459,73,1.766,74,1.407,77,0.155,78,0.031,79,0.513,80,0.904,92,1.13,94,3.245,95,1.13,97,1.077,99,1.077,104,0.004,105,0.006,106,0.004,115,0.941,117,0.743,118,0.941,124,0.783,130,1.559,140,1.239,156,1.013,157,0.843,162,0.772,177,0.715,189,2.673,194,1.854,197,1.13,209,2.796,221,2.796,258,1.766,260,1.766,263,0.532,266,1.983,300,0.874,316,0.459,331,1.305,334,0.664,340,0.715,346,1.406,353,0.772,387,1.725,396,1.792,439,1.865,440,2.526,441,2.547,470,1.766,471,1.504,472,1.766,473,1.077,491,1.381,520,1.504,523,0.689,547,0.743,549,0.904,555,1.559,578,1.64,583,1.865,601,1.577,606,1.62,607,1.504,608,1.176,610,0.834,618,1.766,646,1.766,648,1.504,657,1.87,686,0.834,735,2.565,770,1.766,783,2.301,788,1.706,832,2.565,867,1.407,868,1.935,871,2.957,874,3.622,875,2.301,877,2.229,878,2.928,879,2.526,881,1.252,884,1.96,890,1.96,891,2.928,892,1.96,899,1.029,900,2.204,901,1.407,903,1.407,906,1.13,908,1.629,911,1.27,912,0.834,915,1.504,935,1.504,936,1.62,950,2.382,953,2.565,954,1.504,957,1.504,959,3.363,962,1.504,965,2.382,967,1.62,969,1.504,970,1.504,971,1.504,972,1.504,974,1.504,975,1.504,976,1.407,979,1.62,982,1.029,984,1.504,998,1.252,999,1.881,1005,2.097,1006,3.051,1014,2.656,1018,1.325,1032,1.325,1090,1.077,1092,1.325,1094,1.252,1106,2.565,1179,3.534,1180,5.068,1181,3.854,1182,3.854,1183,3.572,1184,3.572,1185,3.572,1186,4.383,1187,3.572,1188,3.185,1189,3.854,1190,4.383,1191,2.256,1192,2.256,1193,3.104,1194,2.256,1195,3.104,1196,2.256,1197,2.256,1198,3.104,1199,3.104,1200,2.256,1201,3.104,1202,3.104,1203,2.256,1204,2.256,1205,2.256,1206,2.462,1207,2.796,1208,2.382,1209,1.62,1210,1.96,1211,1.96,1212,1.96,1213,3.104,1214,1.96,1215,1.96,1216,1.96,1217,1.96,1218,1.96,1219,1.96,1220,1.96,1221,1.96,1222,3.104,1223,1.96,1224,1.96,1225,3.104,1226,1.96,1227,1.96,1228,1.96,1229,1.766,1230,1.766,1231,1.96,1232,3.471,1233,1.96,1234,1.96,1235,1.96,1236,1.96,1237,3.854,1238,1.96,1239,1.96,1240,1.96,1241,3.104,1242,1.96,1243,1.96,1244,1.96,1245,1.96,1246,1.96,1247,1.96,1248,1.96,1249,3.104,1250,1.96,1251,1.96,1252,1.96,1253,1.96,1254,1.96,1255,3.104,1256,1.96,1257,1.96,1258,1.96,1259,1.96,1260,1.96,1261,1.96,1262,1.96,1263,1.96,1264,1.96,1265,3.854,1266,1.96,1267,3.104,1268,1.96,1269,3.104,1270,1.62,1271,1.96,1272,1.96,1273,1.96,1274,1.96,1275,1.96,1276,1.96,1277,1.96,1278,1.96,1279,1.96,1280,1.407,1281,1.96,1282,3.104,1283,3.104,1284,3.104,1285,1.96,1286,1.96,1287,1.96,1288,1.96,1289,3.854,1290,1.96,1291,1.96,1292,1.96,1293,1.96,1294,1.96,1295,1.96,1296,1.766,1297,1.96,1298,1.96,1299,3.104,1300,1.96,1301,1.96,1302,1.96,1303,1.96,1304,1.96,1305,1.96,1306,1.96,1307,1.96,1308,1.96,1309,1.96,1310,1.96,1311,1.96,1312,1.96,1313,1.96,1314,1.96,1315,1.96,1316,1.96]],["title/modules/MainMapModule.html",[422,0.97,436,2.472]],["body/modules/MainMapModule.html",[3,0.191,4,0.213,5,0.149,26,0.015,56,0.294,58,0.258,77,0.235,78,0.048,104,0.009,105,0.012,106,0.009,162,1.857,191,1.93,297,1.378,346,2.594,422,1.328,424,1.857,425,2.269,426,3.278,427,2.476,428,2.476,429,2.658,436,4.941,442,3.033,443,2.476,444,2.269,446,2.089,449,2.559,634,3.6,635,2.592,1179,2.719,1180,3.898,1317,4.717,1318,4.717,1319,4.717,1320,5.428,1321,7.187,1322,4.248]],["title/components/MainToolbarComponent.html",[107,0.638,313,1.305]],["body/components/MainToolbarComponent.html",[3,0.09,4,0.1,5,0.07,7,0.237,8,0.712,9,1.063,20,0.499,23,1.072,25,0.904,26,0.015,27,0.951,28,0.47,29,0.772,32,0.976,56,0.229,58,0.121,68,0.518,77,0.17,78,0.035,79,0.894,80,0.394,87,1.473,97,1.217,104,0.004,105,0.007,106,0.004,107,0.772,108,0.872,109,1.513,110,1.022,111,1.022,112,1.022,113,1.022,115,1.035,116,2.662,117,0.839,118,2.04,119,2.205,120,1.344,122,1.344,124,0.861,131,2.992,133,3.871,134,1.344,136,1.995,137,3.612,140,1.2,145,1.7,156,1.114,157,0.927,161,1.342,163,0.839,168,3.198,177,1.709,179,3.124,185,2.992,189,2.798,191,2.354,192,2.717,193,1.163,196,1.831,204,2.838,205,1.497,206,1.59,207,1.59,210,2.188,211,2.452,212,3.076,216,2.992,222,4.684,223,3.415,229,2.62,239,1.995,275,3.754,276,1.342,294,3.754,296,1.995,297,0.647,298,1.513,299,1.576,300,0.624,301,2.161,302,1.022,303,1.022,304,0.839,305,0.872,306,1.022,307,0.872,308,1.513,309,1.576,310,0.872,311,0.906,312,1.022,313,1.917,314,1.022,315,0.872,316,0.518,317,0.943,318,1.022,319,0.839,320,1.022,321,0.808,322,0.906,323,1.022,324,0.872,325,0.839,326,1.579,327,1.022,328,0.872,329,1.022,330,0.839,331,0.75,332,1.576,333,0.839,334,0.75,335,1.775,336,1.022,337,0.808,338,0.906,339,0.872,340,0.808,341,0.839,342,1.022,343,1.022,344,0.808,345,1.022,346,0.808,347,1.022,348,0.839,349,0.981,350,1.022,387,0.872,395,1.917,398,2.181,466,4.707,491,1.255,509,1.112,523,0.778,555,3.081,564,1.497,608,1.294,611,0.872,788,2.574,911,0.906,912,0.943,928,1.415,930,1.415,1000,1.497,1179,3.536,1323,1.995,1324,4.168,1325,3.415,1326,5.346,1327,4.168,1328,4.168,1329,3.93,1330,4.684,1331,3.754,1332,3.93,1333,2.549,1334,3.415,1335,2.549,1336,2.549,1337,2.549,1338,2.549,1339,3.415,1340,2.549,1341,2.549,1342,2.549,1343,2.215,1344,2.549,1345,2.823,1346,2.823,1347,3.415,1348,1.995,1349,4.604,1350,1.831,1351,1.831,1352,2.215,1353,2.215,1354,3.415,1355,2.215,1356,2.215,1357,3.415,1358,1.995,1359,2.215,1360,1.995,1361,2.215,1362,2.215,1363,3.93,1364,2.549,1365,2.549,1366,2.549,1367,3.93,1368,3.93,1369,3.076,1370,5.39,1371,3.93,1372,3.93,1373,3.93,1374,3.93,1375,3.93,1376,3.93,1377,3.93,1378,6.152,1379,3.93,1380,3.93,1381,3.93,1382,3.076,1383,2.549,1384,3.93,1385,3.415,1386,2.549,1387,2.549,1388,3.93,1389,2.549,1390,2.549,1391,2.215,1392,2.549,1393,4.796,1394,5.39,1395,5.346,1396,4.557,1397,2.215,1398,2.549,1399,2.549,1400,2.549,1401,2.549,1402,2.549,1403,2.549,1404,2.549,1405,2.549,1406,2.549,1407,2.549,1408,2.549,1409,2.549,1410,2.549]],["title/modules/MainToolbarModule.html",[422,0.97,437,2.472]],["body/modules/MainToolbarModule.html",[3,0.164,4,0.183,5,0.128,26,0.015,56,0.305,58,0.221,77,0.202,78,0.041,87,1.273,104,0.008,105,0.01,106,0.008,162,1.593,191,1.656,297,1.183,313,2.639,325,2.639,326,1.534,335,2.639,422,1.14,424,1.593,425,1.947,426,3.055,427,2.125,428,2.754,429,2.477,437,5.026,442,2.754,443,2.125,444,1.947,446,1.793,449,2.324,450,3.199,451,4.811,466,3.106,523,1.422,527,4.179,634,3.355,635,2.224,1179,2.333,1349,3.345,1350,3.345,1411,4.048,1412,4.048,1413,4.048,1414,4.658,1415,6.698,1416,6.698,1417,3.646,1418,6.698,1419,4.811,1420,5.821,1421,6.698,1422,4.811,1423,4.658,1424,4.658]],["title/components/MapHeaderBoxComponent.html",[107,0.638,315,1.356]],["body/components/MapHeaderBoxComponent.html",[3,0.118,4,0.132,5,0.092,7,0.525,9,0.803,23,0.873,26,0.014,27,0.873,28,0.473,33,2.112,56,0.132,58,0.159,77,0.145,78,0.03,87,1.318,104,0.006,105,0.008,106,0.006,107,0.909,108,1.148,109,1.857,110,1.346,111,1.346,112,1.346,113,1.346,117,1.105,118,2.11,119,2.228,120,1.65,122,1.65,130,3.062,156,1.601,157,1.332,163,1.105,179,2.361,185,2.094,188,4.081,191,1.193,192,1.292,193,2.576,194,2.582,195,4.056,196,3.465,197,2.829,198,2.237,204,2.54,205,1.97,206,2.094,207,3.01,213,2.916,215,2.41,216,1.863,226,4.192,229,2.237,234,2.41,235,3.216,236,3.216,257,3.216,261,2.916,263,1.332,266,3.631,267,4.908,270,2.094,276,1.767,287,4.056,290,2.626,292,2.094,293,2.237,297,0.852,298,1.857,299,1.934,300,0.821,301,2.476,302,1.346,303,1.346,304,1.105,305,1.148,306,1.346,307,1.148,308,1.857,309,1.934,310,1.148,311,1.193,312,1.346,313,1.105,314,1.346,315,2.112,316,1.509,317,2.891,318,1.346,319,1.105,320,1.346,321,1.064,322,1.193,323,1.346,324,1.148,325,1.105,326,1.105,327,1.346,328,1.148,329,1.346,330,1.105,331,0.987,332,1.934,333,1.105,334,0.987,335,1.105,336,1.346,337,1.064,338,1.193,339,1.148,340,1.064,341,1.105,342,1.346,343,1.346,344,1.064,345,1.346,346,1.064,347,1.346,348,1.105,349,1.292,350,1.346,395,1.588,444,1.403,509,1.465,549,1.934,555,2.695,563,2.626,564,1.97,568,2.626,569,2.626,570,2.626,571,4.081,572,3.524,584,2.833,604,2.916,605,3.428,615,2.41,657,1.886,758,3.216,759,3.776,900,1.346,901,2.094,999,1.767,1034,2.094,1056,1.97,1232,2.626,1395,4.192,1425,4.833,1426,4.833,1427,2.626,1428,4.908,1429,4.192,1430,5.648,1431,6.175,1432,3.356,1433,3.356,1434,3.356,1435,3.356,1436,4.824,1437,4.824,1438,4.824,1439,4.824,1440,3.356,1441,3.356,1442,3.356,1443,3.356,1444,2.916,1445,3.356,1446,3.356,1447,3.356,1448,4.192,1449,2.916,1450,2.916,1451,3.356,1452,3.356,1453,3.356,1454,3.356,1455,3.356,1456,2.916,1457,3.356,1458,2.916,1459,3.356,1460,3.356,1461,3.356,1462,3.356,1463,3.356,1464,3.356,1465,3.356,1466,3.356,1467,3.356,1468,3.356]],["title/modules/MapHeaderBoxModule.html",[422,0.97,1469,2.472]],["body/modules/MapHeaderBoxModule.html",[3,0.189,4,0.211,5,0.147,26,0.015,56,0.293,58,0.255,77,0.232,78,0.047,104,0.009,105,0.011,106,0.009,162,1.835,297,1.362,315,2.795,316,1.09,317,2.644,422,1.313,424,1.835,425,2.243,426,3.261,427,2.447,428,3.011,429,2.644,442,3.011,443,2.447,444,2.243,446,2.065,449,2.541,450,3.414,634,3.581,635,2.561,1350,3.852,1425,4.198,1426,4.198,1469,4.929,1470,4.661,1471,4.661,1472,4.661,1473,5.364]],["title/classes/NavigationSubscriber.html",[78,0.035,1351,2.846]],["body/classes/NavigationSubscriber.html",[3,0.155,4,0.173,5,0.12,7,0.409,8,1.054,9,1.123,20,0.86,23,0.899,25,1.095,26,0.015,27,0.899,28,0.57,29,0.936,32,0.737,56,0.283,58,0.209,68,0.893,77,0.252,78,0.051,79,1.321,80,0.68,104,0.008,105,0.01,106,0.008,107,0.936,115,1.158,116,3.226,118,1.158,119,1.246,120,1.503,122,1.503,131,2.44,133,3.156,137,3.823,140,1.256,161,2.314,168,2.93,177,1.843,189,2.842,191,2.315,192,2.507,210,1.563,313,2.281,335,1.914,387,1.503,395,2.144,398,3.226,408,3.06,466,4.341,491,1.275,514,2.099,523,1.342,608,2.144,611,1.503,788,3.309,911,2.067,912,1.625,1179,3.261,1323,3.44,1324,3.819,1325,3.819,1326,3.819,1327,3.819,1328,3.819,1330,3.819,1331,3.44,1334,3.819,1339,3.819,1345,4.174,1346,4.174,1347,6.021,1348,3.44,1349,3.156,1350,3.156,1351,4.174,1352,5.05,1353,3.819,1354,5.05,1355,3.819,1356,3.819,1357,5.05,1358,3.44,1359,3.819,1360,3.44,1361,3.819,1362,3.819,1474,4.395,1475,4.395,1476,4.395]],["title/components/NotFoundComponent.html",[107,0.638,319,1.305]],["body/components/NotFoundComponent.html",[3,0.132,4,0.148,5,0.103,7,0.349,9,0.855,20,1.176,23,0.808,26,0.014,27,0.929,28,0.512,33,2.056,56,0.148,58,0.178,77,0.163,78,0.033,87,1.428,104,0.007,105,0.009,106,0.007,107,0.968,108,1.286,109,2.012,110,1.507,111,1.507,112,1.507,113,1.507,117,1.238,118,2.135,119,2.261,120,1.788,122,1.788,124,1.145,130,2.979,156,1.066,157,0.887,163,1.238,179,3.091,191,1.336,192,1.447,193,1.714,194,2.185,195,2.699,197,1.883,198,4.006,204,3.164,205,2.207,206,3.261,207,2.345,217,2.699,228,3.485,229,2.506,234,2.699,235,2.506,236,2.506,257,2.506,270,2.345,276,1.979,292,2.345,297,0.954,298,2.012,299,2.096,300,0.92,301,2.604,302,1.507,303,1.507,304,1.238,305,1.286,306,1.507,307,1.286,308,2.012,309,2.096,310,1.286,311,2.137,312,1.507,313,1.238,314,1.507,315,1.286,316,0.764,317,2.402,318,1.507,319,2.139,320,1.507,321,1.192,322,1.336,323,1.507,324,1.286,325,1.238,326,1.238,327,1.507,328,1.286,329,1.507,330,1.238,331,1.106,332,2.096,333,1.238,334,2.009,335,1.238,336,1.507,337,1.192,338,1.336,339,1.286,340,1.192,341,1.238,342,1.507,343,1.507,344,1.192,345,1.507,346,1.192,347,1.507,348,1.238,349,1.447,350,1.507,509,1.64,535,3.789,542,3.164,555,3.226,556,3.266,557,2.942,561,3.266,562,3.266,563,2.942,564,2.207,565,3.266,566,3.266,567,3.266,568,2.942,569,2.942,570,4.091,571,2.345,572,2.345,573,3.266,660,4.091,993,2.622,1202,3.266,1477,5.222,1478,3.266,1479,6.009,1480,5.227,1481,6.009,1482,3.758,1483,5.644,1484,4.091,1485,3.758,1486,5.227,1487,5.227,1488,5.227,1489,4.542,1490,5.227,1491,5.227,1492,5.227,1493,3.758]],["title/components/RetryDialogComponent.html",[107,0.638,321,1.256]],["body/components/RetryDialogComponent.html",[3,0.134,4,0.149,5,0.104,7,0.353,8,0.954,9,1.054,20,0.743,23,1.008,25,0.715,26,0.014,27,1.008,28,0.592,29,0.611,32,0.636,33,1.298,56,0.207,58,0.18,77,0.228,78,0.046,87,1.438,104,0.007,105,0.009,106,0.007,107,0.973,108,1.298,109,2.026,110,1.522,111,1.522,112,1.522,113,1.522,117,1.25,118,2.137,119,2.264,120,1.8,122,1.8,124,1.153,130,2.296,140,0.954,145,2.53,162,1.298,163,1.25,185,3.283,191,1.35,192,1.461,193,1.731,270,2.368,297,0.964,298,2.026,299,2.11,300,0.929,301,2.615,302,1.522,303,1.522,304,1.25,305,1.298,306,1.522,307,1.298,308,2.026,309,2.11,310,1.298,311,1.35,312,1.522,313,1.25,314,1.522,315,1.298,316,0.771,317,1.404,318,1.522,319,1.25,320,1.522,321,2.068,322,2.635,323,1.522,324,1.298,325,1.25,326,1.25,327,1.522,328,1.298,329,1.522,330,1.25,331,1.117,332,2.11,333,1.25,334,1.117,335,1.25,336,1.522,337,1.203,338,1.35,339,1.298,340,1.203,341,1.25,342,1.522,343,1.522,344,1.203,345,1.522,346,1.203,347,1.522,348,1.25,349,1.461,350,1.522,353,1.298,401,2.368,547,1.25,558,4.118,686,2.534,1494,4.92,1495,4.92,1496,2.97,1497,4.473,1498,5.249,1499,4.572,1500,5.105,1501,5.668,1502,3.795,1503,5.362,1504,4.92,1505,3.795,1506,3.795,1507,4.572,1508,3.795,1509,3.795,1510,3.298,1511,3.298,1512,4.027,1513,3.298,1514,3.298,1515,5.262,1516,5.262,1517,5.262,1518,5.262,1519,3.795,1520,5.262,1521,5.668,1522,5.262,1523,5.262,1524,5.262,1525,5.262,1526,5.262,1527,3.795,1528,3.795,1529,3.795]],["title/classes/RetryDialogData.html",[78,0.035,1504,2.846]],["body/classes/RetryDialogData.html",[3,0.19,4,0.212,5,0.148,7,0.502,9,0.942,23,1.024,26,0.014,28,0.649,29,1.204,33,2.266,56,0.26,58,0.256,77,0.287,78,0.058,104,0.009,105,0.012,106,0.009,107,1.067,118,1.421,119,1.53,120,1.846,122,1.846,124,1.451,140,0.978,162,1.846,321,1.711,322,2.549,401,4.472,514,2.577,547,2.181,686,1.996,1494,5.148,1495,5.148,1496,4.223,1497,3.168,1498,4.689,1499,4.689,1500,4.223,1501,4.689,1503,5.185,1504,5.148,1507,4.689,1510,4.689,1511,4.689,1512,4.779,1513,4.689,1514,4.689,1530,5.396,1531,5.396]],["title/modules/RetryDialogModule.html",[422,0.97,1532,2.642]],["body/modules/RetryDialogModule.html",[3,0.186,4,0.207,5,0.144,26,0.015,56,0.291,58,0.25,77,0.228,78,0.046,104,0.009,105,0.011,106,0.009,162,1.803,297,1.338,321,2.603,322,1.874,422,1.29,424,1.803,425,2.203,426,3.236,427,2.404,428,2.978,429,2.623,442,2.978,443,2.404,444,2.203,446,2.029,449,2.513,450,3.387,634,3.553,635,2.517,1419,5.095,1494,3.785,1495,3.785,1532,5.248,1533,4.58,1534,4.58,1535,4.58,1536,5.271,1537,6.529,1538,6.164,1539,5.271]],["title/components/RouteListComponent.html",[107,0.638,324,1.356]],["body/components/RouteListComponent.html",[3,0.124,4,0.138,5,0.096,7,0.326,8,0.902,9,0.983,23,1.069,25,0.938,26,0.014,27,1.029,28,0.617,29,0.802,32,0.834,56,0.138,58,0.166,77,0.152,78,0.031,80,0.974,87,2.019,104,0.006,105,0.009,106,0.006,107,0.932,108,1.2,109,1.916,110,1.406,111,1.406,112,1.406,113,1.406,117,1.155,118,2.12,119,2.241,120,1.703,122,1.703,124,1.091,134,1.703,140,0.636,156,0.994,157,0.827,163,1.155,177,1.112,179,2.972,191,1.247,192,1.35,193,1.6,194,1.466,200,3.047,205,3.398,216,2.763,263,0.827,266,2.763,276,1.847,287,3.575,297,0.89,298,1.916,299,1.996,300,0.858,301,2.526,302,1.406,303,1.406,304,1.155,305,1.2,306,1.406,307,1.2,308,1.916,309,1.996,310,1.2,311,2.583,312,1.406,313,1.155,314,1.406,315,1.2,316,0.713,317,1.297,318,1.406,319,1.155,320,1.406,321,1.112,322,1.247,323,1.406,324,2.155,325,1.155,326,1.155,327,1.406,328,1.2,329,1.406,330,1.155,331,1.032,332,1.996,333,1.155,334,1.032,335,1.155,336,1.406,337,1.112,338,1.247,339,1.2,340,1.112,341,1.155,342,1.406,343,1.406,344,1.112,345,1.406,346,1.112,347,1.406,348,1.155,349,1.35,350,1.406,484,4.157,491,1.133,528,3.578,584,2.923,590,2.621,605,1.947,611,1.2,639,2.745,640,5.029,641,4.326,642,5.029,644,3.047,656,5.029,658,3.047,660,3.896,661,3.896,664,4.326,665,2.745,666,2.745,668,3.047,671,3.106,678,3.896,686,2.141,737,2.519,738,2.745,739,2.745,740,2.519,1396,3.896,1540,6.177,1541,5.788,1542,4.978,1543,4.326,1544,3.507,1545,3.507,1546,3.507,1547,3.507,1548,3.507,1549,3.507,1550,3.507,1551,3.507,1552,4.978,1553,4.326,1554,4.326,1555,4.978,1556,4.978,1557,4.326,1558,4.978,1559,3.507,1560,4.978,1561,3.507,1562,3.507,1563,3.507,1564,3.507,1565,3.047,1566,3.507]],["title/components/RouteLoadingIndicatorComponent.html",[107,0.638,325,1.305]],["body/components/RouteLoadingIndicatorComponent.html",[3,0.124,4,0.138,5,0.097,7,0.327,8,0.905,9,1.052,20,0.689,23,1.03,25,0.663,26,0.014,27,0.976,28,0.489,29,0.567,32,0.837,56,0.228,58,0.167,68,0.716,77,0.216,78,0.044,79,1.135,87,2.021,104,0.006,105,0.009,106,0.006,107,0.934,108,1.204,109,1.922,110,1.412,111,1.412,112,1.412,113,1.412,115,1.315,116,3.219,117,1.159,118,2.121,119,2.242,120,1.708,122,1.708,124,1.094,131,3.503,140,1.208,156,0.998,157,1.572,163,1.159,179,2.087,189,3.02,191,1.252,192,1.355,193,1.606,194,1.472,216,1.954,235,2.347,236,2.347,257,2.347,292,2.196,297,0.894,298,1.922,299,2.002,300,0.862,301,2.53,302,1.412,303,1.412,304,1.159,305,1.204,306,1.412,307,1.204,308,1.922,309,2.002,310,1.204,311,1.252,312,1.412,313,1.159,314,1.412,315,1.204,316,0.716,317,1.302,318,1.412,319,1.159,320,1.412,321,1.116,322,1.252,323,1.412,324,1.204,325,2.194,326,2.604,327,1.412,328,1.204,329,1.412,330,1.159,331,1.036,332,2.002,333,1.159,334,1.036,335,1.159,336,1.412,337,1.116,338,1.252,339,1.204,340,1.116,341,1.159,342,1.412,343,1.412,344,1.116,345,1.412,346,1.116,347,1.412,348,1.159,349,1.355,350,1.412,387,1.708,395,1.91,398,3.503,491,1.135,523,1.075,578,2.145,583,2.334,601,2.461,608,1.644,725,2.755,727,4.939,788,2.384,911,1.252,912,1.302,982,1.606,1009,2.067,1179,3.466,1345,3.585,1346,3.585,1382,3.907,1567,5.416,1568,2.755,1569,5.04,1570,4.338,1571,3.521,1572,4.992,1573,3.521,1574,3.521,1575,3.521,1576,4.338,1577,4.338,1578,2.528,1579,3.059,1580,4.338,1581,4.338,1582,4.338,1583,3.059,1584,3.059,1585,3.059,1586,3.059,1587,4.992,1588,4.992]],["title/classes/RouteLoadingSubscriber.html",[78,0.035,1578,2.846]],["body/classes/RouteLoadingSubscriber.html",[3,0.162,4,0.181,5,0.126,7,0.428,8,1.086,9,0.947,20,0.901,23,0.926,25,1.129,26,0.015,27,0.926,28,0.587,29,0.965,32,0.771,56,0.261,58,0.218,68,0.936,77,0.26,78,0.053,79,1.362,87,1.82,104,0.008,105,0.01,106,0.008,107,0.965,115,1.212,116,3.325,118,1.212,119,1.305,120,1.575,122,1.575,131,2.555,140,1.279,157,1.725,189,2.907,325,2.323,326,2.514,387,2.049,395,1.972,398,3.916,408,3.154,491,0.901,514,2.198,523,1.406,578,2.216,583,1.702,601,2.368,608,2.193,725,3.602,727,5.521,788,3.369,911,2.13,912,1.702,982,2.1,1009,3.518,1179,3.336,1345,4.303,1346,4.303,1382,3.602,1567,5.213,1568,3.602,1569,4,1570,4,1576,5.206,1577,5.206,1578,4.303,1579,5.206,1580,5.206,1581,5.206,1582,5.206,1583,4,1584,4,1585,4,1586,4,1589,4.603,1590,4.603,1591,4.603,1592,3.602]],["title/classes/RoutesSubscriber.html",[78,0.035,910,2.846]],["body/classes/RoutesSubscriber.html",[1,2.141,3,0.124,4,0.138,5,0.096,7,0.326,8,0.902,9,1.078,20,0.686,23,0.77,25,0.938,26,0.015,27,0.77,28,0.344,29,0.802,32,0.588,56,0.294,58,0.166,63,3.611,65,1.112,66,1.071,67,1.112,68,0.713,74,2.188,77,0.216,78,0.044,79,0.797,80,0.77,94,3.836,104,0.006,105,0.009,106,0.006,115,0.924,118,0.924,130,1.53,140,1.142,197,1.757,210,1.247,263,0.827,300,1.218,316,1.012,344,1.997,387,1.2,395,1.639,396,1.755,398,1.947,408,2.621,439,2.33,441,2.526,473,1.675,491,1.302,502,1.465,509,1.53,514,1.675,528,1.675,535,1.947,549,1.996,555,1.53,578,1.841,583,1.297,598,2.494,601,1.77,605,1.947,608,1.906,609,3.896,610,1.297,611,1.2,657,1.071,758,2.338,783,2.271,864,3.048,865,4.53,866,4.157,867,2.188,868,2.173,869,3.047,870,3.047,871,2.338,872,3.047,873,3.047,874,2.519,875,1.6,877,2.188,878,2.494,879,2.494,886,3.047,888,3.047,889,3.047,891,2.494,894,2.188,899,1.6,900,1.406,901,2.188,902,3.047,903,2.188,904,2.745,905,3.047,906,1.757,907,1.757,908,2.271,909,2.745,910,3.575,911,2.058,912,1.297,913,4.326,914,3.047,915,2.338,916,2.745,917,3.047,918,3.047,919,3.047,920,3.047,921,3.047,922,3.047,923,3.047,924,3.047,925,3.047,926,3.047,927,3.047,928,1.947,929,3.047,930,1.947,931,3.047,932,3.047,933,3.047,934,3.047,935,2.338,936,2.519,937,2.745,938,2.745,939,2.745,940,2.745,941,2.745,942,1.947,943,2.519,944,2.745,945,2.745,946,2.745,947,3.047,948,4.326,949,2.745,950,3.319,951,2.745,952,2.745,953,3.575,954,2.338,955,3.047,956,3.047,957,2.338,958,2.745,959,2.338,960,2.745,961,3.896,962,2.338,963,1.947,964,2.745,965,2.338,966,3.047,967,2.519,968,2.745,969,2.338,970,2.338,971,2.338,972,2.338,973,2.745,974,2.338,975,2.338,976,2.188,977,3.047,978,3.047,979,2.519,980,3.047,981,3.047,982,1.6,983,3.047,984,2.338,985,3.047,1593,3.507,1594,3.507,1595,3.047]],["title/classes/SettingsLoadSubscriber.html",[78,0.035,1596,2.846]],["body/classes/SettingsLoadSubscriber.html",[0,1.78,1,2.347,3,0.147,4,0.164,5,0.114,7,0.388,8,1.018,9,1.121,20,0.817,23,0.981,25,1.058,26,0.015,27,0.868,28,0.55,29,0.904,32,0.941,37,1.78,56,0.286,58,0.198,59,5.543,65,1.323,66,1.274,67,1.323,68,0.848,75,2.197,76,2.09,77,0.243,78,0.049,79,1.276,80,1.187,94,3.116,104,0.007,105,0.01,106,0.007,140,1.438,157,0.984,263,0.984,316,0.848,353,1.921,407,3.266,408,2.197,409,3.266,410,3.266,439,1.543,476,2.997,491,0.817,502,1.867,514,1.993,520,2.782,521,2.997,547,1.374,608,2.089,610,1.543,657,1.274,899,1.903,900,1.673,911,1.996,912,1.543,982,1.903,1014,2.197,1090,1.993,1270,2.997,1280,2.603,1596,4.032,1597,3.266,1598,4.874,1599,4.173,1600,5.513,1601,4.173,1602,3.116,1603,4.173,1604,4.032,1605,4.173,1606,4.032,1607,3.626,1608,2.997,1609,4.879,1610,3.626,1611,3.626,1612,4.879,1613,3.626,1614,3.626,1615,4.879,1616,3.626,1617,4.879,1618,3.626,1619,3.626,1620,3.626,1621,4.879,1622,3.626,1623,3.626,1624,3.626,1625,3.626,1626,3.626,1627,3.266,1628,3.626]],["title/injectables/SettingsService.html",[0,1.256,439,1.466]],["body/injectables/SettingsService.html",[0,1.744,1,2.674,2,2.247,3,0.143,4,0.159,5,0.111,7,0.376,8,0.997,9,1.123,13,3.518,20,0.793,23,1.118,25,0.763,26,0.015,27,0.626,28,0.539,29,0.652,32,1.047,37,1.744,56,0.284,58,0.192,59,5.658,65,1.284,66,1.236,67,1.284,68,0.823,75,2.132,76,2.028,77,0.238,78,0.048,79,1.251,80,1.18,94,3.053,104,0.007,105,0.01,106,0.007,124,1.205,134,1.882,140,1.383,156,1.148,157,1.298,263,0.955,316,0.823,407,3.169,408,2.132,409,3.169,410,3.169,439,2.034,476,3.951,491,1.223,502,1.838,520,4.469,547,1.811,608,1.811,610,1.497,657,1.68,899,1.847,900,1.623,911,1.44,912,1.497,982,1.847,1014,3.29,1090,1.933,1270,2.908,1280,2.526,1596,2.908,1597,3.169,1598,2.908,1600,4.78,1602,2.247,1604,2.908,1606,2.908,1607,3.518,1608,2.908,1609,4.78,1610,3.518,1611,5.429,1612,4.78,1613,5.825,1614,4.78,1615,4.78,1616,3.518,1617,4.78,1618,3.518,1619,3.518,1620,5.825,1621,4.78,1622,3.518,1623,3.518,1624,3.518,1625,3.518,1626,3.518,1627,3.169,1628,3.518,1629,4.049,1630,5.501,1631,4.049,1632,4.049,1633,4.049,1634,4.049]],["title/components/SidebarComponent.html",[107,0.638,328,1.356]],["body/components/SidebarComponent.html",[3,0.25,4,0.208,5,0.082,7,0.279,8,0.805,9,1.029,20,0.587,23,0.966,25,0.565,26,0.014,27,0.905,28,0.294,29,0.483,32,1.097,33,2.002,56,0.208,58,0.251,69,1.999,77,0.13,78,0.026,79,0.682,80,0.687,87,1.214,99,1.432,104,0.005,105,0.008,106,0.005,107,0.852,108,1.025,109,1.71,110,1.202,111,1.202,112,1.202,113,1.202,117,0.987,118,2.083,119,2.234,120,1.52,122,1.52,134,1.52,136,2.346,137,3.844,140,1.061,163,0.987,173,2.605,179,3.376,184,3.861,185,3.302,188,3.302,191,1.066,192,1.154,193,1.367,202,2.346,204,2.339,205,2.609,206,1.87,211,1.87,212,2.346,215,2.153,218,2.605,239,2.346,242,2.605,263,1.048,289,3.861,290,2.346,293,1.999,296,2.346,297,0.761,298,1.71,299,1.781,300,0.734,301,2.347,302,1.202,303,1.202,304,0.987,305,1.025,306,1.202,307,1.025,308,1.71,309,1.781,310,1.025,311,2.764,312,1.202,313,0.987,314,1.202,315,1.025,316,0.609,317,1.109,318,1.202,319,0.987,320,1.202,321,0.95,322,1.066,323,1.202,324,1.025,325,0.987,326,0.987,327,1.202,328,2.002,329,1.202,330,0.987,331,0.882,332,1.781,333,0.987,334,1.839,335,0.987,336,1.202,337,0.95,338,1.066,339,1.025,340,0.95,341,0.987,342,1.202,343,1.202,344,0.95,345,1.202,346,0.95,347,1.202,348,0.987,349,1.154,350,1.202,379,3.191,502,1.307,542,2.339,555,2.554,671,4.511,991,5.087,992,4.866,1116,2.153,1348,2.346,1385,2.605,1391,3.861,1396,3.477,1397,2.605,1483,5.689,1484,3.477,1489,6.452,1512,2.962,1521,3.861,1554,3.861,1557,6.452,1635,2.605,1636,5.293,1637,4.443,1638,5.086,1639,5.853,1640,6.546,1641,2.998,1642,2.998,1643,2.998,1644,2.153,1645,2.998,1646,3.861,1647,4.143,1648,2.998,1649,2.998,1650,2.998,1651,2.998,1652,2.998,1653,2.998,1654,4.443,1655,4.443,1656,4.443,1657,6.452,1658,4.443,1659,4.443,1660,4.443,1661,4.443,1662,4.443,1663,4.443,1664,4.581,1665,4.443,1666,4.443,1667,2.998,1668,2.998,1669,2.998,1670,2.998,1671,2.998,1672,2.998]],["title/modules/SidebarModule.html",[422,0.97,438,2.472]],["body/modules/SidebarModule.html",[3,0.188,4,0.209,5,0.146,26,0.015,56,0.292,58,0.253,77,0.231,78,0.047,104,0.009,105,0.011,106,0.009,162,1.824,297,1.354,328,2.792,422,1.305,424,1.824,425,2.229,426,3.253,427,2.432,428,3,429,2.637,438,4.923,442,3,443,2.432,444,2.229,446,2.053,449,2.531,450,3.405,634,3.572,635,2.546,858,4.754,1419,5.121,1420,6.196,1673,4.634,1674,4.634,1675,4.634,1676,5.332,1677,5.332]],["title/injectables/SidebarService.html",[0,1.256,137,2.327]],["body/injectables/SidebarService.html",[0,1.964,2,2.691,3,0.171,4,0.19,5,0.133,7,0.451,8,1.123,9,1.161,20,1.336,23,1.195,26,0.015,28,0.607,32,1.144,37,2.164,56,0.243,58,0.23,68,0.986,75,2.553,76,2.428,77,0.21,78,0.043,80,0.75,104,0.008,105,0.011,106,0.008,124,1.357,133,5.167,134,2.119,137,3.638,140,1.378,156,1.757,157,1.461,177,1.537,491,1.336,502,1.823,598,3.419,993,2.979,1638,6.251,1678,4.213,1679,6.827,1680,6.827,1681,5.63,1682,6.827,1683,6.195,1684,4.849,1685,4.849,1686,4.849,1687,6.195,1688,6.195,1689,4.849,1690,4.849,1691,4.849,1692,4.849,1693,4.849,1694,4.849,1695,4.849]],["title/components/StopInfoComponent.html",[107,0.638,330,1.305]],["body/components/StopInfoComponent.html",[1,2.215,3,0.151,4,0.084,5,0.058,7,0.198,8,0.619,9,1.097,15,1.853,20,0.417,23,1.126,25,0.805,26,0.015,27,0.882,28,0.645,29,0.688,32,0.819,33,1.829,37,1.899,44,4.096,56,0.235,58,0.101,62,4.872,65,0.676,66,0.651,67,0.676,68,0.433,77,0.092,78,0.019,79,0.485,80,1.04,87,1.559,104,0.004,105,0.006,106,0.004,107,0.688,108,0.729,109,1.315,110,0.855,111,0.855,112,0.855,113,0.855,115,0.9,117,0.702,118,1.986,119,2.149,120,1.168,122,1.168,124,0.748,134,1.168,140,1.034,156,1.617,157,1.345,163,0.702,179,2.385,188,1.33,191,0.758,192,0.821,198,2.277,204,1.123,210,0.758,211,1.33,215,2.453,263,1.261,276,1.123,287,3.068,291,2.968,293,1.422,297,0.541,298,1.315,299,1.369,300,0.522,301,1.959,302,0.855,303,0.855,304,0.702,305,0.729,306,0.855,307,0.729,308,1.881,309,1.369,310,0.729,311,0.758,312,0.855,313,0.702,314,0.855,315,0.729,316,0.993,317,2.215,318,0.855,319,0.702,320,0.855,321,0.676,322,1.519,323,0.855,324,0.729,325,0.702,326,0.702,327,0.855,328,0.729,329,0.855,330,1.609,331,1.98,332,1.369,333,0.702,334,0.627,335,0.702,336,0.855,337,0.676,338,0.758,339,0.729,340,0.676,341,0.702,342,0.855,343,0.855,344,0.676,345,0.855,346,0.676,347,0.855,348,0.702,349,0.821,350,0.855,353,1.168,355,0.891,387,0.729,395,1.407,396,1.24,405,2.277,413,1.558,440,2.447,471,1.422,491,1.425,523,0.651,528,2.04,547,2.169,549,1.369,557,3.344,558,3.344,571,2.131,572,2.131,578,1.58,582,3.344,583,1.807,590,3.154,601,1.901,606,1.531,607,2.849,610,0.789,617,1.669,619,2.968,622,3.713,625,2.968,626,1.669,657,1.632,671,1.33,678,2.673,686,2.302,737,1.531,738,1.669,739,1.669,740,1.531,810,2.673,868,1.865,875,2.228,901,1.33,976,1.33,993,2.489,1088,3.509,1090,1.018,1092,1.252,1094,1.184,1116,1.531,1125,3.509,1160,1.669,1188,3.068,1206,2.967,1280,1.33,1448,1.853,1450,1.853,1543,2.968,1565,2.968,1627,1.669,1696,4.896,1697,1.669,1698,3.713,1699,2.968,1700,4.272,1701,4.272,1702,4.272,1703,4.272,1704,3.713,1705,4.272,1706,4.272,1707,3.415,1708,4.272,1709,3.713,1710,1.853,1711,2.132,1712,2.132,1713,3.415,1714,3.415,1715,3.415,1716,3.415,1717,2.132,1718,2.132,1719,3.415,1720,2.132,1721,2.132,1722,2.132,1723,2.132,1724,3.415,1725,3.415,1726,4.885,1727,2.132,1728,2.132,1729,2.132,1730,2.968,1731,2.132,1732,4.272,1733,3.415,1734,2.968,1735,2.132,1736,2.132,1737,2.132,1738,2.132,1739,2.132,1740,2.132,1741,2.132,1742,2.132,1743,1.422,1744,4.272,1745,2.132,1746,4.272,1747,2.132,1748,3.415,1749,2.132,1750,2.132,1751,2.132,1752,2.132,1753,3.415,1754,2.132,1755,2.132,1756,4.272,1757,2.132,1758,1.853,1759,3.415,1760,2.132,1761,2.132,1762,2.132,1763,2.132,1764,2.132,1765,2.132,1766,2.132,1767,2.132,1768,2.132,1769,2.132,1770,2.132,1771,2.132,1772,2.132,1773,2.132,1774,2.132,1775,2.132,1776,2.132,1777,2.132,1778,2.132,1779,3.415,1780,3.415,1781,3.415,1782,3.415,1783,4.885,1784,2.132,1785,4.272,1786,3.415,1787,3.415,1788,4.885,1789,4.885,1790,3.415,1791,3.415,1792,3.415,1793,2.132,1794,2.968,1795,3.415,1796,2.132,1797,1.853,1798,2.132,1799,2.132,1800,2.132,1801,2.968,1802,2.132,1803,2.132,1804,2.132,1805,2.132]],["title/guards/StopInfoResolver.html",[1806,2.846,1807,2.642]],["body/guards/StopInfoResolver.html",[0,1.823,1,2.651,3,0.152,4,0.17,5,0.119,7,0.402,8,1.042,9,1.02,20,1.264,23,0.889,25,1.083,26,0.015,27,0.889,28,0.564,29,0.926,32,0.725,37,2.048,44,4.945,56,0.295,57,2.698,58,0.205,62,3.385,65,1.371,66,2.103,67,1.371,68,0.879,77,0.187,78,0.038,79,0.983,80,0.889,87,2.014,104,0.008,105,0.01,106,0.008,115,1.139,189,3.374,331,2.026,334,1.692,355,2.701,366,3.834,413,3.362,414,4.997,491,0.847,523,1.321,524,3.834,610,1.6,648,3.834,680,4.13,1090,2.065,1094,2.401,1099,4.03,1142,2.884,1602,3.822,1646,4.997,1696,4.307,1807,3.834,1808,3.106,1809,3.759,1810,5.983,1811,6.885,1812,5.751,1813,5.751,1814,5.751,1815,3.106,1816,4.325,1817,4.501,1818,5.389,1819,5.389,1820,5.389,1821,4.325,1822,5.751,1823,4.997,1824,5.751,1825,3.759,1826,4.325,1827,3.385,1828,4.325]],["title/directives/StopLocationMapDirective.html",[300,0.97,348,1.305]],["body/directives/StopLocationMapDirective.html",[3,0.122,4,0.136,5,0.095,7,0.323,8,0.896,9,1.064,20,0.679,23,1.14,25,0.931,26,0.015,27,0.764,28,0.615,29,0.796,32,1.051,37,1.567,56,0.284,58,0.165,65,1.101,66,1.06,67,1.101,68,0.706,74,2.166,77,0.15,78,0.031,80,0.537,94,3.481,104,0.006,105,0.009,106,0.006,115,1.302,117,1.143,118,1.302,124,1.083,130,1.515,134,1.691,140,1.249,156,1.401,157,1.166,197,1.739,300,1.535,316,1.005,340,1.101,348,1.627,349,1.902,355,1.451,387,1.187,395,1.627,396,1.255,398,1.927,439,2.679,441,2.905,473,1.658,491,1.443,502,1.693,549,2.657,555,1.515,578,2.129,582,4.504,583,2.319,584,2.902,598,2.883,601,2.046,605,1.927,611,1.187,617,4.504,626,2.717,657,1.509,783,2.86,867,2.166,868,2.512,871,3.837,875,2.86,877,3.083,878,3.141,879,3.141,880,4.295,881,1.927,882,3.016,891,2.883,894,3.083,899,1.583,900,1.392,904,2.717,906,1.739,907,1.739,908,2.254,909,2.717,911,1.234,915,2.314,916,2.717,935,2.314,937,2.717,938,2.717,939,2.717,940,2.717,941,2.717,942,1.927,943,2.493,944,2.717,945,2.717,946,2.717,949,2.717,950,3.295,951,2.717,952,2.717,958,2.717,959,2.314,960,2.717,961,3.868,962,2.314,963,1.927,964,2.717,965,2.314,968,2.717,969,2.314,970,2.314,971,2.314,972,2.314,973,2.717,974,2.314,975,2.314,984,2.314,1101,3.868,1125,3.55,1206,2.743,1208,3.295,1595,3.016,1696,4.985,1704,4.295,1829,5.755,1830,6.271,1831,3.471,1832,3.471,1833,4.295,1834,3.471,1835,3.471,1836,3.471,1837,3.471,1838,3.471,1839,3.471,1840,3.471,1841,3.471,1842,3.471,1843,4.295,1844,3.016]],["title/modules/StopModule.html",[422,0.97,1845,2.846]],["body/modules/StopModule.html",[3,0.163,4,0.182,5,0.127,26,0.015,56,0.312,58,0.22,77,0.2,78,0.041,87,1.264,104,0.008,105,0.01,106,0.008,162,1.583,297,1.175,305,1.583,307,2.568,308,2.314,310,2.568,311,1.645,324,2.568,330,2.472,331,2.08,348,2.472,422,1.132,424,1.583,425,1.934,426,3.045,427,2.11,428,2.742,429,1.711,442,2.742,443,2.11,444,1.934,446,2.314,449,2.314,450,2.87,463,3.084,634,3.011,635,2.209,858,4.007,1322,3.621,1422,4.317,1469,4.684,1807,4.007,1845,5.881,1846,4.02,1847,4.02,1848,4.02,1849,5.006,1850,4.626,1851,4.704,1852,6.011,1853,4.626,1854,6.011,1855,3.323,1856,4.02]],["title/classes/StopPointLoadSubscriber.html",[78,0.035,1857,2.846]],["body/classes/StopPointLoadSubscriber.html",[0,1.774,1,2.07,3,0.146,4,0.163,5,0.114,7,0.386,8,1.015,9,1.144,20,0.813,23,1.047,25,1.193,26,0.015,27,0.979,28,0.62,29,1.019,32,1.061,33,1.421,37,1.774,56,0.278,58,0.197,65,1.317,66,1.709,67,1.317,68,0.844,75,2.187,76,2.081,77,0.242,78,0.049,79,1.272,80,1.126,104,0.007,105,0.01,106,0.007,140,1.35,177,1.317,263,0.98,316,0.844,331,1.647,334,1.647,353,1.915,378,4.381,396,1.055,408,2.947,440,3.393,491,1.239,502,1.222,514,1.984,598,3.171,601,1.99,608,2.084,610,1.536,611,1.421,621,3.251,657,1.268,911,1.99,912,1.536,982,1.895,1206,4.132,1598,4.865,1604,4.02,1606,2.983,1608,2.983,1743,4.714,1857,4.02,1858,3.251,1859,4.154,1860,4.154,1861,4.154,1862,4.154,1863,4.864,1864,4.154,1865,3.61,1866,3.61,1867,3.61,1868,3.61,1869,4.864,1870,3.61,1871,3.61,1872,3.61,1873,3.61,1874,3.61,1875,3.61,1876,3.61,1877,3.61,1878,3.61,1879,3.61,1880,3.61,1881,3.61,1882,3.61,1883,3.61,1884,3.61,1885,3.61,1886,3.61,1887,3.61,1888,3.61]],["title/injectables/StopPointService.html",[0,1.256,440,1.985]],["body/injectables/StopPointService.html",[0,1.701,1,2.441,2,2.167,3,0.138,4,0.153,5,0.107,7,0.363,8,0.973,9,1.1,20,0.764,23,1.17,25,1.155,26,0.015,27,0.948,28,0.678,29,0.987,32,1.028,33,2.097,37,1.701,56,0.272,58,0.185,65,1.238,66,1.872,67,1.238,68,0.794,75,2.056,76,1.955,77,0.232,78,0.047,79,1.22,80,1.106,104,0.007,105,0.009,106,0.007,124,1.175,134,1.835,140,1.296,156,1.107,157,0.921,177,1.238,263,0.921,316,0.794,331,1.579,334,1.149,378,3.055,396,0.991,440,3.071,491,1.482,502,1.579,598,3.466,601,2.18,608,1.767,610,1.444,611,1.335,621,3.055,657,1.192,911,1.388,912,1.444,982,1.781,1206,3.969,1598,2.804,1604,2.804,1608,2.804,1743,5.107,1815,2.804,1857,2.804,1858,3.055,1863,3.392,1865,3.392,1866,5.327,1867,5.327,1868,5.736,1869,4.663,1870,3.392,1871,3.392,1872,3.392,1873,5.327,1874,3.392,1875,3.392,1876,3.392,1877,4.663,1878,4.663,1879,3.392,1880,3.392,1881,4.663,1882,5.327,1883,3.392,1884,5.327,1885,3.392,1886,3.392,1887,3.392,1888,3.392,1889,5.366,1890,5.366,1891,3.904,1892,3.904,1893,3.904,1894,3.904,1895,3.904,1896,3.904,1897,3.904,1898,3.904,1899,3.904,1900,3.904,1901,3.904]],["title/modules/StopRoutingModule.html",[422,0.97,1849,2.642]],["body/modules/StopRoutingModule.html",[3,0.198,4,0.22,5,0.154,26,0.015,44,4.027,56,0.297,58,0.266,77,0.243,78,0.049,104,0.01,105,0.012,106,0.01,107,0.903,330,2.233,331,1.995,387,1.918,396,1.424,424,1.918,429,2.074,446,2.158,449,2.61,523,1.712,526,3.738,527,4.23,528,3.238,535,3.112,686,2.074,1602,3.112,1681,4.388,1696,3.738,1709,4.872,1807,4.521,1849,4.521,1855,4.027,1856,4.872,1902,4.388,1903,4.388]],["title/components/StopsInfoComponent.html",[107,0.638,333,1.305]],["body/components/StopsInfoComponent.html",[3,0.202,4,0.135,5,0.094,7,0.532,8,0.889,9,0.888,20,0.673,23,0.965,25,0.924,26,0.014,27,1.021,28,0.561,29,0.79,32,0.959,56,0.245,58,0.163,65,1.089,66,1.049,67,1.089,77,0.149,78,0.03,79,0.781,80,0.885,87,1.341,104,0.006,105,0.009,106,0.006,107,0.922,108,1.175,109,1.889,110,1.378,111,1.378,112,1.378,113,1.378,117,1.131,118,2.115,119,2.235,120,1.678,122,1.678,124,1.075,134,1.678,156,0.974,157,0.811,163,1.131,177,1.556,179,3.119,188,2.144,191,1.222,192,1.323,196,2.468,201,2.689,202,3.84,203,2.986,204,1.809,208,2.986,210,1.745,211,2.144,228,4.162,233,2.986,263,0.811,266,2.724,274,2.689,275,2.689,276,1.809,297,0.872,298,1.889,299,1.967,300,0.841,301,2.503,302,1.378,303,1.378,304,1.131,305,1.175,306,1.378,307,1.175,308,1.889,309,1.967,310,1.175,311,2.441,312,1.378,313,1.131,314,1.378,315,1.175,316,0.699,317,1.271,318,1.378,319,1.131,320,1.378,321,1.089,322,1.222,323,1.378,324,1.175,325,1.131,326,1.131,327,1.378,328,1.175,329,1.378,330,1.131,331,1.011,332,1.967,333,2.055,334,2.28,335,1.131,336,1.378,337,1.089,338,1.222,339,1.175,340,1.089,341,1.131,342,1.378,343,1.378,344,1.089,345,1.378,346,1.089,347,1.378,348,1.131,349,1.323,350,1.378,379,2.468,396,0.872,491,1.12,523,1.049,547,1.884,555,2.141,671,3.061,810,2.689,1045,2.144,1088,4.931,1206,3.811,1484,3.84,1553,4.264,1697,2.689,1698,4.973,1699,4.264,1801,4.264,1904,5.167,1905,5.723,1906,4.907,1907,3.436,1908,4.907,1909,4.907,1910,3.436,1911,6.242,1912,3.436,1913,3.436,1914,4.907,1915,4.907,1916,3.436,1917,3.436,1918,4.907,1919,3.436,1920,3.436,1921,3.436,1922,4.907,1923,4.907,1924,4.907,1925,4.907,1926,4.907,1927,4.907,1928,3.436,1929,4.907,1930,4.907,1931,4.907,1932,4.907,1933,4.907,1934,3.436,1935,3.436]],["title/modules/StopsModule.html",[422,0.97,1936,2.846]],["body/modules/StopsModule.html",[3,0.176,4,0.196,5,0.137,26,0.015,56,0.305,58,0.237,77,0.216,78,0.044,104,0.009,105,0.011,106,0.009,162,1.707,297,1.267,333,2.522,334,2.139,355,2.086,422,1.693,424,1.707,425,2.086,426,3.156,427,2.276,428,2.878,429,1.846,442,2.878,443,2.276,444,2.086,446,2.429,449,2.429,450,3.013,451,4.532,463,3.327,634,3.16,635,2.383,858,4.207,1095,4.532,1422,4.532,1497,2.93,1532,5.107,1538,5.483,1851,4.938,1855,3.584,1936,5.747,1937,4.337,1938,4.337,1939,4.337,1940,5.107,1941,4.991,1942,6.31,1943,4.337,1944,4.207,1945,4.337]],["title/guards/StopsResolver.html",[1806,2.846,1944,2.642]],["body/guards/StopsResolver.html",[0,1.771,1,2.612,3,0.146,4,0.163,5,0.114,7,0.385,8,1.013,9,1.005,14,3.599,20,1.237,23,0.864,25,1.052,26,0.015,27,0.864,28,0.547,29,0.899,32,0.936,37,2.307,56,0.304,57,2.584,58,0.197,61,3.599,65,1.313,66,2.066,67,1.313,68,0.842,77,0.179,78,0.037,79,0.941,80,1.046,87,1.526,104,0.007,105,0.01,106,0.007,115,1.091,162,1.417,189,3.345,321,1.313,355,2.642,366,4.214,375,5.879,401,2.584,413,2.883,491,1.093,523,1.265,524,3.724,542,2.181,610,1.532,657,1.265,686,1.532,1090,1.978,1094,2.299,1099,2.584,1142,2.761,1497,3.972,1512,2.761,1602,3.755,1808,2.974,1810,5.879,1815,2.974,1817,4.372,1818,5.295,1819,5.696,1820,5.295,1823,4.854,1825,3.599,1827,3.241,1943,3.599,1944,3.724,1946,3.599,1947,5.586,1948,5.586,1949,6.765,1950,4.141,1951,4.141,1952,5.586,1953,5.586,1954,5.586,1955,4.141,1956,4.141,1957,3.241,1958,2.974,1959,4.141,1960,4.141,1961,4.141,1962,4.141,1963,4.141,1964,4.141,1965,5.586,1966,3.599]],["title/modules/StopsRoutingModule.html",[422,0.97,1940,2.642]],["body/modules/StopsRoutingModule.html",[3,0.2,4,0.223,5,0.156,26,0.015,56,0.299,58,0.269,77,0.246,78,0.05,104,0.01,105,0.012,106,0.01,107,0.914,333,2.249,334,2.01,396,1.441,424,1.942,429,2.1,446,2.185,449,2.63,523,1.734,526,3.785,527,4.262,528,3.262,535,3.151,1602,3.151,1855,4.077,1902,4.443,1903,4.443,1904,4.443,1940,4.555,1944,4.555,1945,4.933]],["title/components/ToolbarSearchBoxComponent.html",[107,0.638,335,1.305]],["body/components/ToolbarSearchBoxComponent.html",[3,0.097,4,0.108,5,0.076,7,0.256,8,0.756,9,1.103,20,0.539,23,1.141,25,1.057,26,0.015,27,1.019,28,0.665,29,0.904,32,1.104,33,1.722,37,1.595,56,0.266,58,0.131,65,0.874,66,0.841,67,0.874,68,0.56,77,0.119,78,0.024,79,0.626,80,0.778,87,1.14,104,0.005,105,0.007,106,0.005,107,0.81,108,0.943,109,1.605,110,1.105,111,1.105,112,1.105,113,1.105,115,1.099,116,2.793,117,0.907,118,2.061,119,2.163,120,1.427,122,1.427,124,0.914,131,3.115,134,1.427,140,1.304,145,2.781,156,0.781,157,0.65,161,1.451,162,0.943,163,0.907,168,2.781,177,1.595,179,2.652,189,2.875,191,0.98,192,1.937,193,1.257,216,1.529,217,1.979,263,0.65,297,0.7,298,1.605,299,1.672,300,0.674,301,2.25,302,1.105,303,1.105,304,0.907,305,0.943,306,1.105,307,0.943,308,1.605,309,1.672,310,0.943,311,0.98,312,1.105,313,0.907,314,1.105,315,0.943,316,0.848,317,1.019,318,1.105,319,0.907,320,1.105,321,0.874,322,0.98,323,1.105,324,0.943,325,0.907,326,0.907,327,1.105,328,0.943,329,1.105,330,0.907,331,1.227,332,1.672,333,0.907,334,0.811,335,1.848,336,1.105,337,0.874,338,0.98,339,0.943,340,0.874,341,0.907,342,1.105,343,1.105,344,0.874,345,1.105,346,0.874,347,1.105,348,0.907,349,1.061,350,1.105,395,0.907,440,2.811,471,1.837,491,0.539,502,1.481,523,0.841,578,1.861,583,2.076,610,1.019,611,0.943,657,1.537,774,3.624,783,2.296,786,4.877,813,3.624,976,1.719,993,1.202,1056,2.449,1092,1.618,1179,3.733,1188,2.995,1206,3.347,1207,3.264,1296,2.156,1331,3.264,1343,2.394,1349,4.732,1358,2.156,1360,2.156,1369,3.264,1417,2.156,1427,2.156,1428,4.373,1429,3.624,1592,3.264,1743,1.837,1967,6.476,1968,5.032,1969,6.029,1970,5.032,1971,5.032,1972,4.171,1973,5.612,1974,5.612,1975,4.171,1976,5.032,1977,2.755,1978,4.171,1979,4.171,1980,2.755,1981,2.755,1982,2.755,1983,2.755,1984,2.755,1985,4.171,1986,5.612,1987,2.755,1988,5.032,1989,4.171,1990,2.755,1991,2.755,1992,5.032,1993,2.755,1994,4.171,1995,2.755,1996,2.755,1997,4.171,1998,2.755,1999,2.755,2000,2.755,2001,2.755,2002,4.171,2003,2.755,2004,2.755,2005,2.755,2006,2.755,2007,2.755,2008,2.755,2009,2.755,2010,2.755,2011,2.755,2012,2.755,2013,4.171,2014,5.032,2015,5.032,2016,4.171,2017,4.171,2018,5.612,2019,4.171,2020,4.171,2021,4.171,2022,4.171,2023,4.171,2024,4.171,2025,4.171,2026,2.755]],["title/components/TripPassagesComponent.html",[107,0.638,337,1.256]],["body/components/TripPassagesComponent.html",[1,2.141,3,0.069,4,0.077,5,0.054,7,0.182,8,0.579,9,1.044,17,1.705,20,0.384,23,1.095,25,0.602,26,0.015,27,0.895,28,0.567,29,0.514,30,1.535,32,1.26,33,1.092,35,4.16,37,1.475,56,0.227,58,0.093,65,0.622,66,0.599,67,0.622,68,0.399,71,3.661,77,0.138,78,0.017,79,0.446,80,1.053,87,1.501,104,0.003,105,0.006,106,0.003,107,0.825,108,0.671,109,1.229,110,0.787,111,0.787,112,0.787,113,0.787,115,0.841,117,0.646,118,1.959,119,2.065,120,1.092,122,1.092,124,0.7,130,0.856,134,1.092,140,0.732,156,1.145,157,0.953,163,0.646,174,1.535,177,1.012,179,2.296,188,1.224,189,2.526,191,0.698,192,0.755,201,2.499,204,1.033,207,1.224,210,1.135,211,1.224,225,2.775,228,2.692,253,0.895,263,0.953,270,1.224,293,1.308,297,0.498,298,1.229,299,1.28,300,0.48,301,1.866,302,0.787,303,0.787,304,0.646,305,0.671,306,0.787,307,0.671,308,1.229,309,1.28,310,0.671,311,1.953,312,0.787,313,0.646,314,0.787,315,0.671,316,0.946,317,1.493,318,0.787,319,0.646,320,0.787,321,0.622,322,0.698,323,0.787,324,0.671,325,0.646,326,1.051,327,0.787,328,0.671,329,0.787,330,0.646,331,1.188,332,1.28,333,0.646,334,0.577,335,0.646,336,0.787,337,1.475,338,2.281,339,2.194,340,0.622,341,0.646,342,0.787,343,0.787,344,0.622,345,0.787,346,0.622,347,0.787,348,0.646,349,0.755,350,0.787,353,2.064,355,0.82,359,2.775,387,1.092,396,0.498,405,3.103,416,2.499,420,2.293,491,1.353,502,0.94,507,1.033,509,0.856,510,0.671,523,0.599,533,3.973,542,1.033,547,1.987,555,1.394,564,1.152,571,2.519,572,1.992,578,1.493,580,4.298,583,1.721,598,2.023,601,1.821,608,0.646,610,0.726,611,1.381,615,1.409,624,2.499,657,1.233,661,2.499,671,1.992,680,4.607,686,1.181,699,3.342,758,1.308,759,1.535,864,3.769,868,1.762,875,1.842,894,1.992,982,0.895,993,2.396,1075,0.983,1084,2.9,1085,1.409,1086,1.705,1087,4.883,1088,3.342,1089,3.509,1090,0.937,1091,1.535,1092,1.152,1093,1.705,1094,1.089,1095,1.409,1096,1.535,1097,1.535,1098,1.535,1099,1.992,1100,1.535,1101,2.499,1102,4.531,1103,3.509,1104,2.775,1105,3.509,1106,2.293,1107,3.509,1108,3.509,1109,3.509,1110,1.705,1111,2.775,1112,1.705,1113,1.705,1114,1.705,1115,2.775,1116,2.9,1117,3.509,1118,3.509,1119,1.705,1120,4.044,1121,2.775,1122,2.775,1123,3.509,1124,1.705,1125,4.157,1126,3.509,1127,5.422,1128,1.705,1129,1.705,1130,2.775,1131,2.775,1132,2.775,1133,3.509,1134,2.775,1135,1.705,1136,1.705,1137,2.775,1138,4.044,1139,1.705,1140,2.775,1141,2.775,1142,2.129,1143,1.705,1144,1.535,1145,1.705,1146,1.705,1147,1.705,1148,1.705,1149,1.705,1150,1.705,1151,1.705,1152,1.705,1153,1.705,1154,1.705,1155,1.705,1156,1.705,1157,1.705,1158,2.775,1159,2.775,1160,2.499,1161,1.705,1162,1.705,1163,1.705,1369,4.298,1444,1.705,1456,1.705,1458,1.705,1512,2.129,1592,1.535,1606,1.409,1657,2.775,1710,1.705,1794,2.775,1797,1.705,1966,1.705,2027,3.193,2028,1.962,2029,1.962,2030,1.962,2031,1.962,2032,1.962,2033,1.962,2034,1.962,2035,1.962,2036,1.962,2037,1.962,2038,1.962,2039,1.962,2040,1.962,2041,1.962,2042,1.962,2043,1.962,2044,1.962,2045,1.962,2046,1.962,2047,1.962,2048,3.193,2049,3.193,2050,1.962,2051,3.193,2052,3.193,2053,3.193,2054,3.193,2055,3.193,2056,3.193,2057,4.038,2058,3.193,2059,3.193,2060,1.962,2061,3.193,2062,3.193,2063,1.962,2064,3.193,2065,3.193,2066,3.193,2067,3.193,2068,3.193,2069,3.193,2070,3.193,2071,3.193,2072,3.193,2073,3.193,2074,3.193,2075,3.193,2076,3.193,2077,3.193,2078,3.193,2079,1.962,2080,1.962,2081,1.962,2082,1.962,2083,1.962,2084,1.962,2085,1.962,2086,1.962,2087,1.962]],["title/modules/TripPassagesModule.html",[422,0.97,2088,2.846]],["body/modules/TripPassagesModule.html",[3,0.17,4,0.19,5,0.132,26,0.015,56,0.31,58,0.229,77,0.209,78,0.043,104,0.008,105,0.011,106,0.008,162,1.653,297,1.227,305,1.653,337,2.408,338,2.424,339,1.653,344,2.408,422,1.182,424,1.653,425,2.02,426,3.109,427,2.204,428,2.819,429,1.787,442,2.819,443,2.204,444,2.02,446,2.379,449,2.379,450,2.952,463,3.221,533,2.682,607,3.221,627,5.064,634,3.096,635,2.307,858,4.121,864,2.544,866,3.47,1322,3.781,1419,4.439,1422,4.439,1469,4.739,1851,4.838,2088,5.837,2089,4.198,2090,4.198,2091,4.198,2092,5.064,2093,4.831,2094,4.831,2095,4.831,2096,4.198,2097,4.121,2098,4.198]],["title/guards/TripPassagesResolver.html",[1806,2.846,2097,2.642]],["body/guards/TripPassagesResolver.html",[0,1.994,1,2.684,3,0.175,4,0.195,5,0.136,7,0.461,8,1.14,9,1.065,20,0.972,23,0.972,25,1.185,26,0.015,27,0.972,28,0.616,29,1.013,32,0.832,37,2.188,56,0.3,57,3.097,58,0.236,66,1.92,68,1.009,77,0.215,78,0.044,79,1.128,80,0.972,87,1.356,104,0.009,105,0.011,106,0.009,115,1.307,189,3.39,366,4.192,491,0.972,523,1.516,524,4.192,533,3.831,542,2.613,610,1.836,864,3.634,1090,2.37,1094,2.755,1099,3.097,1142,3.309,1144,3.885,1602,4.028,1808,3.565,1815,3.565,1817,4.921,1818,5.679,1819,5.402,1820,5.679,1827,3.885,2097,4.192,2099,4.313,2100,4.963,2101,4.963,2102,4.963]],["title/modules/TripPassagesRoutingModule.html",[422,0.97,2092,2.642]],["body/modules/TripPassagesRoutingModule.html",[3,0.197,4,0.219,5,0.153,26,0.015,35,3.723,56,0.297,58,0.265,77,0.242,78,0.049,104,0.01,105,0.012,106,0.01,107,0.899,337,2.144,338,2.405,339,1.91,387,1.91,396,1.418,424,1.91,429,2.065,446,2.149,449,2.604,523,1.705,526,3.723,527,4.22,528,3.23,533,3.099,535,3.099,686,2.065,864,2.94,1102,4.37,1602,3.099,1681,4.37,1902,4.37,1903,4.37,2092,4.51,2096,4.852,2097,4.51,2098,4.852]],["title/injectables/UserLocationService.html",[0,1.256,441,1.589]],["body/injectables/UserLocationService.html",[0,1.715,2,2.192,3,0.139,4,0.155,5,0.108,7,0.367,8,0.98,9,1.119,20,1.207,23,1.157,25,0.744,26,0.015,27,0.611,28,0.681,29,0.636,32,0.662,37,2.203,56,0.242,58,0.187,68,0.803,75,2.079,76,1.978,77,0.171,78,0.035,80,1.074,104,0.007,105,0.009,106,0.007,124,1.185,134,1.85,140,0.98,156,1.97,157,1.639,177,2.103,194,2.579,353,1.351,387,1.351,395,2.031,396,1.373,441,2.169,491,1.405,502,2.044,524,3.606,547,2.031,549,2.473,598,3.48,610,1.461,740,2.836,894,4.139,895,3.432,907,3.801,993,3.131,1075,2.709,1090,1.886,1091,3.091,1092,2.319,1280,2.464,1758,3.432,2103,3.432,2104,6.168,2105,6.168,2106,6.168,2107,6.168,2108,5.408,2109,6.168,2110,5.408,2111,5.408,2112,6.634,2113,3.949,2114,6.168,2115,5.408,2116,5.408,2117,3.949,2118,3.949,2119,5.408,2120,3.949,2121,3.949,2122,3.949,2123,3.949,2124,3.949,2125,3.949,2126,3.949,2127,3.949,2128,3.949,2129,3.949,2130,3.949,2131,3.949,2132,3.949,2133,3.949,2134,3.949,2135,3.949,2136,3.949,2137,3.949,2138,5.408,2139,3.949,2140,3.949,2141,3.949,2142,3.949,2143,3.949,2144,3.949,2145,3.949]],["title/classes/UserLocationSubscriber.html",[78,0.035,1007,2.327]],["body/classes/UserLocationSubscriber.html",[3,0.121,4,0.135,5,0.094,7,0.319,8,0.888,9,1.073,20,0.671,23,0.757,25,0.923,26,0.015,27,0.757,28,0.692,29,0.789,32,0.574,53,1.717,56,0.269,58,0.163,68,0.697,77,0.306,78,0.043,79,1.114,80,0.964,92,1.717,95,1.717,97,1.637,99,1.637,104,0.006,105,0.009,106,0.006,115,0.903,140,1.036,157,0.809,161,1.805,194,2.389,210,1.219,240,3.565,253,2.234,263,0.809,316,1.162,395,1.613,396,1.244,408,2.579,413,1.563,439,1.811,441,2.292,473,1.637,491,1.119,501,3.356,502,1.008,507,1.805,510,1.955,514,1.637,547,2.325,549,1.964,578,1.811,583,1.268,590,1.805,591,2.138,593,2.013,601,1.742,608,1.882,611,1.173,657,2.095,686,1.268,771,2.138,783,2.234,788,1.637,868,2.137,875,1.563,878,1.717,879,2.862,881,1.903,891,2.453,899,1.563,900,1.374,906,1.717,907,1.717,908,2.844,911,1.742,912,1.268,928,1.903,930,1.903,942,2.719,963,1.903,993,1.496,994,3.172,995,1.903,996,2.285,997,2.285,998,1.903,999,1.805,1000,2.013,1001,2.138,1002,2.719,1003,3.266,1004,2.719,1005,2.876,1006,1.903,1007,2.876,1008,3.266,1009,2.876,1010,2.285,1011,2.285,1012,2.285,1013,3.81,1014,1.805,1015,2.285,1016,2.285,1017,3.266,1018,2.013,1019,2.285,1020,2.285,1021,2.285,1022,2.285,1023,2.285,1024,2.285,1025,2.285,1026,2.285,1027,2.285,1028,3.266,1029,2.285,1030,2.285,1031,2.285,1032,2.013,1033,2.285,1034,2.138,1035,2.138,1036,2.285,1037,2.285,1038,2.285,1039,2.285,1040,2.285,1041,2.285,1042,2.285,1043,2.138,1044,2.285,1045,2.138,1046,2.285,1047,2.285,1048,2.285,1049,3.266,1050,2.285,1051,2.285,1052,3.266,1053,2.285,1054,2.285,1055,2.285,1056,2.013,1057,3.81,1058,2.285,1059,2.285,1060,3.266,1061,2.285,1062,2.285,1063,2.285,1064,2.285,1065,2.285,1066,2.285,1067,2.285,1068,3.266,1069,2.285,1070,3.266,1071,2.285,1072,2.285,1073,2.285,1074,2.285,1075,1.717,1076,2.285,1077,2.285,1078,2.285,1079,2.285,1080,3.266,1081,2.285,1082,2.285,1083,2.285,2146,3.428,2147,3.428,2148,3.428]],["title/classes/VehicleLoadSubscriber.html",[78,0.035,1209,2.846]],["body/classes/VehicleLoadSubscriber.html",[1,1.819,3,0.094,4,0.104,5,0.073,7,0.247,8,0.735,9,1.041,20,0.519,23,0.627,25,0.764,26,0.015,27,0.627,28,0.482,29,0.653,32,0.445,37,1.285,53,2.03,55,1.655,56,0.287,58,0.126,63,2.528,64,4.641,65,0.841,66,0.81,67,0.841,68,0.539,73,2.077,74,1.655,77,0.176,78,0.036,79,0.603,80,0.966,92,1.329,94,3.47,95,1.329,97,1.267,99,1.267,104,0.005,105,0.007,106,0.005,115,0.699,118,0.699,130,1.769,140,1.075,162,0.908,177,0.841,189,2.146,194,2.056,197,1.329,209,3.172,221,2.077,258,2.077,260,2.077,263,0.626,266,2.25,300,0.992,316,0.539,331,1.447,334,0.781,346,1.745,353,0.908,387,1.883,396,1.859,408,2.134,439,1.499,440,2.03,441,2.207,470,2.077,471,1.769,472,2.077,473,1.267,491,1.273,514,1.267,520,1.769,523,0.81,547,0.874,549,1.064,555,1.769,578,1.499,583,0.981,601,1.441,606,1.906,607,1.769,608,1.619,610,0.981,618,2.077,646,2.077,648,1.769,657,1.811,686,0.981,735,1.906,770,2.077,783,1.849,832,2.911,867,1.655,868,1.769,871,1.769,874,1.906,875,1.21,877,1.655,878,2.757,879,2.03,891,2.757,899,1.21,900,2.378,901,1.655,903,1.655,906,1.329,908,1.849,911,1.749,912,0.981,915,1.769,935,1.769,936,1.906,950,2.702,953,2.911,954,1.769,957,1.769,959,3.279,962,1.769,965,2.702,967,1.906,969,1.769,970,1.769,971,1.769,972,1.769,974,1.769,975,1.769,976,1.655,979,1.906,982,1.21,984,1.769,998,1.473,999,2.134,1005,2.38,1006,3.291,1014,2.134,1018,1.558,1032,1.558,1090,1.267,1092,1.558,1094,1.473,1106,2.911,1179,2.463,1180,3.532,1181,2.306,1182,2.306,1186,2.306,1188,1.906,1189,2.306,1190,3.522,1193,2.306,1195,2.306,1198,2.306,1199,2.306,1201,2.306,1206,2.73,1207,3.172,1208,2.702,1209,2.911,1210,3.522,1211,3.522,1212,2.306,1213,3.522,1214,2.306,1215,2.306,1216,2.306,1217,2.306,1218,2.306,1219,2.306,1220,2.306,1221,2.306,1222,3.522,1223,2.306,1224,2.306,1225,3.522,1226,2.306,1227,2.306,1228,2.306,1229,2.077,1230,2.077,1231,2.306,1232,3.849,1233,2.306,1234,2.306,1235,2.306,1236,2.306,1237,4.273,1238,2.306,1239,2.306,1240,2.306,1241,3.522,1242,2.306,1243,2.306,1244,2.306,1245,2.306,1246,2.306,1247,2.306,1248,2.306,1249,3.522,1250,2.306,1251,2.306,1252,2.306,1253,2.306,1254,2.306,1255,3.522,1256,2.306,1257,2.306,1258,2.306,1259,2.306,1260,2.306,1261,2.306,1262,2.306,1263,2.306,1264,2.306,1265,4.273,1266,2.306,1267,3.522,1268,2.306,1269,3.522,1270,1.906,1271,2.306,1272,2.306,1273,2.306,1274,2.306,1275,2.306,1276,2.306,1277,2.306,1278,2.306,1279,2.306,1280,1.655,1281,2.306,1282,3.522,1283,3.522,1284,3.522,1285,2.306,1286,2.306,1287,2.306,1288,2.306,1289,4.273,1290,2.306,1291,2.306,1292,2.306,1293,2.306,1294,2.306,1295,2.306,1296,2.077,1297,2.306,1298,2.306,1299,3.522,1300,2.306,1301,2.306,1302,2.306,1303,2.306,1304,2.306,1305,2.306,1306,2.306,1307,2.306,1308,2.306,1309,2.306,1310,2.306,1311,2.306,1312,2.306,1313,2.306,1314,2.306,1315,2.306,1316,2.306,2149,2.653,2150,2.653,2151,2.653,2152,2.653]],["title/coverage.html",[2153,4.71]],["body/coverage.html",[0,2.191,1,1.18,5,0.087,6,2.773,26,0.015,28,0.313,53,1.598,55,1.991,69,4.275,78,0.065,104,0.006,105,0.008,106,0.006,107,1.241,108,1.092,114,2.773,137,1.874,163,1.051,197,3.353,263,1.949,300,1.569,304,1.051,307,1.092,310,1.092,311,1.135,313,1.051,315,1.092,317,1.72,319,1.051,321,1.012,324,1.092,325,1.051,326,1.531,328,1.092,330,1.051,333,1.051,335,1.051,337,1.012,341,1.051,344,1.012,346,1.012,348,1.051,351,2.292,352,3.341,353,1.092,354,2.773,371,1.874,439,1.18,440,1.598,441,1.279,445,3.64,466,3.101,474,2.497,478,2.497,489,3.341,490,3.341,497,2.292,502,0.939,510,2.364,513,2.292,515,2.497,516,3.341,521,2.292,533,3.047,546,2.497,550,2.773,551,2.773,575,2.497,576,2.497,577,2.773,638,3.64,639,3.64,670,2.773,767,2.773,864,3.376,865,3.64,866,3.341,867,4,903,1.991,907,1.598,908,1.455,910,2.292,986,2.292,987,2.773,994,3.559,995,3.559,1002,1.771,1004,1.771,1007,1.874,1084,2.292,1085,3.341,1179,3.461,1180,3.341,1208,2.127,1209,2.292,1323,3.64,1351,2.292,1425,2.497,1426,2.497,1427,3.64,1477,2.773,1478,2.773,1494,3.341,1495,3.341,1496,3.64,1497,1.874,1504,2.292,1540,2.773,1567,3.64,1568,3.64,1578,2.292,1596,2.292,1597,3.64,1635,2.773,1644,2.292,1678,2.773,1696,3.659,1697,3.64,1734,2.773,1743,3.101,1806,3.942,1807,2.127,1809,2.773,1857,2.292,1858,3.64,1904,2.497,1944,2.127,1946,2.773,1957,2.497,1958,2.292,1967,2.773,2097,2.127,2099,2.773,2103,2.773,2153,2.773,2154,2.773,2155,3.191,2156,3.191,2157,4.651,2158,4.651,2159,6.032,2160,4.651,2161,7.519,2162,7.222,2163,3.191,2164,4.042,2165,2.773,2166,2.773,2167,4.042,2168,6.032,2169,6.694,2170,2.773,2171,3.191,2172,3.191,2173,3.191,2174,7.082,2175,6.412,2176,4.651,2177,3.191,2178,5.489,2179,3.191,2180,3.191,2181,3.191,2182,3.191,2183,3.191,2184,3.191,2185,4.651,2186,3.191,2187,3.191,2188,3.191,2189,3.191,2190,3.191,2191,2.497,2192,3.191,2193,4.651,2194,2.497,2195,2.497,2196,2.773,2197,2.773,2198,2.773,2199,2.773,2200,2.773,2201,3.191,2202,3.191]],["title/dependencies.html",[425,1.994,1647,2.585]],["body/dependencies.html",[26,0.015,58,0.259,65,1.731,66,1.668,67,1.731,68,1.11,104,0.009,105,0.012,106,0.009,162,1.868,266,3.031,381,4.792,425,2.283,455,5.799,459,4.745,460,4.745,523,1.668,635,2.608,717,4.745,900,2.676,1229,4.274,1230,4.274,1417,4.274,2203,5.461,2204,8.065,2205,5.461,2206,6.673,2207,5.461,2208,5.461,2209,5.461,2210,5.461,2211,5.461,2212,5.461,2213,5.461,2214,5.461,2215,5.461,2216,6.673,2217,5.461,2218,5.461,2219,5.461,2220,5.461,2221,5.461,2222,5.461,2223,5.461,2224,5.461,2225,5.461,2226,5.461,2227,5.461,2228,5.461]],["title/miscellaneous/enumerations.html",[2229,1.833,2230,4.144]],["body/miscellaneous/enumerations.html",[3,0.194,7,0.512,26,0.014,28,0.54,104,0.01,105,0.012,106,0.01,157,1.94,210,2.571,253,3.299,263,1.299,326,1.812,353,2.294,377,3.954,391,4.816,420,3.954,489,3.954,490,4.816,508,4.308,509,2.926,533,3.056,564,3.232,864,2.898,994,3.056,995,3.722,998,3.722,999,2.898,1000,3.232,1001,3.434,1075,2.757,1085,4.816,1087,5.248,1095,3.954,1096,4.308,1097,4.308,1098,4.308,1099,3.434,1100,4.308,2229,3.056,2230,4.783,2231,4.308,2232,4.783,2233,5.505]],["title/miscellaneous/functions.html",[2229,1.833,2234,4.144]],["body/miscellaneous/functions.html",[5,0.169,7,0.574,26,0.013,32,1.036,104,0.011,105,0.012,106,0.011,119,2.037,699,4.438,991,4.789,992,4.438,1644,5.454,1647,4.836,1664,4.836,2194,4.836,2195,5.622,2229,3.43,2231,4.836,2234,5.369,2235,6.179]],["title/index.html",[7,0.307,2236,3.303,2237,3.303]],["body/index.html",[5,0.166,26,0.012,87,1.655,104,0.011,105,0.012,106,0.011,266,3.361,294,4.739,355,2.532,481,4.739,542,3.188,648,4.037,1035,3.778,1664,4.739,2154,6.169,2238,7.099,2239,7.531,2240,7.099,2241,6.055,2242,6.055,2243,6.055,2244,6.055,2245,6.055,2246,6.055,2247,6.055,2248,7.099,2249,6.055,2250,6.055,2251,6.055]],["title/modules.html",[424,1.854]],["body/modules.html",[26,0.012,104,0.01,105,0.012,106,0.01,381,5.863,423,3.954,424,1.883,435,3.434,436,3.434,437,3.434,438,3.434,627,3.67,852,3.954,856,3.67,1469,3.434,1532,3.67,1845,3.954,1849,3.67,1936,3.954,1940,3.67,2088,3.954,2092,3.67,2252,8.163,2253,8.163,2254,8.288,2255,7.716,2256,7.716]],["title/overview.html",[2257,4.71]],["body/overview.html",[2,1.99,26,0.014,104,0.006,105,0.009,106,0.006,108,2.447,109,1.38,163,1.929,297,0.91,304,1.929,307,2.004,310,2.004,313,2.356,315,2.447,319,1.929,321,2.268,324,2.004,325,2.356,328,2.447,330,1.929,333,1.929,335,2.356,337,1.857,340,1.137,341,2.356,344,1.857,346,2.268,348,1.929,371,3.44,422,0.878,423,5.808,424,1.227,425,1.499,426,1.635,427,1.635,428,1.635,429,1.326,430,3.116,431,3.116,432,3.116,433,3.116,434,3.116,435,3.655,436,4.343,437,4.795,438,4.343,439,2.167,440,2.934,441,2.349,442,2.307,443,1.635,444,1.499,509,1.565,514,1.712,528,1.712,545,1.99,627,4.642,628,3.116,629,3.116,630,3.116,832,2.575,852,5.247,853,3.116,854,3.116,855,3.116,856,3.906,1043,2.237,1075,1.796,1317,3.116,1318,3.116,1319,3.116,1411,3.116,1412,3.116,1413,3.116,1469,4.463,1470,3.116,1471,3.116,1472,3.116,1532,4.642,1533,3.116,1534,3.116,1535,3.116,1673,3.116,1674,3.116,1675,3.116,1808,2.575,1845,5.667,1846,3.116,1847,3.116,1848,3.116,1849,3.906,1936,5.247,1937,3.116,1938,3.116,1939,3.116,1940,3.906,2088,5.52,2089,3.116,2090,3.116,2091,3.116,2092,3.906,2257,3.116,2258,3.585,2259,3.585,2260,4.394]],["title/routes.html",[528,2.589]],["body/routes.html",[26,0.013,104,0.011,105,0.013,106,0.011,528,3.098]],["title/miscellaneous/typealiases.html",[2229,1.833,2261,4.769]],["body/miscellaneous/typealiases.html",[7,0.529,26,0.013,28,0.558,71,4.561,104,0.01,105,0.012,106,0.01,119,1.613,366,3.793,516,5.679,521,5.268,546,4.452,991,3.793,992,4.913,994,3.158,995,3.797,1002,3.158,1004,3.158,1006,3.797,1497,4.643,1503,4.452,1958,4.086,2191,4.452,2194,4.452,2195,5.354,2229,3.158,2231,4.452,2232,4.943,2262,5.689,2263,5.944,2264,6.766,2265,5.944,2266,5.944,2267,5.944,2268,6.84,2269,5.689]],["title/miscellaneous/variables.html",[2229,1.833,2270,4.144]],["body/miscellaneous/variables.html",[7,0.271,26,0.015,27,0.451,28,0.715,33,1.782,37,1.651,69,4.789,80,1.067,104,0.009,105,0.008,106,0.005,156,2.093,157,1.742,168,2.903,177,1.38,253,2.956,263,0.688,292,2.716,298,1.123,322,1.037,353,1.782,358,2.535,379,3.127,387,2.526,395,2.134,396,0.741,435,1.82,436,1.82,437,1.82,438,1.82,439,1.079,445,2.283,447,2.535,450,1.393,451,2.095,452,2.535,454,2.535,456,2.535,474,3.408,475,2.535,476,2.095,477,2.535,478,3.408,479,2.535,480,2.535,481,2.283,482,2.535,483,2.535,509,1.9,516,3.127,547,1.715,549,1.746,555,2.697,572,3.603,735,2.095,751,3.783,752,4.526,900,1.746,903,2.716,954,2.903,957,1.945,986,4.438,988,5.37,989,5.37,990,5.37,991,4.12,1208,2.903,1449,5.019,1497,3.391,1500,2.283,1644,4.438,1730,2.535,1833,3.783,1843,2.535,1844,4.526,1957,3.408,1958,2.095,2164,2.535,2165,4.526,2166,4.526,2167,2.535,2170,3.783,2191,2.283,2196,2.535,2197,2.535,2198,2.535,2199,2.535,2200,2.535,2229,1.619,2260,3.783,2263,2.535,2264,2.535,2265,2.535,2266,2.535,2267,2.535,2270,2.535,2271,4.354,2272,2.917,2273,2.917,2274,2.917,2275,2.917,2276,2.917,2277,4.354,2278,4.354,2279,7.65,2280,5.776,2281,5.776,2282,4.354,2283,4.354,2284,4.354,2285,2.917,2286,2.917,2287,2.917,2288,4.354,2289,4.354,2290,4.354,2291,4.354,2292,4.354,2293,4.354,2294,4.354,2295,4.354,2296,2.917,2297,2.917,2298,4.354,2299,2.917,2300,2.917,2301,4.354,2302,4.354,2303,4.354,2304,2.917,2305,5.776,2306,2.917,2307,2.917,2308,2.917,2309,2.917,2310,2.917,2311,2.917,2312,2.917,2313,2.917,2314,2.917,2315,2.917,2316,4.354,2317,2.917,2318,2.917,2319,2.917,2320,2.917,2321,2.917,2322,4.354,2323,2.917,2324,2.917,2325,2.917,2326,2.917,2327,2.917,2328,2.917,2329,2.917,2330,2.917,2331,2.917,2332,2.917,2333,2.917,2334,2.917,2335,2.917,2336,2.917,2337,2.917,2338,2.917,2339,2.917,2340,2.917,2341,2.917,2342,2.917,2343,2.917,2344,2.917,2345,2.917,2346,2.917,2347,2.917,2348,2.917,2349,2.917,2350,2.917,2351,2.917,2352,2.917,2353,2.917,2354,2.917,2355,2.917]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.1",{"_index":1074,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0.1.7",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["0.13.8",{"_index":2210,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":931,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["0.9",{"_index":1073,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0.9.0",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":1070,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["0px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/RouteListComponent.html":{}}}],["1",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["1.1",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.2.1",{"_index":2211,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":832,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"overview.html":{}}}],["100",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["1000",{"_index":1758,"title":{},"body":{"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{}}}],["10000",{"_index":2115,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["10001",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":1447,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["111111",{"_index":836,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["12",{"_index":751,"title":{},"body":{"components/DepartureListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["12px",{"_index":1458,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["15",{"_index":2259,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":1803,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["16",{"_index":2258,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/TripPassagesComponent.html":{}}}],["18",{"_index":1043,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"overview.html":{}}}],["180",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1].name.charat(0",{"_index":1921,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["1px",{"_index":1668,"title":{},"body":{"components/SidebarComponent.html":{}}}],["1s",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["2",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2\",role=\"status",{"_index":2077,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["2.24.0",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1622,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["200",{"_index":619,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["2000",{"_index":971,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["207",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["22",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":752,"title":{},"body":{"components/DepartureListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["24px",{"_index":2080,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["250px",{"_index":565,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["25px",{"_index":1800,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["3",{"_index":509,"title":{},"body":{"injectables/AppNotificationService.html":{},"components/CommonErrorComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2182,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":737,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["30px",{"_index":1802,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["32",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["3600000",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["4",{"_index":564,"title":{},"body":{"components/CommonErrorComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4/11",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2171,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":957,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":421,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["400px",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["404",{"_index":1099,"title":{},"body":{"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"miscellaneous/enumerations.html":{}}}],["42px",{"_index":1237,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["439px",{"_index":1392,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["44",{"_index":2170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":1075,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/15",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1734,"title":{},"body":{"components/StopInfoComponent.html":{},"coverage.html":{}}}],["500",{"_index":420,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["5000",{"_index":1106,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["5px",{"_index":1450,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["6.5.1",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":740,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{}}}],["64px",{"_index":570,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["68",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2260,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.2.14",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["799",{"_index":1459,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["8",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1445,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["8;base64,pd94bwwgdmvyc2lvbj0i",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8;base64,pd94bwwgdmvyc2lvbj0ims4wiib",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["90",{"_index":967,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["99",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":1652,"title":{},"body":{"components/SidebarComponent.html":{}}}],["a(*ngfor=\"let",{"_index":2062,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["a([routerlink]=\"['/passages",{"_index":753,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["a([routerlink]=\"[\\'/passages",{"_index":765,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":1917,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["a.stopid",{"_index":1762,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["a2u9imjsywnriibzdhjva2utd2lkdgg9ijeunsigdgv4dc1hbmnob3i9im1p",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a2u9imjsywnriibzdhjva2utd2lkdgg9ijeunsigdgv4dc1hbmnob3i9im1pzgrszsi+sdwv",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a[1",{"_index":1770,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["absolute",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["abstract",{"_index":1012,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["accessors",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/RouteListComponent.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["acquired",{"_index":1253,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["action",{"_index":560,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["actions",{"_index":1520,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["activated",{"_index":1953,"title":{},"body":{"guards/StopsResolver.html":{}}}],["activatedroute",{"_index":1088,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["activatedroutesnapshot",{"_index":1818,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["actual",{"_index":743,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["actual_component",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["addlayer",{"_index":1164,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["addlayer(layer",{"_index":1077,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addmarker",{"_index":874,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["addto(this.map",{"_index":1047,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addto(this.userlocationlayer",{"_index":1068,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["addvehiclemarker",{"_index":1183,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["addvehiclemarker(vehicle",{"_index":1193,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["afterviewinit",{"_index":868,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["agreed",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["agreed.tripid",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["alert",{"_index":508,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["allowed",{"_index":1256,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["alt",{"_index":970,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["always",{"_index":386,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["angular",{"_index":1664,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/animations",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":635,"title":{},"body":{"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["angular/compiler",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1417,"title":{},"body":{"modules/MainToolbarModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/material/sidenav",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/theming",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":2209,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":523,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["angular/service",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularversion",{"_index":1640,"title":{},"body":{"components/SidebarComponent.html":{}}}],["angularversion}}.info",{"_index":1672,"title":{},"body":{"components/SidebarComponent.html":{}}}],["animate",{"_index":975,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["animation",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["api.service",{"_index":1608,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["api/geo/stops",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/geo/vehicle",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/geo/vehicles",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/settings",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/stop",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/trip",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["api/vehicle",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiendpoint",{"_index":988,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["app",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["app.component",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.pug",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":108,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdrawable",{"_index":768,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["appdrawable]'},{'name",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["appear",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["apperrorhandler",{"_index":351,"title":{"injectables/AppErrorHandler.html":{}},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appinitservice",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appinitservice.load",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":423,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnotificationservice",{"_index":371,"title":{"injectables/AppNotificationService.html":{}},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{},"overview.html":{}}}],["appnotificationtype",{"_index":391,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"miscellaneous/enumerations.html":{}}}],["appnotificationtype.error",{"_index":406,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["apppreloadingstrategy",{"_index":513,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutes",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":435,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appversion",{"_index":992,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["arg",{"_index":1600,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["args",{"_index":1051,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["arguments",{"_index":787,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["aria",{"_index":1369,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["array.isarray(vehicles.vehicles",{"_index":1218,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["arrival",{"_index":701,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["arrow_back",{"_index":1399,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["async\",[value]=\"option",{"_index":2024,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["atleast",{"_index":646,"title":{},"body":{"components/DepartureListComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["attachment",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["attribution",{"_index":1034,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["auto",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["autocomplete",{"_index":1968,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["autocomplete(#auto=\"matautocomplete\",[displaywith]=\"displayfn\",(optionselected)=\"onstopselected($event",{"_index":2021,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["available",{"_index":2256,"title":{},"body":{"modules.html":{}}}],["awr0ad0ims41iib0zxh0lwfuy2hvcj0ibwlkzgxlij5ipc90zxh0pg0kpc9zdmc",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awr0ad0imtawiibozwlnahq9ijewmcigzmlsbd0ii2zmziivpg0kphrlehqg",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":1045,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/StopsInfoComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["b2xkidmychggc2fucy1zzxjpzjsgy29sb3i6chvycgxloyb9pc9zdhlszt4n",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b3bhy2l0et0iljuipg0kphjly3qged0iltewiib5psitmtaiihdpzhropsix",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":1283,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["backend",{"_index":2242,"title":{},"body":{"index.html":{}}}],["background",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/TripPassagesComponent.html":{}}}],["background:#999999",{"_index":567,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["background:#b00020",{"_index":1798,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["bar",{"_index":1231,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bar(*ngif=\"loading\",mode=\"indeterminate\",color=\"accent",{"_index":1588,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["baseurl",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{}}}],["begin",{"_index":830,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["behaviorsubject",{"_index":598,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"injectables/SidebarService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["behaviorsubject(0",{"_index":599,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["behaviorsubject(false",{"_index":1688,"title":{},"body":{"injectables/SidebarService.html":{}}}],["behaviorsubject(undefined",{"_index":894,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["bj0ims4xiib2awv3qm94psitmiatmia3mia3miigeg1sbnm9imh0dha6ly93",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":1451,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["block",{"_index":1444,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["blur",{"_index":1430,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["blur(2px",{"_index":1462,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["bold",{"_index":759,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["boolean",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["border",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["border:1px",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bottom:0px",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["bottomleft",{"_index":1259,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bottomright",{"_index":1255,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["bounds",{"_index":55,"title":{"interfaces/Bounds.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["box",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["box'},{'name",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["box(*ngif=\"erroroccured",{"_index":1795,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["box(*ngif=\"haserror()\",aria",{"_index":2051,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["box([blur]=\"haserror()\",title=\"{{routename",{"_index":2048,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["box([blur]=\"stoplocation===undefined\",title=\"{{stopinfo?.stopname}}\",i18n",{"_index":1779,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["box.component",{"_index":1350,"title":{},"body":{"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{}}}],["box.component.pug",{"_index":1429,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.scss",{"_index":1428,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts",{"_index":1427,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:10",{"_index":1434,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:12",{"_index":1433,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:15",{"_index":1432,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["box.component.ts:16",{"_index":1993,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:17",{"_index":1991,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:20",{"_index":1990,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:22",{"_index":1995,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:25",{"_index":1978,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:30",{"_index":1996,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:37",{"_index":1981,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:44",{"_index":1984,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:48",{"_index":1987,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:56",{"_index":1980,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:59",{"_index":1983,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.component.ts:72",{"_index":1982,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["box.module.ts",{"_index":1473,"title":{},"body":{"modules/MapHeaderBoxModule.html":{}}}],["box/map",{"_index":1426,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"coverage.html":{}}}],["boxmarginhorizontal",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmarginhorizontal)}*(100vw",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmarginvertical",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["boxmaxwidth",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["break",{"_index":1581,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["breakpoint",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness(0.5",{"_index":1464,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["browse",{"_index":2254,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":2246,"title":{},"body":{"index.html":{}}}],["bus",{"_index":866,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"modules/TripPassagesModule.html":{},"coverage.html":{}}}],["button#btnsearch",{"_index":1401,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button#btnsearch(mat",{"_index":1376,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button(mat",{"_index":1521,"title":{},"body":{"components/RetryDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["button,(click)=\"closesidebar",{"_index":1655,"title":{},"body":{"components/SidebarComponent.html":{}}}],["button,(click)=\"onnoclick",{"_index":1522,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["button,(click)=\"togglesearch",{"_index":1377,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button,(click)=\"togglesidebar()\",i18n",{"_index":1368,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button,[mat",{"_index":1524,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["button,[routerlink",{"_index":1381,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.close",{"_index":1394,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.close(mat",{"_index":1380,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["button.sidebar",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["c",{"_index":1046,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["c2lhbkjsdxigaw49ilnvdxjjzudyyxboawmiihn0zerldmlhdglvbj0imyiv",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c3ryb2tlpsijmdawii8+dqo8l2c+dqo8l3n2zz4",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":2144,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["calc",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["calculatedelay",{"_index":677,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["calculatedelay(data",{"_index":683,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["calculates",{"_index":685,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["call",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"directives/DrawableDirective.html":{}}}],["canvasrenderingcontext2d",{"_index":808,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["capitalize",{"_index":2083,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["case",{"_index":727,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["catch",{"_index":356,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["catcherror",{"_index":1090,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["catcherror((err",{"_index":1280,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["catcherror(this.handleerror.bind(this",{"_index":1150,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["cc",{"_index":1038,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["center",{"_index":1241,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["child",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["children",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":1561,"title":{},"body":{"components/RouteListComponent.html":{}}}],["cjxkzwzzpg0kpgzpbhrlcibpzd0iyiiged0imciget0imci+dqo8zmvhyxvz",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":78,"title":{"classes/AppPreloadingStrategy.html":{},"classes/LeafletMapComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RetryDialogData.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["classes",{"_index":514,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/LeafletMapComponent.html":{},"classes/NavigationSubscriber.html":{},"classes/RetryDialogData.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"overview.html":{}}}],["classname",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clear",{"_index":771,"title":{},"body":{"directives/DrawableDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["cli",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["clickable",{"_index":962,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["client",{"_index":2239,"title":{},"body":{"index.html":{}}}],["close",{"_index":1397,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["close]=\"true\",cdkfocusinitial",{"_index":1525,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["closeable",{"_index":1326,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["closeable':(closeable===true",{"_index":1366,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["closeable\\':(closeable===true",{"_index":1409,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["closemat",{"_index":1671,"title":{},"body":{"components/SidebarComponent.html":{}}}],["closesidebar",{"_index":1638,"title":{},"body":{"components/SidebarComponent.html":{},"injectables/SidebarService.html":{}}}],["cluster_appmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule",{"_index":628,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule_declarations",{"_index":629,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_countdowntimermodule_exports",{"_index":630,"title":{},"body":{"modules/CountdownTimerModule.html":{},"overview.html":{}}}],["cluster_errormodule",{"_index":853,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_declarations",{"_index":854,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_imports",{"_index":855,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule",{"_index":1317,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule_declarations",{"_index":1318,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_mainmapmodule_exports",{"_index":1319,"title":{},"body":{"modules/MainMapModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule",{"_index":1411,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule_declarations",{"_index":1412,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_maintoolbarmodule_exports",{"_index":1413,"title":{},"body":{"modules/MainToolbarModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule",{"_index":1470,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule_declarations",{"_index":1471,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_mapheaderboxmodule_exports",{"_index":1472,"title":{},"body":{"modules/MapHeaderBoxModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule",{"_index":1533,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule_declarations",{"_index":1534,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_retrydialogmodule_exports",{"_index":1535,"title":{},"body":{"modules/RetryDialogModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule",{"_index":1673,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declarations",{"_index":1674,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_exports",{"_index":1675,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_stopmodule",{"_index":1846,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopmodule_declarations",{"_index":1847,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopmodule_imports",{"_index":1848,"title":{},"body":{"modules/StopModule.html":{},"overview.html":{}}}],["cluster_stopsmodule",{"_index":1937,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_declarations",{"_index":1938,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_imports",{"_index":1939,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule",{"_index":2089,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule_declarations",{"_index":2090,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cluster_trippassagesmodule_imports",{"_index":2091,"title":{},"body":{"modules/TripPassagesModule.html":{},"overview.html":{}}}],["cmcvr3jhcghpy3mvu1zhlzeums9eveqvc3znmteuzhrkjz4ncjxzdmcgd2lk",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cmp",{"_index":1008,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["cmwoi2epiibzdhjva2u9iimwmdailz4ncjx0zxh0ignsyxnzpsjozwf2esiged0imzqiihk9",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1512,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/SidebarComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{}}}],["color",{"_index":928,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["color:#00d500",{"_index":764,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["color:#d50000",{"_index":761,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["color:#f9f9f9",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["color:red",{"_index":668,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["color:white",{"_index":1448,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/StopInfoComponent.html":{}}}],["column",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["combine",{"_index":1774,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["combinelatest",{"_index":606,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["combinelatest([this.mtimerobservable.pipe(filter((val",{"_index":1768,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["combinelatest([timer(0",{"_index":618,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["come",{"_index":1660,"title":{},"body":{"components/SidebarComponent.html":{}}}],["common",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{}}}],["common/countdown",{"_index":2094,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["common/leaflet",{"_index":909,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["common/retry",{"_index":1943,"title":{},"body":{"modules/StopsModule.html":{},"guards/StopsResolver.html":{}}}],["commonerrorcomponent",{"_index":304,"title":{"components/CommonErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commonmodule",{"_index":634,"title":{},"body":{"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["complete",{"_index":1598,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["component",{"_index":107,"title":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["components",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"overview.html":{}}}],["connection",{"_index":415,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["console",{"_index":410,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["console.error('it",{"_index":411,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["console.error(err",{"_index":1610,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["const",{"_index":396,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/CommonErrorComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(activatedroute",{"_index":1907,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["constructor(api",{"_index":1815,"title":{},"body":{"guards/StopInfoResolver.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["constructor(apiservice",{"_index":1629,"title":{},"body":{"injectables/SettingsService.html":{}}}],["constructor(cmp",{"_index":2146,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["constructor(dialogref",{"_index":1502,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["constructor(el",{"_index":782,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["constructor(elref",{"_index":877,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(http",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(indicatorcmp",{"_index":1589,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["constructor(injector",{"_index":362,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["constructor(mainmap",{"_index":2149,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["constructor(map",{"_index":1593,"title":{},"body":{"classes/RoutesSubscriber.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["constructor(public",{"_index":1513,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["constructor(resolve",{"_index":1599,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["constructor(route",{"_index":1710,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["constructor(router",{"_index":1571,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["constructor(service",{"_index":1859,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["constructor(sidebarservice",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(stopservice",{"_index":1977,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["constructor(toolbar",{"_index":1474,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["container",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container(#sidenavcontainer,[hasbackdrop]=\"true",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["container(*ngfor=\"let",{"_index":1553,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopsInfoComponent.html":{}}}],["container.innerhtml",{"_index":1244,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.main",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["container.onclick",{"_index":1248,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.backgroundcolor",{"_index":1234,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.cursor",{"_index":1243,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.height",{"_index":1238,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.lineheight",{"_index":1239,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.msuserselect",{"_index":1247,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.textalign",{"_index":1240,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.userselect",{"_index":1246,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.verticalalign",{"_index":1242,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["container.style.width",{"_index":1236,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["containing",{"_index":632,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["content",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RetryDialogComponent.html":{},"components/SidebarComponent.html":{}}}],["content.title",{"_index":1467,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["context(.no",{"_index":1461,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["continue",{"_index":1222,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["contract",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["contributors",{"_index":1037,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["control",{"_index":1232,"title":{},"body":{"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["converts",{"_index":1713,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["converttime",{"_index":678,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["converttime(data",{"_index":688,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["converttime(time",{"_index":1543,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["coordinates",{"_index":1059,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords",{"_index":1057,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.accuracy",{"_index":1063,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.latitude",{"_index":1065,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["coords.longitude",{"_index":1066,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["copy",{"_index":1035,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"index.html":{}}}],["core",{"_index":2214,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countdown",{"_index":636,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["countdowndirective",{"_index":633,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["countdowntimerdirective",{"_index":341,"title":{"directives/CountdownTimerDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countdowntimermodule",{"_index":627,"title":{"modules/CountdownTimerModule.html":{}},"body":{"modules/CountdownTimerModule.html":{},"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":2153,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":1159,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["createdialog",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdialog(error",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdialogfunc",{"_index":2263,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["createdialogfuncresponse",{"_index":2265,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["createpositionrequest",{"_index":2108,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["createpositionrequest(timeout",{"_index":2111,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["creates",{"_index":1833,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["createstopicon",{"_index":1208,"title":{},"body":{"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createvehicleicon",{"_index":903,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createvehicleicon(location.heading",{"_index":955,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["createvehicleicon(vehicle.heading",{"_index":1287,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ctx",{"_index":769,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["current",{"_index":699,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":1233,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["d3cudzmub3jnlziwmdavc3znij4ncjxzdhlszt4uagvhdnkgeybmb250oibi",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":686,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["data\",i18n",{"_index":2054,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["data).stopshortname",{"_index":1749,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["data.actualrelativetime",{"_index":736,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["data.actualtime",{"_index":738,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["data.code",{"_index":1519,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.code}}div(mat",{"_index":1529,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.message",{"_index":1517,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["data.plannedtime",{"_index":742,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["data:image/svg+xml;charset=utf",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data['trippassages",{"_index":1114,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["date.now",{"_index":624,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["debounce_time",{"_index":1105,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["debounce_time\",[placeholder]=\"'sync",{"_index":2060,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["debounce_time\",[placeholder]=\"\\'sync",{"_index":2085,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["debouncetime",{"_index":1091,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["declarations",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["decorators",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/RetryDialogComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["deep",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["default",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["delay",{"_index":681,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["departure(deps",{"_index":719,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure.tripid]\",role=\"listitem",{"_index":754,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departure_board",{"_index":732,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departurelistcomponent",{"_index":307,"title":{"components/DepartureListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departurelistitemcomponent",{"_index":310,"title":{"components/DepartureListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departures",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{}}}],["departures\",[departure]=\"passage",{"_index":662,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures\",[departure]=\"passage\").no",{"_index":669,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures(*ngif=\"!hasdepartures",{"_index":663,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departures(deps",{"_index":655,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["departurestatus",{"_index":712,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["departures|departures@@departures\",label=\"departures",{"_index":1790,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["dependencies",{"_index":425,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["description",{"_index":355,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"classes/LeafletMapComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"index.html":{}}}],["design",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["destroys",{"_index":1158,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["dgg9ijy0iibozwlnahq9ijy0iibiyxnluhjvzmlszt0iznvsbcigdmvyc2lv",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dgv4dd4ncjwvbwfzaz4ncjxjaxjjbgugy3g9ijm0iibjet0imzqiihi9ijmyiibtyxnrpsj1",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":1497,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dialog'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["dialog.component",{"_index":1539,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["dialog.component.pug",{"_index":1499,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["dialog.component.scss",{"_index":1498,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["dialog.component.ts",{"_index":1496,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":1505,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1509,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1508,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1506,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["dialog.component.ts:5",{"_index":1531,"title":{},"body":{"classes/RetryDialogData.html":{}}}],["dialog.component.ts:6",{"_index":1530,"title":{},"body":{"classes/RetryDialogData.html":{}}}],["dialog.module.ts",{"_index":1536,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["dialog/retry",{"_index":1495,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"coverage.html":{}}}],["dialogopen",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialogref",{"_index":1500,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"miscellaneous/variables.html":{}}}],["dialogref.afterclosed",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictating",{"_index":1725,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["diff",{"_index":622,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["diffminutes",{"_index":749,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["direction",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["directions_bus",{"_index":729,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["direction}}.no",{"_index":1566,"title":{},"body":{"components/RouteListComponent.html":{}}}],["directive",{"_index":300,"title":{"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["directives",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"overview.html":{}}}],["disabled",{"_index":2241,"title":{},"body":{"index.html":{}}}],["dismissed",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["display",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/TripPassagesComponent.html":{}}}],["display:block",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["display:flex",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["display:list",{"_index":1564,"title":{},"body":{"components/RouteListComponent.html":{}}}],["display:none",{"_index":1395,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["displayed",{"_index":1914,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["displayfn",{"_index":1972,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["displayfn(user",{"_index":1979,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["displaying",{"_index":1101,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{}}}],["distinctuntilchanged",{"_index":609,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["div(mat",{"_index":1516,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["div.error",{"_index":1794,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["div.no",{"_index":665,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["divider",{"_index":1396,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["divider(*ngif=\"hasheader(idx)&&idx>0",{"_index":1924,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["divider([vertical]=\"true",{"_index":1379,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["divider.close",{"_index":1378,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["documentation",{"_index":2154,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1262,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["dofocussearch",{"_index":1973,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["dom",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["donmahallem/trapeze",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["drag",{"_index":1027,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["drawable.directive",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["drawabledirective",{"_index":163,"title":{"directives/DrawableDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropshadow",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["during",{"_index":1137,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["dynamic",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":805,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.buttons",{"_index":828,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.offsetx",{"_index":848,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["e.offsety",{"_index":849,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["ease",{"_index":1466,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["el",{"_index":785,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["element",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["elementref",{"_index":783,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["elevation(4",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["elref",{"_index":881,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["emit",{"_index":1263,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["empty",{"_index":524,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{}}}],["enabled",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enablehighaccuracy",{"_index":2142,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["enabletracing",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":1001,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["endpoint",{"_index":1487,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoint.icon",{"_index":1490,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoint.title",{"_index":1492,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoints",{"_index":1481,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["endpoints\",role=\"listitem\"[routerlink]=\"[endpoint.path",{"_index":1488,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["entrycomponents",{"_index":1537,"title":{},"body":{"modules/RetryDialogModule.html":{}}}],["enum",{"_index":507,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["enumerations",{"_index":2230,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiendpoint",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.apiendpoint.endswith",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.example.ts",{"_index":2249,"title":{},"body":{"index.html":{}}}],["environment.production",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.pwa",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.version",{"_index":1653,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environments/environment",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["equals",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1606,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["err.status",{"_index":1142,"title":{},"body":{"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{}}}],["error",{"_index":353,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/IAppNotification.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/SettingsLoadSubscriber.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["error(err",{"_index":1604,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["error.component",{"_index":859,"title":{},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["error.component.pug",{"_index":553,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["error.component.scss",{"_index":552,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["error.component.ts",{"_index":551,"title":{},"body":{"components/CommonErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:7",{"_index":554,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["error.message",{"_index":402,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["error.status",{"_index":1965,"title":{},"body":{"guards/StopsResolver.html":{}}}],["error/not",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["errordiv(mat",{"_index":1528,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["errorhandler",{"_index":390,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["erroritem",{"_index":2266,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["errormessage=\"@@errorupdatingdata",{"_index":2055,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["errormessage=\"error",{"_index":2052,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["errormodule",{"_index":852,"title":{"modules/ErrorModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["erroroccured",{"_index":1700,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["errorresponse",{"_index":374,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["errorresponse.status",{"_index":419,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["errorroutes",{"_index":862,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["errorroutingmodule",{"_index":856,"title":{"modules/ErrorRoutingModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["errors",{"_index":358,"title":{},"body":{"injectables/AppErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["errors.pipe(skipwhile",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evenly",{"_index":1670,"title":{},"body":{"components/SidebarComponent.html":{}}}],["event",{"_index":788,"title":{},"body":{"directives/DrawableDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["event.sourcetarget.data.shortname",{"_index":1315,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.sourcetarget.data.tripid",{"_index":1286,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.type",{"_index":1273,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["event.url.length",{"_index":1353,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["eventemitter",{"_index":786,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["events",{"_index":1584,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["events:none",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["events:visible",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["eveqgu1zhideums8vru4nicanahr0cdovl3d3dy53my5vcmcvr3jhcghpy3mvu1zhlzeu",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["except",{"_index":687,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["excluding",{"_index":693,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["execute",{"_index":1156,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["expand",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["expected",{"_index":695,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["export",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["exports",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2243,"title":{},"body":{"index.html":{}}}],["extends",{"_index":911,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["f44336",{"_index":2081,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["f9f9f9",{"_index":562,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["failures",{"_index":1086,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["false",{"_index":395,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppRoutingModule.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/variables.html":{}}}],["featureavailable",{"_index":2109,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["featuregroup",{"_index":1308,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["featuregroup.addto(this.getmap",{"_index":1310,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["featuregroup.on('click",{"_index":1311,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["field",{"_index":2015,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fill",{"_index":1383,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["fillcolor",{"_index":1071,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["fillopacity",{"_index":1072,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["fills",{"_index":1386,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["filter",{"_index":901,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["filter((event",{"_index":1272,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["filter((item",{"_index":1773,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["filter(num",{"_index":977,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["filteredoptions",{"_index":1969,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["firing",{"_index":1026,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["firstpolyline",{"_index":926,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["firstpolyline.addto(this.getmap",{"_index":933,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["fixed",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["flatmap",{"_index":1092,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["flatmap((error",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flatmap((moveevent",{"_index":1274,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["flatmap((stopid",{"_index":1771,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["flatmap((tripid",{"_index":1147,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["flatmap((val",{"_index":2126,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["flatmap((value",{"_index":2009,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["flex",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["flex:0",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["flex:1",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["flexbox",{"_index":1388,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["flow",{"_index":561,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["focussearch",{"_index":1976,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["follow",{"_index":2095,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["followbusmapdirective",{"_index":344,"title":{"directives/FollowBusMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"coverage.html":{},"overview.html":{}}}],["font",{"_index":571,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["form",{"_index":2014,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["form(role=\"search",{"_index":2013,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["form,mat",{"_index":2026,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["format",{"_index":1716,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["formcontrol",{"_index":1992,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["formsmodule",{"_index":1415,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["found",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"index.html":{}}}],["found'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["found.component",{"_index":860,"title":{},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["found.component.pug",{"_index":1480,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1479,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1478,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:21",{"_index":1482,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":1485,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["foundmat",{"_index":1493,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["from([undefined",{"_index":1627,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{}}}],["function",{"_index":521,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/SettingsLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2234,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geoerror",{"_index":2138,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["geosuccess",{"_index":2135,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getangularversion",{"_index":1648,"title":{},"body":{"components/SidebarComponent.html":{}}}],["getappversion",{"_index":1644,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getdelay",{"_index":714,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getdeparture",{"_index":702,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getdepartures",{"_index":651,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["getfeatureavailable",{"_index":2121,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["gethasroutes",{"_index":1549,"title":{},"body":{"components/RouteListComponent.html":{}}}],["getimgdata",{"_index":772,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["getinitialmapcenter",{"_index":1613,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["getinitialmapzoom",{"_index":1620,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["getisloading",{"_index":1898,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getissidenavopen",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["getlasttimestamp",{"_index":2039,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getlocation",{"_index":895,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"injectables/UserLocationService.html":{}}}],["getmap",{"_index":1076,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["getmapbounds",{"_index":1177,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["getnotificationobservable",{"_index":505,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["getroutebytripid",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebytripid(tripid",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebyvehicleid",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutebyvehicleid(vehicleid",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["getroutename",{"_index":2045,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getroutes",{"_index":1546,"title":{},"body":{"components/RouteListComponent.html":{}}}],["gets",{"_index":704,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getsearchopen",{"_index":1341,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["getsettings",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"injectables/SettingsService.html":{}}}],["getsidebaropen",{"_index":1690,"title":{},"body":{"injectables/SidebarService.html":{}}}],["getstations",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"guards/StopsResolver.html":{}}}],["getstatus",{"_index":710,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getstatuscode",{"_index":2041,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["getstatusicon",{"_index":708,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["getstopid",{"_index":1739,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["getstopinfo",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{}}}],["getstopinfo(stopid",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstoplocation",{"_index":1889,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoplocation(stopshortname",{"_index":1878,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["getstoplocations",{"_index":1894,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoplocationsobservable",{"_index":1900,"title":{},"body":{"injectables/StopPointService.html":{}}}],["getstoppassages",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstoppassages(route.params['stopid",{"_index":1826,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["getstoppassages(stopid",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{}}}],["getstops",{"_index":1912,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["gettime",{"_index":706,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["gettimeuntilrefresh",{"_index":1737,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["getting",{"_index":2236,"title":{"index.html":{}},"body":{}}],["gettripdata",{"_index":2037,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["gettripid",{"_index":2043,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["gettrippassages",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/TripPassagesComponent.html":{}}}],["gettrippassages(tripid",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocation",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocation(vehicleid",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocations",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["getvehiclelocations(bounds",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["github",{"_index":1662,"title":{},"body":{"components/SidebarComponent.html":{}}}],["global",{"_index":357,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["gradient(rgba(0,0,0,0.0",{"_index":1454,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["graph",{"_index":2255,"title":{},"body":{"modules.html":{}}}],["grayscale(100",{"_index":1463,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["greenicon",{"_index":1299,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["grey",{"_index":1669,"title":{},"body":{"components/SidebarComponent.html":{}}}],["group",{"_index":1796,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["group(mat",{"_index":1786,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["grow",{"_index":1797,"title":{},"body":{"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["guard",{"_index":1806,"title":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1808,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"overview.html":{}}}],["h1(mat",{"_index":1515,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["h3",{"_index":557,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{}}}],["h3(*ngif=\"hasheader(idx)\",mat",{"_index":1925,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["h3(matline",{"_index":1491,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["h3(matline,aria",{"_index":2069,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["h3(matsubheader",{"_index":1554,"title":{},"body":{"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["h3.route",{"_index":2079,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["h4",{"_index":664,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["h4(mat",{"_index":1931,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["h4(matline",{"_index":1557,"title":{},"body":{"components/RouteListComponent.html":{},"components/SidebarComponent.html":{}}}],["hand",{"_index":1131,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["handle",{"_index":376,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handleerror",{"_index":359,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/TripPassagesComponent.html":{}}}],["handleerror(err",{"_index":1141,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["handleerror(error",{"_index":365,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handlehttperrorresponse",{"_index":360,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handlehttperrorresponse(errorresponse",{"_index":369,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.ts",{"_index":354,"title":{},"body":{"injectables/AppErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:18",{"_index":380,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:25",{"_index":367,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:47",{"_index":372,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handler.ts:9",{"_index":364,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["handles",{"_index":368,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["happened",{"_index":416,"title":{},"body":{"injectables/AppErrorHandler.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["happens",{"_index":412,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["hasdepartures",{"_index":643,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["haserror",{"_index":1138,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["hasheader",{"_index":1906,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["hasheader(idx",{"_index":1909,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["hasroutes",{"_index":1541,"title":{},"body":{"components/RouteListComponent.html":{}}}],["head",{"_index":1656,"title":{},"body":{"components/SidebarComponent.html":{}}}],["header",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["heading",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{}}}],["height:100",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["height:150px",{"_index":566,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["height:250px",{"_index":1440,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:300px",{"_index":1441,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:40px",{"_index":1405,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["height:64px",{"_index":1460,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["height:calc(100vw",{"_index":563,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["help_outline",{"_index":556,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["help_outlineh3",{"_index":573,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["here",{"_index":2244,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":746,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["hidden",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["highaccuracy",{"_index":2112,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["hjvzmlszt0iznvsbcigdmvyc2lvbj0ims4xiib2awv3qm94psiwidagnjggnjgiihhtbg5",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holding",{"_index":698,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["home",{"_index":1483,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["host",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["hostbinding",{"_index":604,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/MapHeaderBoxComponent.html":{}}}],["hostbinding('class.no",{"_index":1435,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["hostbinding('innerhtml",{"_index":614,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["hostbindings",{"_index":587,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["hostlistener",{"_index":812,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mousedown",{"_index":824,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mouseenter",{"_index":821,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mousemove",{"_index":826,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('mouseup",{"_index":818,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlistener('resize",{"_index":841,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["hostlisteners",{"_index":776,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["html",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlcanvaselement",{"_index":806,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["http",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["httpclient",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":366,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponses",{"_index":373,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["human",{"_index":1714,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["iactualtrippassage",{"_index":1089,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["iappnotification",{"_index":497,"title":{"interfaces/IAppNotification.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{}}}],["icon",{"_index":555,"title":{},"body":{"components/CommonErrorComponent.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["icon(mat",{"_index":1930,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["icon(matlisticon",{"_index":1489,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{}}}],["icon(matlisticon,role=\"figure\",i18n",{"_index":2065,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["icon(matlisticon,title=\"{{status",{"_index":755,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["iconanchor",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconapp",{"_index":1410,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["icons",{"_index":1230,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["iconsize",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconurl",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":898,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["identifier",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["ideparture",{"_index":649,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{}}}],["idx",{"_index":1911,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["ienvironmentbase",{"_index":986,"title":{"interfaces/IEnvironmentBase.html":{}},"body":{"interfaces/IEnvironmentBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ijq2iibmawxspsj3agl0zsigb3bhy2l0et0iljuiihn0cm9rzt0id2hpdguiihn0cm9rzs13",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1452,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["imagedata",{"_index":801,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["imagery",{"_index":1040,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["imapbounds",{"_index":53,"title":{"interfaces/IMapBounds.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["imapmoveendevent",{"_index":1004,"title":{"interfaces/IMapMoveEndEvent.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imapmovestartevent",{"_index":1002,"title":{"interfaces/IMapMoveStartEvent.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["implements",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["import",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["imports",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["include",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1382,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator'},{'name",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["indicator.component",{"_index":1424,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["indicator.component.pug",{"_index":1570,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.scss",{"_index":1569,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts",{"_index":1568,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["indicator.component.ts:12",{"_index":1590,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts:17",{"_index":1591,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{}}}],["indicator.component.ts:37",{"_index":1575,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:39",{"_index":1572,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":1574,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicator.component.ts:49",{"_index":1573,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["indicatorcmp",{"_index":1579,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["info.component",{"_index":1855,"title":{},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["info.component.pug",{"_index":1699,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.scss",{"_index":1698,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["info.component.ts",{"_index":1697,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:10",{"_index":1908,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:113",{"_index":1718,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:13",{"_index":1711,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:19",{"_index":1910,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1738,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:23",{"_index":1740,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1913,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1741,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:33",{"_index":1736,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1723,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:38",{"_index":1727,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1728,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:40",{"_index":1722,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1721,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:42",{"_index":1735,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1731,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:52",{"_index":1729,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:53",{"_index":1720,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:65",{"_index":1712,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.component.ts:72",{"_index":1717,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["info.resolver",{"_index":1856,"title":{},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{}}}],["info.resolver.ts",{"_index":1809,"title":{},"body":{"guards/StopInfoResolver.html":{},"coverage.html":{}}}],["info.resolver.ts:14",{"_index":1816,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["info.resolver.ts:28",{"_index":1821,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["information",{"_index":1811,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["init",{"_index":1264,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["initializes",{"_index":2031,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["inject",{"_index":1510,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":1507,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{},"overview.html":{}}}],["injector",{"_index":363,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["innerhtml",{"_index":588,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["input",{"_index":605,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["input(#searchinput,(blur)=\"onlosefocus()\",type=\"search\",aria",{"_index":2016,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["input('departure",{"_index":718,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["input('departures",{"_index":654,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["input('location",{"_index":916,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["input('routes",{"_index":1550,"title":{},"body":{"components/RouteListComponent.html":{}}}],["inputs",{"_index":584,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["inside",{"_index":1646,"title":{},"body":{"components/SidebarComponent.html":{},"guards/StopInfoResolver.html":{}}}],["instance",{"_index":1730,"title":{},"body":{"components/StopInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":398,"title":{},"body":{"injectables/AppErrorHandler.html":{},"directives/FollowBusMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["integer",{"_index":741,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["interactive",{"_index":963,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["interface",{"_index":510,"title":{"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{}},"body":{"injectables/AppNotificationService.html":{},"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["interfaces",{"_index":545,"title":{},"body":{"interfaces/Bounds.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"overview.html":{}}}],["internet",{"_index":418,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["interval",{"_index":1726,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["ipassagestatus",{"_index":1084,"title":{"interfaces/IPassageStatus.html":{}},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["isclientoffline",{"_index":361,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["isettings",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["isloading",{"_index":1882,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["issidenavopen",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["istopinfo",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{}}}],["istoplocation",{"_index":1206,"title":{},"body":{"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["istoplocations",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"guards/StopsResolver.html":{}}}],["istoppassage",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{}}}],["item",{"_index":671,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["item'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["item((click)=\"opengithub",{"_index":1661,"title":{},"body":{"components/SidebarComponent.html":{}}}],["item(*ngfor=\"let",{"_index":660,"title":{},"body":{"components/DepartureListComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{}}}],["item([routerlink]=\"['/stop",{"_index":1928,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item([routerlink]=\"[\\'/stop",{"_index":1935,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item.component",{"_index":1853,"title":{},"body":{"modules/StopModule.html":{}}}],["item.component.pug",{"_index":673,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.scss",{"_index":672,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts",{"_index":670,"title":{},"body":{"components/DepartureListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:19",{"_index":696,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:24",{"_index":690,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:28",{"_index":700,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:35",{"_index":682,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:45",{"_index":703,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:49",{"_index":707,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:53",{"_index":709,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:71",{"_index":711,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:75",{"_index":689,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:88",{"_index":715,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.component.ts:96",{"_index":684,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["item.name.charat(0",{"_index":1927,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item.shortname]\",role=\"listitem",{"_index":1929,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["item?.name",{"_index":1932,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["items",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{}}}],["itrippassages",{"_index":548,"title":{},"body":{"interfaces/Bounds.html":{}}}],["ivehiclelocation",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ivehiclelocationlist",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["js",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1391,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["keyframes",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["l",{"_index":899,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.circle(userposition",{"_index":1067,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.circlemarker(userposition",{"_index":1069,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.control.extend",{"_index":1226,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.divicon",{"_index":954,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["l.domutil.create('i",{"_index":1228,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.featuregroup",{"_index":891,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.featuregroup(stoplist",{"_index":1309,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.icon",{"_index":1844,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["l.latlng",{"_index":1614,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(0",{"_index":1619,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(this.settings.initial_lat",{"_index":1618,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["l.latlng(waypoint.lat",{"_index":924,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.latlngbounds",{"_index":1082,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.layer",{"_index":942,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.map",{"_index":1017,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.map(this.elref.nativeelement",{"_index":1029,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["l.marker",{"_index":959,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.marker([location.latitude",{"_index":960,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["l.marker([stop.latitude",{"_index":1300,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.marker([vehicle.latitude",{"_index":1290,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["l.polyline",{"_index":889,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.polyline(pointlist",{"_index":927,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["l.tilelayer",{"_index":944,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1033,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["label=\"@@busstopicon\",aria",{"_index":2066,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"@@stopname",{"_index":2072,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"bus",{"_index":2067,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"number\",placeholder=\"stopname\",matinput,[formcontrol]=\"searchcontrol\",[matautocomplete]=\"auto\",i18n",{"_index":2017,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["label=\"stop",{"_index":2070,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["label=\"tab",{"_index":1789,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["label=\"toggle",{"_index":1370,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["last",{"_index":1120,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["lasttimestamp",{"_index":1123,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["lat",{"_index":972,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["layer",{"_index":943,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layer.addto(this.map",{"_index":1078,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["layer.options.attribution",{"_index":945,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layer.redraw",{"_index":946,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["layout",{"_index":1390,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["lazy",{"_index":1942,"title":{},"body":{"modules/StopsModule.html":{}}}],["lbmnvzgluzz0ivvrgltgipz4ncjwhre9dvflqrsbzdmcgifbvqkxjqyanls8vvzndly9",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaf",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaflet",{"_index":900,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["leafletmapcomponent",{"_index":908,"title":{"classes/LeafletMapComponent.html":{}},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["left",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["left:0px",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["legend",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["level=\"2\",title=\"{{title",{"_index":1437,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["li",{"_index":1563,"title":{},"body":{"components/RouteListComponent.html":{}}}],["line",{"_index":1801,"title":{},"body":{"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["line:no",{"_index":409,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["linear",{"_index":1453,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["link",{"_index":1116,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["list",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["list(*ngif=\"hasdepartures()\",role=\"list",{"_index":659,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list(*ngif=\"tripid==tripdata?.tripid\",role=\"list",{"_index":2061,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["list([departures]=\"stopinfo?.actual",{"_index":1791,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list([routes]=\"stopinfo?.routes",{"_index":1793,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list([routes]=\"stopinfo?.routes\")div.error",{"_index":1805,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["list(role=\"list",{"_index":1486,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["list(role=\"list\",*ngif=\"hasroutes",{"_index":1552,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component",{"_index":1854,"title":{},"body":{"modules/StopModule.html":{}}}],["list.component.pug",{"_index":641,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.scss",{"_index":640,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.ts",{"_index":639,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":1545,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:15",{"_index":1542,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:17",{"_index":650,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.component.ts:19",{"_index":1547,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:23",{"_index":644,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["list.component.ts:26",{"_index":1544,"title":{},"body":{"components/RouteListComponent.html":{}}}],["list.component.ts:30",{"_index":652,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.component.ts:38",{"_index":645,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["list.stoplist",{"_index":1933,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["list.stoplist(role=\"list",{"_index":1922,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["literal",{"_index":1202,"title":{},"body":{"directives/MainMapDirective.html":{},"components/NotFoundComponent.html":{}}}],["lng",{"_index":974,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["load",{"_index":520,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["loadchildren",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":1095,"title":{},"body":{"interfaces/IPassageStatus.html":{},"modules/StopsModule.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loader",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loadstops",{"_index":1868,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["loc",{"_index":1838,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["location",{"_index":549,"title":{},"body":{"interfaces/Bounds.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["location(id",{"_index":917,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["location(loc",{"_index":1839,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["location.latitude",{"_index":973,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.longitude",{"_index":961,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.name",{"_index":964,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["location.name.split",{"_index":956,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["location.service",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["location.service.ts",{"_index":2103,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["location.service.ts:10",{"_index":2118,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:11",{"_index":2117,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:13",{"_index":2120,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:14",{"_index":2110,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:31",{"_index":2122,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:35",{"_index":2123,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:39",{"_index":2113,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location_off",{"_index":1439,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["locationerrorobservable",{"_index":2104,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationerrorsubject",{"_index":2105,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationobservable",{"_index":2106,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationobservable.subscribe(new",{"_index":1054,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["locations",{"_index":1877,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["locationsubject",{"_index":2107,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["main",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mainmap",{"_index":1210,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mainmapdirective",{"_index":346,"title":{"directives/MainMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["mainmapmodule",{"_index":436,"title":{"modules/MainMapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainMapModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarcomponent",{"_index":313,"title":{"components/MainToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintoolbarmodule",{"_index":437,"title":{"modules/MainToolbarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainToolbarModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map((a",{"_index":1769,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map((passages",{"_index":1149,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["map((value",{"_index":1270,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map(appmainmap",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["map(appstoplocation,[location]=\"stoplocation\",role=\"none",{"_index":1784,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map(appstoplocation,[location]=\"stoplocation\",role=\"none\")mat",{"_index":1804,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["map(apptrippassages,[location]=\"tripdata?.location\",role=\"none",{"_index":2050,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["map(apptrippassages,[location]=\"tripdata?.location\",role=\"none\")div.error",{"_index":2084,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["map.component",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map.component.ts",{"_index":995,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["map.component.ts:108",{"_index":1173,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:112",{"_index":1172,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:119",{"_index":1178,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:123",{"_index":1175,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:32",{"_index":2147,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["map.component.ts:37",{"_index":2148,"title":{},"body":{"classes/UserLocationSubscriber.html":{}}}],["map.component.ts:42",{"_index":1166,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:48",{"_index":1168,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:49",{"_index":1167,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:50",{"_index":1169,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:51",{"_index":1170,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:52",{"_index":1171,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:53",{"_index":1174,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.component.ts:84",{"_index":1176,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["map.directive",{"_index":1322,"title":{},"body":{"modules/MainMapModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{}}}],["map.directive.ts",{"_index":867,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["map.directive.ts:107",{"_index":1200,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:116",{"_index":885,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:12",{"_index":1594,"title":{},"body":{"classes/RoutesSubscriber.html":{}}}],["map.directive.ts:136",{"_index":1196,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:142",{"_index":1194,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:15",{"_index":2150,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["map.directive.ts:154",{"_index":1192,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:16",{"_index":1595,"title":{},"body":{"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:184",{"_index":1203,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:191",{"_index":1197,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:20",{"_index":2151,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["map.directive.ts:24",{"_index":880,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:27",{"_index":1836,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:28",{"_index":1191,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:29",{"_index":1835,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:31",{"_index":1834,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:33",{"_index":882,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:37",{"_index":896,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:40",{"_index":1204,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:41",{"_index":892,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:42",{"_index":1205,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["map.directive.ts:43",{"_index":893,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:44",{"_index":890,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:46",{"_index":887,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:51",{"_index":1832,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.directive.ts:62",{"_index":884,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{}}}],["map.directive.ts:76",{"_index":883,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["map.directive.ts:84",{"_index":1831,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["map.module.ts",{"_index":1320,"title":{},"body":{"modules/MainMapModule.html":{}}}],["map/main",{"_index":1180,"title":{},"body":{"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["map[appmainmap",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["map[appmainmap]'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["map[appstoplocation",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["map[apptrippassages",{"_index":869,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["map[apptrippassages]'},{'name",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mapbounds",{"_index":1081,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapbox",{"_index":1041,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapcontainer",{"_index":1016,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mapheaderboxcomponent",{"_index":315,"title":{"components/MapHeaderBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapheaderboxmodule",{"_index":1469,"title":{"modules/MapHeaderBoxModule.html":{}},"body":{"modules/MapHeaderBoxModule.html":{},"modules/StopModule.html":{},"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["mapmove",{"_index":1018,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mapmoveevent",{"_index":1006,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/typealiases.html":{}}}],["mapmoveeventtype",{"_index":998,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["mapmoveeventtype.end",{"_index":1005,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mapmoveeventtype.start",{"_index":1003,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["margin",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:#{$boxmarginvertical",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:$boxmarginvertical",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["margin:0px",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/StopInfoComponent.html":{}}}],["margin:15px",{"_index":666,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{}}}],["margin:auto",{"_index":568,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["marker",{"_index":958,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["marker's",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marker).setrotationangle(location.heading",{"_index":966,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["marker.addto(this.stopmarkerlayer",{"_index":968,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["marker.patch",{"_index":997,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["markeronclick",{"_index":1184,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["markeronclick(event",{"_index":1195,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markers",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markert",{"_index":1289,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markert).data",{"_index":1305,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["markert.data",{"_index":1295,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["mat",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["mat_dialog_data",{"_index":1511,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["matautocomplete",{"_index":1988,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["matautocompletemodule",{"_index":1418,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["matautocompleteselectedevent",{"_index":1986,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["matbuttonmodule",{"_index":1419,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/TripPassagesModule.html":{}}}],["matching",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1949,"title":{},"body":{"guards/StopsResolver.html":{}}}],["matdialogmodule",{"_index":1538,"title":{},"body":{"modules/RetryDialogModule.html":{},"modules/StopsModule.html":{}}}],["matdialogref",{"_index":1503,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"miscellaneous/typealiases.html":{}}}],["matdividermodule",{"_index":1420,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/SidebarModule.html":{}}}],["material",{"_index":1229,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["math.ceil(time",{"_index":739,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["math.max(value[1",{"_index":623,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["math.round((ticksleft",{"_index":1757,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["math.round(bounds.bottom",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.left",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.right",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(bounds.top",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{}}}],["math.round(iconsize",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/MainToolbarModule.html":{},"modules/StopsModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":858,"title":{},"body":{"modules/ErrorModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["matprogressbarmodule",{"_index":1421,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["matprogressspinnermodule",{"_index":1851,"title":{},"body":{"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["matsidenav",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavcontainer",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1190,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["matsnackbarmodule",{"_index":1321,"title":{},"body":{"modules/MainMapModule.html":{}}}],["mattabsmodule",{"_index":1852,"title":{},"body":{"modules/StopModule.html":{}}}],["mattoolbarmodule",{"_index":1422,"title":{},"body":{"modules/MainToolbarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["max",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["maximumage",{"_index":2143,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["maxzoom",{"_index":1042,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["mdaiighlawdodd0imtawiibmawxspsijzmzmiibvcgfjaxr5psiwii8+dqo8",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mdelay",{"_index":674,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mdeparture",{"_index":675,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mdepartures",{"_index":642,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["media",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/StopsInfoComponent.html":{}}}],["menu",{"_index":1374,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["merge",{"_index":1742,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["merge(refreshobservable",{"_index":1775,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mergemap",{"_index":902,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["mergemap(boundsa",{"_index":980,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["message",{"_index":401,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"guards/StopsResolver.html":{}}}],["metadata",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["miliseconds",{"_index":1733,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["min",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["minutes",{"_index":2145,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["miscellaneous",{"_index":2229,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["modify",{"_index":2250,"title":{},"body":{"index.html":{}}}],["module",{"_index":422,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["moduleimports",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":424,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/common/leaflet",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["modules/error/error.module#errormodule",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/main",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/sidebar/sidebar.module",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/stop/stop.module#stopmodule",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/stops/stops.module#stopsmodule",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/trip",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["moment",{"_index":717,"title":{},"body":{"components/DepartureListItemComponent.html":{},"dependencies.html":{}}}],["moment(data.actualtime",{"_index":745,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment(data.plannedtime",{"_index":748,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment.duration(actual.diff(planned)).asminutes",{"_index":750,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["moment.moment",{"_index":744,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mousedown",{"_index":777,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousedown(e",{"_index":789,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseenter",{"_index":778,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseenter(e",{"_index":791,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousemove",{"_index":779,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mousemove(e",{"_index":793,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseup",{"_index":780,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["mouseup(e",{"_index":795,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["ms4wiiblbmnvzgluzz0ivvrgltgipz4ncjwhre9dvflqrsbzdmcgifbvqkxj",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms9eveqvc3znmteuzhrkjz4ncjxzdmcgd2lkdgg9ijy0iibozwlnahq9ijy0iibiyxnlu",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msearchopen",{"_index":1327,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["msettings",{"_index":1611,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["mstopinfo",{"_index":1701,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mstops",{"_index":1905,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["mtime",{"_index":676,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["mtimerobservable",{"_index":1702,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["mtimeuntilrefresh",{"_index":1703,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["multi",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["muserlocationsubscription",{"_index":1019,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["my_location",{"_index":1245,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["name\",i18n",{"_index":2071,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["name.split",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nav",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DepartureListComponent.html":{},"components/NotFoundComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["nav(#sidenav,mode=\"over",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["navigation",{"_index":1393,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["navigationcancel",{"_index":1576,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationend",{"_index":1345,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationerror",{"_index":1577,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationstart",{"_index":1346,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["navigationsubscriber",{"_index":1351,"title":{"classes/NavigationSubscriber.html":{}},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["navigationsubscriber(this",{"_index":1356,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["navigator",{"_index":388,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["navigator.geolocation",{"_index":2132,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation.getcurrentposition(geosuccess",{"_index":2141,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.online",{"_index":394,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["necessary",{"_index":1023,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["need",{"_index":2248,"title":{},"body":{"index.html":{}}}],["needed",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["needs",{"_index":1265,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["negative",{"_index":692,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["new",{"_index":502,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["newimage",{"_index":775,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["next",{"_index":408,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/NavigationSubscriber.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["next(event",{"_index":1352,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["next(res",{"_index":1211,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["next(routes",{"_index":913,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["next(stops",{"_index":1863,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["next(value",{"_index":1009,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["ng",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/RouteListComponent.html":{},"components/StopsInfoComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":875,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ngmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["ngondestroy",{"_index":583,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ngoninit",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["ngsw",{"_index":2240,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":879,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["none",{"_index":999,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["not(:first",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["not_found",{"_index":1098,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundcomponent",{"_index":319,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noti",{"_index":500,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notifcations",{"_index":504,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notification",{"_index":377,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"miscellaneous/enumerations.html":{}}}],["notification.service",{"_index":393,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["notification.service.ts",{"_index":490,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["notification.service.ts:49",{"_index":495,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:56",{"_index":498,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notification.service.ts:63",{"_index":506,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notificationobservable",{"_index":494,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notificationservice",{"_index":370,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["notificationservice.notify",{"_index":400,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["notificationsubject",{"_index":492,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["notify",{"_index":493,"title":{},"body":{"injectables/AppNotificationService.html":{}}}],["notify(noti",{"_index":496,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["null",{"_index":979,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["num",{"_index":978,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["number",{"_index":547,"title":{},"body":{"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":697,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{}}}],["observable",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/IAppNotification.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["observable((subscriber",{"_index":2134,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["observables",{"_index":1160,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["occured",{"_index":405,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/CommonErrorComponent.html":{},"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["occuredp",{"_index":574,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["occurs",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offline",{"_index":389,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["ogym9szcazmnb4ihnhbnmtc2vyawy7ignvbg9yonb1cnbsztsgftwvc3r5bgu+dqo8bwfza",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1526,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["onadd",{"_index":1227,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["once",{"_index":1266,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ondestroy",{"_index":578,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["ondown(e",{"_index":827,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["one",{"_index":647,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["onenter(e",{"_index":822,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onfocussearch",{"_index":1329,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["onfocussearch(event",{"_index":1334,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["oninit",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"directives/CountdownTimerDirective.html":{},"directives/DrawableDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["online",{"_index":383,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["onlosefocus",{"_index":1974,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onmove(e",{"_index":825,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onnoclick",{"_index":1501,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["onresize(e",{"_index":842,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onstopselected",{"_index":1975,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onstopselected(stop",{"_index":1985,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["onup(e",{"_index":819,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["onvoted",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["onvoted(agreed",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["opacity",{"_index":930,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/UserLocationSubscriber.html":{}}}],["opacity:0.4",{"_index":1404,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["open",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["open':(searchopen===true),'navigation",{"_index":1365,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["open\\':(searchopen===true),\\'navigation",{"_index":1408,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["opengithub",{"_index":1639,"title":{},"body":{"components/SidebarComponent.html":{}}}],["opensidebar",{"_index":1681,"title":{},"body":{"injectables/SidebarService.html":{},"modules/StopRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["openstreetmap",{"_index":1036,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["option",{"_index":2023,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["option(*ngfor=\"let",{"_index":2022,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["option.name",{"_index":2025,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["option.name.tolowercase().includes(value",{"_index":2012,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["options",{"_index":1254,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["order",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"index.html":{}}}],["order:2",{"_index":1400,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["order:3",{"_index":1402,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["otherwise",{"_index":385,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["ourcustomcontrol",{"_index":1225,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["out",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["outlet",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":813,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["outputs",{"_index":774,"title":{},"body":{"directives/DrawableDirective.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["outside",{"_index":1562,"title":{},"body":{"components/RouteListComponent.html":{}}}],["overflow",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{}}}],["overflow:auto",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow:hidden",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow:none",{"_index":1443,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["overlay",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["overlayzindex",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["overservable",{"_index":1724,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["overview",{"_index":2257,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":558,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/RetryDialogComponent.html":{},"components/StopInfoComponent.html":{}}}],["p(*ngif=\"data.code",{"_index":1518,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["p(matline",{"_index":1657,"title":{},"body":{"components/SidebarComponent.html":{},"components/TripPassagesComponent.html":{}}}],["package",{"_index":1647,"title":{"dependencies.html":{}},"body":{"components/SidebarComponent.html":{},"miscellaneous/functions.html":{}}}],["padding",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{},"components/TripPassagesComponent.html":{}}}],["padding:0px",{"_index":1565,"title":{},"body":{"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{}}}],["padding:20px",{"_index":1446,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["padding:5px",{"_index":1799,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["param",{"_index":413,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"classes/UserLocationSubscriber.html":{}}}],["parameter",{"_index":1812,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["params",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{}}}],["passage",{"_index":661,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{},"components/TripPassagesComponent.html":{}}}],["passage.directions",{"_index":1556,"title":{},"body":{"components/RouteListComponent.html":{}}}],["passage?.actualtime",{"_index":2075,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.shortname",{"_index":1555,"title":{},"body":{"components/RouteListComponent.html":{}}}],["passage?.status",{"_index":2078,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.stop?.name",{"_index":2073,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passage?.stop?.shortname]\",role=\"listitem",{"_index":2064,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.component",{"_index":2096,"title":{},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.component.pug",{"_index":1104,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["passages.component.scss",{"_index":1103,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["passages.component.ts",{"_index":1085,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passages.component.ts:101",{"_index":2047,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:109",{"_index":2029,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:113",{"_index":2028,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:142",{"_index":2030,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:170",{"_index":2032,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:34",{"_index":2033,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:35",{"_index":2036,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:36",{"_index":2035,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:37",{"_index":2034,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:38",{"_index":2027,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:55",{"_index":2038,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:66",{"_index":2040,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:77",{"_index":2042,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:87",{"_index":2044,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.component.ts:94",{"_index":2046,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["passages.module#trippassagesmodule",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["passages.module.ts",{"_index":2093,"title":{},"body":{"modules/TripPassagesModule.html":{}}}],["passages.resolver",{"_index":2098,"title":{},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["passages.resolver.ts",{"_index":2099,"title":{},"body":{"guards/TripPassagesResolver.html":{},"coverage.html":{}}}],["passages.resolver.ts:12",{"_index":2101,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["passages.resolver.ts:9",{"_index":2100,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["passages/follow",{"_index":865,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["passages/trip",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passages?mode=departure",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"components/NotFoundComponent.html":{},"classes/RoutesSubscriber.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["path.color",{"_index":929,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["path.waypoints",{"_index":922,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["paths",{"_index":888,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["paused",{"_index":1096,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["performing",{"_index":559,"title":{},"body":{"components/CommonErrorComponent.html":{}}}],["pg0kpc9mawx0zxi+dqo8l2rlznm+dqo8bwfzaybpzd0iysi+dqo8cmvjdcb3",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg0kphrlehqgy2xhc3m9imhlyxz5iib4psiznciget0indyiigzpbgw9imjsywnriibzdhjv",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":976,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pipe(catcherror((err",{"_index":1827,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["pipe(debouncetime(30000",{"_index":2125,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["pipe(map((a",{"_index":1761,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["pipe(map((stops",{"_index":2010,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["pipe(map((tapedvalue",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(map((value",{"_index":621,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["pipe(tap((value",{"_index":1626,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["place",{"_index":1484,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{}}}],["placeholder",{"_index":585,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["placeholder=\"stopname",{"_index":2018,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["planned",{"_index":747,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["point",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point.service",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["point.service.ts",{"_index":1858,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["point.service.ts:13",{"_index":1864,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:17",{"_index":1862,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:21",{"_index":1861,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["point.service.ts:30",{"_index":1893,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:31",{"_index":1890,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:35",{"_index":1892,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:42",{"_index":1895,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:45",{"_index":1897,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:49",{"_index":1891,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:58",{"_index":1899,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:62",{"_index":1901,"title":{},"body":{"injectables/StopPointService.html":{}}}],["point.service.ts:7",{"_index":1860,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{}}}],["pointer",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pointlist",{"_index":920,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pointlist.push(new",{"_index":923,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["pollsubscription",{"_index":1108,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["popup",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popupanchor",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pos",{"_index":770,"title":{},"body":{"directives/DrawableDirective.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pos.coords.latitude",{"_index":1250,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["pos.coords.longitude",{"_index":1251,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["position",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["position:fixed",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["positionerror",{"_index":2139,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["positive",{"_index":691,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["preceeding",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prediction",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["predictions",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["preload",{"_index":518,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preload(route",{"_index":519,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloading",{"_index":515,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preloadingstrategy",{"_index":517,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["pressed=\"false",{"_index":1373,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["primedmoveobservable",{"_index":1267,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["private",{"_index":491,"title":{},"body":{"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["production",{"_index":989,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":1587,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{}}}],["projects",{"_index":1663,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1623,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["properties",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{}}}],["protected",{"_index":1013,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["provide",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":648,"title":{},"body":{"components/DepartureListComponent.html":{},"directives/MainMapDirective.html":{},"guards/StopInfoResolver.html":{},"classes/VehicleLoadSubscriber.html":{},"index.html":{}}}],["providedin",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["providers",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["public",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["publish",{"_index":499,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["pug",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["pwa",{"_index":990,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"miscellaneous/variables.html":{}}}],["query_builder",{"_index":734,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["queryparams",{"_index":1145,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["qyanls8vvzndly9eveqgu1zhideums8vru4nicanahr0cdovl3d3dy53my5v",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["reactiveformsmodule",{"_index":1416,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["readable",{"_index":1715,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["readonly",{"_index":993,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/NotFoundComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{}}}],["reads",{"_index":2235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["red",{"_index":1527,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["redirects",{"_index":1813,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["redirectto",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["refreshobservable",{"_index":1767,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["reject",{"_index":1624,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["relative",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1155,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["remaining",{"_index":1384,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["replaying",{"_index":503,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["reportable",{"_index":403,"title":{},"body":{"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["res",{"_index":2152,"title":{},"body":{"classes/VehicleLoadSubscriber.html":{}}}],["reset",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["resize",{"_index":781,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["resize(e",{"_index":797,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["resolve",{"_index":1602,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["resolve(route",{"_index":1817,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["resolver",{"_index":1947,"title":{},"body":{"guards/StopsResolver.html":{}}}],["resolves",{"_index":1810,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["responds",{"_index":1814,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["response",{"_index":375,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopsResolver.html":{}}}],["result",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retried",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1132,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["retrieved",{"_index":1122,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["retrieving",{"_index":2053,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["retry",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["retrydialogcomponent",{"_index":321,"title":{"components/RetryDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["retrydialogdata",{"_index":1504,"title":{"classes/RetryDialogData.html":{}},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"coverage.html":{}}}],["retrydialogmodule",{"_index":1532,"title":{"modules/RetryDialogModule.html":{}},"body":{"modules/RetryDialogModule.html":{},"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["retrydialogstrategy",{"_index":1957,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["retrydialogstrategyfunc",{"_index":2267,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrydialogstrategyfuncresponse",{"_index":2268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["retrying",{"_index":2058,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["retrywhen",{"_index":1956,"title":{},"body":{"guards/StopsResolver.html":{}}}],["retrywhen(retrydialogstrategy((error",{"_index":1963,"title":{},"body":{"guards/StopsResolver.html":{}}}],["return",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/functions.html":{}}}],["rgb(87",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0,0,0,0.7",{"_index":1455,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["rgba(255,255,255,0.1",{"_index":1406,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["right",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["right:$rightpadding",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["right:0px",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{}}}],["right:unset",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["rightpadding",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["riseoffset",{"_index":1302,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["riseonhover",{"_index":1303,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["root",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"injectables/UserLocationService.html":{}}}],["root'},{'name",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["rotated",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotatedmarker",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["rotating",{"_index":996,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["rotationangle",{"_index":1292,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["round",{"_index":834,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["route",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"index.html":{}}}],["route.path.startswith('error",{"_index":525,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["routelistcomponent",{"_index":324,"title":{"components/RouteListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeloadingindicatorcomponent",{"_index":325,"title":{"components/RouteLoadingIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeloadingsubscriber",{"_index":1578,"title":{"classes/RouteLoadingSubscriber.html":{}},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["routeloadingsubscriber(this",{"_index":1585,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["routename",{"_index":1133,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["routepolylines",{"_index":870,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["router",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["routerevent",{"_index":1347,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["routermodule",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/MainToolbarModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["routermodule.forchild(errorroutes",{"_index":863,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["routermodule.forchild(trippassagesroute",{"_index":1903,"title":{},"body":{"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["routermodule.forroot",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":1824,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["routerstatesnapshot",{"_index":1820,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["routes",{"_index":528,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routes(*ngif=\"!hasroutes",{"_index":1558,"title":{},"body":{"components/RouteListComponent.html":{}}}],["routes(deps",{"_index":1551,"title":{},"body":{"components/RouteListComponent.html":{}}}],["routesnapshot",{"_index":1823,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["routessubscriber",{"_index":910,"title":{"classes/RoutesSubscriber.html":{}},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"coverage.html":{}}}],["routessubscriber(this",{"_index":983,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["routes|routes@@routes\",label=\"routes",{"_index":1792,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["routing.module",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/ErrorModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{}}}],["routing.module.ts",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["row",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["run",{"_index":591,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["rxjs",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":610,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["sa",{"_index":1039,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["same",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1349,"title":{},"body":{"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["search'},{'name",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["search((focussearch)=\"onfocussearch($event",{"_index":1375,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["search@@stopnametosearch",{"_index":2020,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["search@@stopnametosearch\",i18n",{"_index":2019,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchborderradius",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["searchboxcomponent",{"_index":1328,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["searchcontrol",{"_index":1970,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchinput",{"_index":1971,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["searchopen",{"_index":1331,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["searchopen(open",{"_index":1358,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["seconds@@refreshinginxseconds\",subtitle=\"refreshing",{"_index":1782,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["seems",{"_index":1022,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["select",{"_index":1442,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["selector",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["self",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":414,"title":{},"body":{"injectables/AppErrorHandler.html":{},"guards/StopInfoResolver.html":{}}}],["server_error",{"_index":1100,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":378,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["services",{"_index":1094,"title":{},"body":{"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["services/app",{"_index":392,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{}}}],["services/settings.service",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["services/sidebar.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["services/stop",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["services/user",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["serviceworkermodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":611,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteListComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setdeparture(deps",{"_index":705,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["setdepartures(deps",{"_index":653,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["setlocation(id",{"_index":897,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["setlocation(loc",{"_index":1837,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["setposition",{"_index":773,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["setposition(e",{"_index":803,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["setroutepaths",{"_index":876,"title":{},"body":{"directives/FollowBusMapDirective.html":{}}}],["setroutepaths(paths",{"_index":886,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["setroutes(deps",{"_index":1548,"title":{},"body":{"components/RouteListComponent.html":{}}}],["sets",{"_index":593,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setsearchopen(open",{"_index":1343,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["setstoplocations(locations",{"_index":1896,"title":{},"body":{"injectables/StopPointService.html":{}}}],["settargettime(timestamp",{"_index":603,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["settimeout",{"_index":1999,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["settings",{"_index":1014,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["settings.scss",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/StopsInfoComponent.html":{}}}],["settingsinitializer",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsloadsubscriber",{"_index":1596,"title":{"classes/SettingsLoadSubscriber.html":{}},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["settingsloadsubscriber(resolve",{"_index":1628,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":439,"title":{"injectables/SettingsService.html":{}},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":1165,"title":{},"body":{"classes/LeafletMapComponent.html":{}}}],["setuserlocation(coords",{"_index":1058,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["setvehicles",{"_index":1185,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["setvehicles(vehicles",{"_index":1198,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["setview(this.settings.getinitialmapcenter",{"_index":1031,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["shadow",{"_index":1449,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["shadow.png",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowanchor",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowsize",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadowurl",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":1130,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["sidebar",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar\",role=\"button\",aria",{"_index":1372,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["sidebar'},{'name",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["sidebar.component",{"_index":1677,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.pug",{"_index":1637,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1636,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar@@togglesidebar\",aria",{"_index":1371,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["sidebarcomponent",{"_index":328,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarmodule",{"_index":438,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidebarobservable",{"_index":1679,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidebaropen",{"_index":1682,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidebarservice",{"_index":137,"title":{"injectables/SidebarService.html":{}},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"coverage.html":{}}}],["sidebarstatussubject",{"_index":1680,"title":{},"body":{"injectables/SidebarService.html":{}}}],["sidenav",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav.main",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavcontainer",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["single",{"_index":1025,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["size",{"_index":572,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/StopInfoComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["smoothfactor",{"_index":932,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["snackbar",{"_index":1189,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["snapshot",{"_index":1954,"title":{},"body":{"guards/StopsResolver.html":{}}}],["snapshotdatasubscription",{"_index":1107,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["solid",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/Bounds.html":{},"components/CommonErrorComponent.html":{},"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"modules/SidebarModule.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["sourcetarget",{"_index":1313,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["space",{"_index":1385,"title":{},"body":{"components/MainToolbarComponent.html":{},"components/SidebarComponent.html":{}}}],["span(appcountdowntimer,[targettime]=\"lasttimestamp",{"_index":2059,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(class=\"demo",{"_index":2076,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(role=\"timer",{"_index":2074,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span(title=\"angular",{"_index":1666,"title":{},"body":{"components/SidebarComponent.html":{}}}],["span(title=\"app",{"_index":1665,"title":{},"body":{"components/SidebarComponent.html":{}}}],["span.delay",{"_index":667,"title":{},"body":{"components/DepartureListComponent.html":{}}}],["span.pattern",{"_index":756,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["span.subtitle",{"_index":1457,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.subtitle(*ngif=\"subtitle!==undefined\",title=\"{{subtitle",{"_index":1438,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.text",{"_index":2057,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span.title",{"_index":1456,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["span.title(*ngif=\"title!==undefined\",trole=\"heading\",aria",{"_index":1436,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["span.title(i18n=\"@@anerroroccured",{"_index":2056,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["span[appcountdowntimer",{"_index":579,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["span[appcountdowntimer]'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["src/.../app",{"_index":2231,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.module.ts",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.example.pwa.ts",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.example.ts",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../icons.ts",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../leaflet",{"_index":2232,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../retry",{"_index":2264,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../trip",{"_index":2233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":352,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/drawable.directive.ts",{"_index":767,"title":{},"body":{"directives/DrawableDirective.html":{},"coverage.html":{}}}],["src/app/drawable.directive.ts:11",{"_index":784,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:15",{"_index":802,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:21",{"_index":796,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:26",{"_index":792,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:31",{"_index":790,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:36",{"_index":794,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:56",{"_index":798,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:61",{"_index":804,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:66",{"_index":799,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:7",{"_index":811,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:70",{"_index":800,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:8",{"_index":809,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/drawable.directive.ts:9",{"_index":807,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["src/app/leaflet",{"_index":904,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["src/app/leaflet/constants.ts",{"_index":2164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/leaflet/icons.ts",{"_index":2167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models",{"_index":1093,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["src/app/models/index.ts",{"_index":546,"title":{},"body":{"interfaces/Bounds.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/common/countdown",{"_index":575,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"coverage.html":{}}}],["src/app/modules/common/leaflet",{"_index":994,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/common/map",{"_index":1425,"title":{},"body":{"components/MapHeaderBoxComponent.html":{},"modules/MapHeaderBoxModule.html":{},"coverage.html":{}}}],["src/app/modules/common/retry",{"_index":1494,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"modules/RetryDialogModule.html":{},"coverage.html":{}}}],["src/app/modules/error/common",{"_index":550,"title":{},"body":{"components/CommonErrorComponent.html":{},"coverage.html":{}}}],["src/app/modules/error/error",{"_index":861,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["src/app/modules/error/error.module.ts",{"_index":857,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/modules/error/not",{"_index":1477,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/modules/main",{"_index":1179,"title":{},"body":{"directives/MainMapDirective.html":{},"modules/MainMapModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts",{"_index":1635,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:14",{"_index":1642,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:18",{"_index":1643,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:26",{"_index":1645,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:34",{"_index":1649,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.component.ts:9",{"_index":1641,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/modules/sidebar/sidebar.module.ts",{"_index":1676,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/modules/stop/departure",{"_index":638,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"coverage.html":{}}}],["src/app/modules/stop/route",{"_index":1540,"title":{},"body":{"components/RouteListComponent.html":{},"coverage.html":{}}}],["src/app/modules/stop/stop",{"_index":1696,"title":{},"body":{"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/stop/stop.module.ts",{"_index":1850,"title":{},"body":{"modules/StopModule.html":{}}}],["src/app/modules/stops/stops",{"_index":1904,"title":{},"body":{"components/StopsInfoComponent.html":{},"modules/StopsRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/stops/stops.module.ts",{"_index":1941,"title":{},"body":{"modules/StopsModule.html":{}}}],["src/app/modules/stops/stops.resolver.ts",{"_index":1946,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{}}}],["src/app/modules/stops/stops.resolver.ts:16",{"_index":1950,"title":{},"body":{"guards/StopsResolver.html":{}}}],["src/app/modules/stops/stops.resolver.ts:32",{"_index":1951,"title":{},"body":{"guards/StopsResolver.html":{}}}],["src/app/modules/trip",{"_index":864,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/rxjs",{"_index":1958,"title":{},"body":{"guards/StopsResolver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/services",{"_index":905,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:21",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:25",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:29",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:32",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:35",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:38",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:41",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:44",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:54",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:58",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:62",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app",{"_index":489,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/settings.service",{"_index":906,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts",{"_index":1597,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings.service.ts:13",{"_index":1605,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":1603,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/settings.service.ts:29",{"_index":1630,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:35",{"_index":1634,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:39",{"_index":1631,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:47",{"_index":1632,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:54",{"_index":1633,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:8",{"_index":1601,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{}}}],["src/app/services/sidebar.service",{"_index":1348,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/SidebarComponent.html":{}}}],["src/app/services/sidebar.service.ts",{"_index":1678,"title":{},"body":{"injectables/SidebarService.html":{},"coverage.html":{}}}],["src/app/services/sidebar.service.ts:13",{"_index":1691,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:17",{"_index":1686,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:21",{"_index":1685,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:25",{"_index":1684,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:8",{"_index":1689,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/sidebar.service.ts:9",{"_index":1683,"title":{},"body":{"injectables/SidebarService.html":{}}}],["src/app/services/stop",{"_index":1743,"title":{},"body":{"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":907,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["src/environments/app",{"_index":2194,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/environments/environment.base.ts",{"_index":987,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":2196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.example",{"_index":1650,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/environments/environment.example.pwa.ts",{"_index":2197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.example.ts",{"_index":2198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":1915,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["start",{"_index":1000,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2237,"title":{"index.html":{}},"body":{}}],["startupdater",{"_index":1830,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["startvehicleupdater",{"_index":1186,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["startwith",{"_index":1207,"title":{},"body":{"directives/MainMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["state",{"_index":1819,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{},"guards/TripPassagesResolver.html":{}}}],["statements",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":1952,"title":{},"body":{"guards/StopsResolver.html":{}}}],["stations",{"_index":1948,"title":{},"body":{"guards/StopsResolver.html":{}}}],["stationsresponse",{"_index":1960,"title":{},"body":{"guards/StopsResolver.html":{}}}],["status",{"_index":680,"title":{},"body":{"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"guards/StopInfoResolver.html":{},"components/TripPassagesComponent.html":{}}}],["statuscode",{"_index":1127,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["statusicon",{"_index":679,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["statusops",{"_index":1109,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["stop",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.longitude",{"_index":1301,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.name",{"_index":1304,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stop.option.value",{"_index":2003,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["stop.option.value.shortname",{"_index":2005,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["stop.shortname",{"_index":1880,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stop_icon_shadow_url",{"_index":2165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stop_icon_url",{"_index":2166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stopicon",{"_index":1843,"title":{},"body":{"directives/StopLocationMapDirective.html":{},"miscellaneous/variables.html":{}}}],["stopid",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"modules/StopRoutingModule.html":{}}}],["stopidobvservable",{"_index":1759,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["stopidobvservable.pipe(map((id",{"_index":1763,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["stopinfo",{"_index":1709,"title":{},"body":{"components/StopInfoComponent.html":{},"modules/StopRoutingModule.html":{}}}],["stopinfocomponent",{"_index":330,"title":{"components/StopInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopinforesolver",{"_index":1807,"title":{"guards/StopInfoResolver.html":{}},"body":{"guards/StopInfoResolver.html":{},"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"coverage.html":{}}}],["stoplist",{"_index":1298,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stoplist.push(markert",{"_index":1306,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stoploadsubscription",{"_index":1867,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocation",{"_index":1704,"title":{},"body":{"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["stoplocationmapdirective",{"_index":348,"title":{"directives/StopLocationMapDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopModule.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stoplocations",{"_index":1873,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocations(locations",{"_index":1875,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationsobservable",{"_index":1884,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationssubject",{"_index":1866,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoplocationsubject",{"_index":1829,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["stopmarkerlayer",{"_index":871,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopmarkeronclick",{"_index":1187,"title":{},"body":{"directives/MainMapDirective.html":{}}}],["stopmarkeronclick(event",{"_index":1201,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopmodule",{"_index":1845,"title":{"modules/StopModule.html":{}},"body":{"modules/StopModule.html":{},"modules.html":{},"overview.html":{}}}],["stoppointloadsubscriber",{"_index":1857,"title":{"classes/StopPointLoadSubscriber.html":{}},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"coverage.html":{}}}],["stoppointloadsubscriber(this",{"_index":1872,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stoppointservice",{"_index":440,"title":{"injectables/StopPointService.html":{}},"body":{"modules/AppModule.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["stoproutingmodule",{"_index":1849,"title":{"modules/StopRoutingModule.html":{}},"body":{"modules/StopModule.html":{},"modules/StopRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["stops",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stops.filter(option",{"_index":2011,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["stops.resolver",{"_index":1945,"title":{},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["stops;let",{"_index":1923,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["stopservice",{"_index":1188,"title":{},"body":{"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["stopshortname",{"_index":1881,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["stopsinfocomponent",{"_index":333,"title":{"components/StopsInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopsmodule",{"_index":1936,"title":{"modules/StopsModule.html":{}},"body":{"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["stopsresolver",{"_index":1944,"title":{"guards/StopsResolver.html":{}},"body":{"modules/StopsModule.html":{},"guards/StopsResolver.html":{},"modules/StopsRoutingModule.html":{},"coverage.html":{}}}],["stopsroutingmodule",{"_index":1940,"title":{"modules/StopsRoutingModule.html":{}},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["strategy",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.ts",{"_index":516,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategy.ts:5",{"_index":522,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stretch",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{}}}],["string",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IPassageStatus.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/variables.html":{}}}],["stuff",{"_index":1659,"title":{},"body":{"components/SidebarComponent.html":{}}}],["style",{"_index":1560,"title":{},"body":{"components/RouteListComponent.html":{}}}],["styles",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["subdomains",{"_index":1044,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["subheader",{"_index":1926,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["subject",{"_index":501,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["subscribe((location",{"_index":949,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["subscribe((open",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((stop",{"_index":1765,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subscribe((stops",{"_index":1297,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscribe((val",{"_index":2129,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscribe(new",{"_index":982,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscribe(this.updatedata.bind(this",{"_index":1778,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subscriber",{"_index":608,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subscriber((val",{"_index":1151,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["subscriber.complete",{"_index":2137,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscriber.error(error",{"_index":2140,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscriber.next(position",{"_index":2136,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["subscription",{"_index":601,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["subtitle",{"_index":1431,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["subtitle=\"refreshing",{"_index":1781,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["subtitle}}mat",{"_index":1468,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["successfully",{"_index":2247,"title":{},"body":{"index.html":{}}}],["super",{"_index":912,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super(elref",{"_index":915,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super.ngafterviewinit",{"_index":935,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["super.ngondestroy",{"_index":984,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["support",{"_index":2252,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":382,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["svg",{"_index":2253,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":725,"title":{},"body":{"components/DepartureListItemComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["tab",{"_index":1785,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tab(i18n",{"_index":1788,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["table",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["tabs,[dynamicheight]=\"true",{"_index":1787,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tag",{"_index":384,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["taken",{"_index":1282,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["tap",{"_index":1607,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["tapedvalue",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targettime",{"_index":586,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["targettime(timestamp",{"_index":612,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["template",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["test",{"_index":1966,"title":{},"body":{"guards/StopsResolver.html":{},"components/TripPassagesComponent.html":{}}}],["testmat",{"_index":2086,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["text",{"_index":615,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["text(*ngif=\"delay!==false\",[ngclass]=\"{'late':(delay>0),'early':(delay",{"_index":757,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text(*ngif=\"delay!==false\",[ngclass]=\"{\\'late\\':(delay>0),\\'early\\':(delay",{"_index":766,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.early",{"_index":763,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.late",{"_index":760,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["text.late:before",{"_index":762,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["thanks",{"_index":1523,"title":{},"body":{"components/RetryDialogComponent.html":{}}}],["this.activatedroute.snapshot.data.stops.stops.sort((a",{"_index":1916,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.addmarker",{"_index":936,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.addvehiclemarker(veh).addto(this.vehiclemarkerlayer",{"_index":1223,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.api",{"_index":1825,"title":{},"body":{"guards/StopInfoResolver.html":{},"guards/StopsResolver.html":{}}}],["this.api.getstations",{"_index":1870,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.api.gettrippassages(route.params['tripid",{"_index":2102,"title":{},"body":{"guards/TripPassagesResolver.html":{}}}],["this.apiservice.getroutebytripid(boundsa.tripid",{"_index":981,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.apiservice.getsettings",{"_index":1625,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.apiservice.getstoppassages(stopid",{"_index":1772,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.apiservice.gettrippassages(tripid",{"_index":1148,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.apiservice.getvehiclelocations(bounds",{"_index":1279,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.calculatedelay(deps",{"_index":722,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.canvas",{"_index":814,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.canvas.getcontext('2d",{"_index":817,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.cmp.setuserlocation(value",{"_index":1010,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.converttime(deps",{"_index":724,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.createpositionrequest",{"_index":2127,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.ctx",{"_index":816,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.beginpath",{"_index":829,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.canvas.height",{"_index":845,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.canvas.width",{"_index":843,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.clearrect(0",{"_index":850,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.getimagedata(0",{"_index":851,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.linecap",{"_index":833,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.lineto(this.pos.x",{"_index":839,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.linewidth",{"_index":831,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.moveto(this.pos.x",{"_index":837,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.stroke",{"_index":840,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.ctx.strokestyle",{"_index":835,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.dialog.open(retrydialogcomponent",{"_index":1964,"title":{},"body":{"guards/StopsResolver.html":{}}}],["this.dialogref.close(false",{"_index":1514,"title":{},"body":{"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{}}}],["this.dofocussearch",{"_index":1998,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.el.nativeelement",{"_index":815,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.erroroccured",{"_index":1748,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.filteredoptions",{"_index":2007,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.focussearch.next(false",{"_index":2002,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.getmap().addcontrol(new",{"_index":1260,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().doubleclickzoom.disable",{"_index":939,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().dragging.disable",{"_index":937,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().eachlayer((layer",{"_index":941,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().flyto(this.settings.getinitialmapcenter",{"_index":1261,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().panto",{"_index":969,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.getmap().scrollwheelzoom.disable",{"_index":940,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.getmap().touchzoom.disable",{"_index":938,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.handlehttperrorresponse(error",{"_index":399,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.http.get(this.baseurl",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.indicatorcmp.loading",{"_index":1580,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.injector.get(appnotificationservice",{"_index":397,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.isclientoffline",{"_index":417,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["this.isloading",{"_index":1886,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.loadstops",{"_index":1887,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.locationerrorobservable",{"_index":2124,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.asobservable",{"_index":2116,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.next(err",{"_index":2128,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationerrorsubject.next(undefined",{"_index":2130,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.asobservable",{"_index":2119,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.next(val",{"_index":2131,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.locationsubject.value",{"_index":2133,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.mainmap.setvehicles(res",{"_index":1212,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.map",{"_index":1028,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.getbounds",{"_index":1080,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.on('moveend",{"_index":1050,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.on('movestart",{"_index":1048,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.map.setroutepaths(routes.paths",{"_index":914,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.mapbounds.geteast",{"_index":1277,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getnorth",{"_index":1278,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getsouth",{"_index":1275,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapbounds.getwest",{"_index":1276,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mapmove.next",{"_index":1049,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.mapmove.pipe",{"_index":1268,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.markeronclick.bind(this",{"_index":1217,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.mdelay",{"_index":721,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdeparture",{"_index":720,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdeparture.status",{"_index":726,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mdepartures",{"_index":656,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["this.mdepartures.length",{"_index":658,"title":{},"body":{"components/DepartureListComponent.html":{},"components/RouteListComponent.html":{}}}],["this.msearchopen",{"_index":1357,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.msettings",{"_index":1612,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.mstopinfo",{"_index":1744,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mstops",{"_index":1918,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.mtime",{"_index":723,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["this.mtimerobservable",{"_index":1751,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mtimerobservable.subscribe((tick",{"_index":1754,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.mtimeuntilrefresh",{"_index":1746,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.muserlocationsubscription",{"_index":1052,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.muserlocationsubscription.unsubscribe",{"_index":1083,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.newimage.emit(this.getimgdata",{"_index":820,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.notificationsubject.asobservable",{"_index":512,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["this.notificationsubject.next(noti",{"_index":511,"title":{},"body":{"injectables/AppNotificationService.html":{},"interfaces/IAppNotification.html":{}}}],["this.pollsubscription",{"_index":1162,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.pollsubscription.unsubscribe",{"_index":1163,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.pos.x",{"_index":847,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.pos.y",{"_index":838,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.resolve",{"_index":1609,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.route.data.pipe(map((value",{"_index":1776,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.data.subscribe((data",{"_index":1112,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.route.params",{"_index":1760,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.data.stopinfo",{"_index":1745,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.params.stopid",{"_index":1747,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.route.snapshot.params.tripid",{"_index":1129,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.route.snapshot.params['tripid",{"_index":1146,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.routepolylines.push(firstpolyline",{"_index":934,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.router",{"_index":1583,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.router.events.subscribe(new",{"_index":1355,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.router.navigate(['/stop",{"_index":2004,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.router.navigate(['error",{"_index":1961,"title":{},"body":{"guards/StopsResolver.html":{}}}],["this.router.navigate(['not",{"_index":1144,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{}}}],["this.router.navigate(['passages",{"_index":1285,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.router.navigate(['stop",{"_index":1314,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.router.navigate(['stops",{"_index":1828,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["this.searchboxcomponent",{"_index":1361,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchboxcomponent.dofocussearch",{"_index":1362,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.searchcontrol.setvalue",{"_index":1997,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchcontrol.valuechanges",{"_index":2008,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchinput.nativeelement.focus",{"_index":2000,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchinput.nativeelement.select",{"_index":2001,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["this.searchopen",{"_index":1360,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["this.service.stoplocations",{"_index":1865,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.setposition(e",{"_index":823,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["this.settings",{"_index":1615,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.getinitialmapzoom",{"_index":1032,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.settings.initial_lat",{"_index":1616,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.initial_lon",{"_index":1617,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.settings.initial_zoom",{"_index":1621,"title":{},"body":{"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["this.sidebarservice.closesidebar",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sidebarservice.opensidebar",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarservice.sidebarobservable",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarservice.togglesidebar",{"_index":1359,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.sidebarstatussubject.asobservable",{"_index":1687,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.next(!this.sidebarstatussubject.getvalue",{"_index":1693,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.next(false",{"_index":1695,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.next(true",{"_index":1694,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidebarstatussubject.value",{"_index":1692,"title":{},"body":{"injectables/SidebarService.html":{}}}],["this.sidenav.close",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.open",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.opened",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.openedchange.subscribe((open",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.toggle",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open('no",{"_index":1252,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.snapshotdatasubscription",{"_index":1111,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.snapshotdatasubscription.unsubscribe",{"_index":1161,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.startupdater",{"_index":1841,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.startvehicleupdater",{"_index":1224,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.status.next",{"_index":1113,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.next(this.status.value",{"_index":1157,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.next(val",{"_index":1153,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value",{"_index":1118,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.passages",{"_index":1119,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.status",{"_index":1128,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.status.value.timestamp",{"_index":1124,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.statuscode",{"_index":1139,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.stopid",{"_index":1750,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stoploadsubscription",{"_index":1869,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoploadsubscription.closed",{"_index":1883,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocation",{"_index":1766,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stoplocations",{"_index":1879,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocations.length",{"_index":1885,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationssubject.asobservable",{"_index":1888,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationssubject.next(locations",{"_index":1876,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationssubject.value",{"_index":1874,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["this.stoplocationsubject",{"_index":1842,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.stoplocationsubject.next(loc",{"_index":1840,"title":{},"body":{"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer",{"_index":950,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stopmarkerlayer.addto(this.getmap",{"_index":952,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer.clearlayers",{"_index":951,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.stopmarkerlayer.remove",{"_index":1307,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stopmarkeronclick.bind(this",{"_index":1312,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.stops[idx",{"_index":1920,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.stops[idx].name.charat(0",{"_index":1919,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["this.stopservice.getstoplocation(id",{"_index":1764,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.stopservice.stoplocationsobservable",{"_index":1296,"title":{},"body":{"directives/MainMapDirective.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.subscription",{"_index":1582,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.subscription.unsubscribe",{"_index":1586,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{}}}],["this.tickinterval",{"_index":1753,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.tickstorefresh",{"_index":1756,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["this.timestamp",{"_index":616,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.timestampsubject",{"_index":620,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.timestampsubject.next(timestamp",{"_index":613,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["this.toolbar.closeable",{"_index":1354,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["this.tripdata",{"_index":1134,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripdata.actual",{"_index":1136,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripdata.routename",{"_index":1135,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.tripid",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["this.updateobservable",{"_index":947,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.updateobservable.unsubscribe",{"_index":985,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.updatesubscription",{"_index":617,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":626,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["this.userlocationlayer",{"_index":1060,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationlayer.addto(this.map",{"_index":1062,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationlayer.clearlayers",{"_index":1061,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationservice",{"_index":1053,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["this.userlocationservice.location",{"_index":1249,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclelocationsubject",{"_index":948,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclelocationsubject.getvalue",{"_index":919,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclelocationsubject.next(id",{"_index":918,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["this.vehiclemarkerlayer",{"_index":1213,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.addto(this.getmap",{"_index":1215,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.clearlayers",{"_index":1214,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehiclemarkerlayer.on('click",{"_index":1216,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehicleupdatesubscription",{"_index":1269,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.vehicleupdatesubscription.unsubscribe",{"_index":1316,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.zone.run",{"_index":1284,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["this.zone.runoutsideangular",{"_index":1021,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["throw",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throwerror",{"_index":1955,"title":{},"body":{"guards/StopsResolver.html":{}}}],["throwerror(err",{"_index":1962,"title":{},"body":{"guards/StopsResolver.html":{}}}],["tick",{"_index":1732,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tickinterval",{"_index":1705,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["ticksleft",{"_index":1755,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["tickstorefresh",{"_index":1706,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["time",{"_index":590,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/RouteListComponent.html":{},"components/StopInfoComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["timeout",{"_index":2114,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["timer",{"_index":607,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"directives/MainMapDirective.html":{},"components/StopInfoComponent.html":{},"modules/TripPassagesModule.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["timer(this.tickinterval",{"_index":1752,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["timer.directive",{"_index":637,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["timer.directive.ts",{"_index":577,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"coverage.html":{}}}],["timer.directive.ts:13",{"_index":597,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:14",{"_index":602,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:15",{"_index":600,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:21",{"_index":589,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:27",{"_index":592,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:35",{"_index":594,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:39",{"_index":596,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.directive.ts:56",{"_index":595,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timer.module.ts",{"_index":631,"title":{},"body":{"modules/CountdownTimerModule.html":{}}}],["timer/countdown",{"_index":576,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"modules/CountdownTimerModule.html":{},"coverage.html":{}}}],["timestamp",{"_index":580,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["timestampsubject",{"_index":581,"title":{},"body":{"directives/CountdownTimerDirective.html":{}}}],["timeuntilrefresh",{"_index":1708,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["timeuntilrefresh}}s",{"_index":1783,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["title=\"@@stopname\",i18n",{"_index":1780,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["toggle",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{}}}],["toggle(mat",{"_index":1367,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["togglesearch",{"_index":1330,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["togglesidebar",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"injectables/SidebarService.html":{}}}],["toolbar",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["toolbar'},{'name",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["toolbar(color=\"primary\",[ngclass]=\"{'search",{"_index":1364,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar(color=\"primary\",[ngclass]=\"{\\'search",{"_index":1407,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component",{"_index":1423,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["toolbar.component.pug",{"_index":1325,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["toolbar.component.scss",{"_index":1324,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["toolbar.component.ts",{"_index":1323,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["toolbar.component.ts:12",{"_index":1476,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["toolbar.component.ts:27",{"_index":1332,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":1342,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:38",{"_index":1344,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:42",{"_index":1340,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:44",{"_index":1338,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:46",{"_index":1333,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:49",{"_index":1337,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:53",{"_index":1335,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:56",{"_index":1336,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.component.ts:7",{"_index":1475,"title":{},"body":{"classes/NavigationSubscriber.html":{}}}],["toolbar.main",{"_index":1363,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["toolbar.module",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.module.ts",{"_index":1414,"title":{},"body":{"modules/MainToolbarModule.html":{}}}],["toolbar/main",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"classes/NavigationSubscriber.html":{},"coverage.html":{}}}],["toolbar/route",{"_index":1567,"title":{},"body":{"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"coverage.html":{}}}],["toolbar/search",{"_index":1967,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{},"coverage.html":{}}}],["toolbarsearchboxcomponent",{"_index":335,"title":{"components/ToolbarSearchBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"modules/MainToolbarModule.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Bounds.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/SidebarComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["top:0px",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["top:100px",{"_index":1934,"title":{},"body":{"components/StopsInfoComponent.html":{}}}],["topleft",{"_index":1257,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["topright",{"_index":1258,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["transform",{"_index":2082,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["transition",{"_index":1465,"title":{},"body":{"components/MapHeaderBoxComponent.html":{}}}],["trapeze",{"_index":2238,"title":{},"body":{"index.html":{}}}],["tree",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["tried",{"_index":1121,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["trigger",{"_index":1154,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["trip",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trip_origin",{"_index":2068,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["tripdata",{"_index":1117,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["tripdata?.directiontext",{"_index":2049,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["tripid",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassages",{"_index":1102,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassages\",[routerlink]=\"['/stop",{"_index":2063,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["trippassages\",[routerlink]=\"[\\'/stop",{"_index":2087,"title":{},"body":{"components/TripPassagesComponent.html":{}}}],["trippassagescomponent",{"_index":337,"title":{"components/TripPassagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"interfaces/IPassageStatus.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["trippassageslocation",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/typealiases.html":{}}}],["trippassagesmodule",{"_index":2088,"title":{"modules/TripPassagesModule.html":{}},"body":{"modules/TripPassagesModule.html":{},"modules.html":{},"overview.html":{}}}],["trippassagesresolver",{"_index":2097,"title":{"guards/TripPassagesResolver.html":{}},"body":{"modules/TripPassagesModule.html":{},"guards/TripPassagesResolver.html":{},"modules/TripPassagesRoutingModule.html":{},"coverage.html":{}}}],["trippassagesroute",{"_index":1902,"title":{},"body":{"modules/StopRoutingModule.html":{},"modules/StopsRoutingModule.html":{},"modules/TripPassagesRoutingModule.html":{}}}],["trippassagesroutingmodule",{"_index":2092,"title":{"modules/TripPassagesRoutingModule.html":{}},"body":{"modules/TripPassagesModule.html":{},"modules/TripPassagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["true",{"_index":387,"title":{},"body":{"injectables/AppErrorHandler.html":{},"modules/AppModule.html":{},"components/DepartureListComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"modules/StopRoutingModule.html":{},"components/TripPassagesComponent.html":{},"modules/TripPassagesRoutingModule.html":{},"injectables/UserLocationService.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":407,"title":{},"body":{"injectables/AppErrorHandler.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"classes/AppPreloadingStrategy.html":{},"interfaces/Bounds.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IEnvironmentBase.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"classes/NavigationSubscriber.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"guards/TripPassagesResolver.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2261,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1110,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["types",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Bounds.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IPassageStatus.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"guards/StopInfoResolver.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/VehicleLoadSubscriber.html":{},"dependencies.html":{}}}],["types/dist/vehicle",{"_index":716,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["types/leaflet",{"_index":2212,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1559,"title":{},"body":{"components/RouteListComponent.html":{}}}],["uncaught",{"_index":404,"title":{},"body":{"injectables/AppErrorHandler.html":{}}}],["undefined",{"_index":657,"title":{},"body":{"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"guards/StopsResolver.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["unknown",{"_index":1097,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unset",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":1125,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"components/TripPassagesComponent.html":{}}}],["updatedata",{"_index":1707,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["updatedata(data",{"_index":1719,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["updateobservable",{"_index":872,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["updates",{"_index":1024,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["updatestatus",{"_index":1087,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updatestatus.error",{"_index":1140,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.loaded",{"_index":1115,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.loading",{"_index":1126,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatestatus.not_found",{"_index":1143,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["updatesubscription",{"_index":582,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{}}}],["usage",{"_index":2245,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":379,"title":{},"body":{"injectables/AppErrorHandler.html":{},"components/SidebarComponent.html":{},"components/StopsInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1056,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["user.name",{"_index":2006,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["userlocationlayer",{"_index":1020,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userlocationservice",{"_index":441,"title":{"injectables/UserLocationService.html":{}},"body":{"modules/AppModule.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{},"overview.html":{}}}],["userlocationsubscriber",{"_index":1007,"title":{"classes/UserLocationSubscriber.html":{}},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{},"coverage.html":{}}}],["userlocationsubscriber(this",{"_index":1055,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["userposition",{"_index":1064,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["uses",{"_index":1389,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["using",{"_index":1387,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["util",{"_index":1959,"title":{},"body":{"guards/StopsResolver.html":{}}}],["util/retry",{"_index":2191,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["val",{"_index":625,"title":{},"body":{"directives/CountdownTimerDirective.html":{},"components/StopInfoComponent.html":{}}}],["val.passages.tripid",{"_index":1152,"title":{},"body":{"interfaces/IPassageStatus.html":{},"components/TripPassagesComponent.html":{}}}],["value",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"injectables/StopPointService.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.coords",{"_index":1011,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["value.stopinfo",{"_index":1777,"title":{},"body":{"components/StopInfoComponent.html":{}}}],["value.stops",{"_index":1871,"title":{},"body":{"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{}}}],["value[1",{"_index":1271,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["values",{"_index":2251,"title":{},"body":{"index.html":{}}}],["var",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{},"components/RetryDialogComponent.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"components/SidebarComponent.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["variable",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2270,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veh",{"_index":1219,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["veh.isdeleted",{"_index":1221,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle",{"_index":735,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"miscellaneous/variables.html":{}}}],["vehicle.heading",{"_index":1293,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.longitude",{"_index":1291,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.name",{"_index":1294,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle.name.split",{"_index":1288,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicle_status",{"_index":713,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.departed",{"_index":730,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.planned",{"_index":733,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.predicted",{"_index":728,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicle_status.stopping",{"_index":731,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["vehicleicon",{"_index":953,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicleid",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["vehicleloadsubscriber",{"_index":1209,"title":{"classes/VehicleLoadSubscriber.html":{}},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{},"coverage.html":{}}}],["vehicleloadsubscriber(this",{"_index":1281,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehiclelocationsubject",{"_index":873,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["vehiclemarker",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vehiclemarkerlayer",{"_index":1181,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicles",{"_index":1199,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicles.vehicles",{"_index":1220,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["vehicleupdatesubscription",{"_index":1182,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["version",{"_index":991,"title":{},"body":{"interfaces/IEnvironmentBase.html":{},"components/SidebarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version.full",{"_index":1654,"title":{},"body":{"components/SidebarComponent.html":{}}}],["version.ts",{"_index":2195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["via",{"_index":1822,"title":{},"body":{"guards/StopInfoResolver.html":{}}}],["viewchild",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["viewchild('mapcontainer",{"_index":1015,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["viewchild('searchinput",{"_index":1994,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["viewchild(drawabledirective",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matautocomplete",{"_index":1989,"title":{},"body":{"components/ToolbarSearchBoxComponent.html":{}}}],["viewchild(matsidenav",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsidenavcontainer",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(toolbarsearchboxcomponent",{"_index":1339,"title":{},"body":{"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{}}}],["void",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppErrorHandler.html":{},"injectables/AppNotificationService.html":{},"directives/CountdownTimerDirective.html":{},"components/DepartureListComponent.html":{},"components/DepartureListItemComponent.html":{},"directives/DrawableDirective.html":{},"directives/FollowBusMapDirective.html":{},"interfaces/IAppNotification.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"interfaces/IPassageStatus.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"components/MainToolbarComponent.html":{},"classes/NavigationSubscriber.html":{},"components/RetryDialogComponent.html":{},"classes/RetryDialogData.html":{},"components/RouteListComponent.html":{},"components/RouteLoadingIndicatorComponent.html":{},"classes/RouteLoadingSubscriber.html":{},"classes/RoutesSubscriber.html":{},"classes/SettingsLoadSubscriber.html":{},"injectables/SettingsService.html":{},"components/SidebarComponent.html":{},"injectables/SidebarService.html":{},"components/StopInfoComponent.html":{},"directives/StopLocationMapDirective.html":{},"classes/StopPointLoadSubscriber.html":{},"injectables/StopPointService.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{},"injectables/UserLocationService.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["waits",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warning",{"_index":1658,"title":{},"body":{"components/SidebarComponent.html":{}}}],["waypoint",{"_index":921,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["waypoint.lon",{"_index":925,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"classes/RoutesSubscriber.html":{}}}],["weight",{"_index":758,"title":{},"body":{"components/DepartureListItemComponent.html":{},"directives/FollowBusMapDirective.html":{},"components/MapHeaderBoxComponent.html":{},"classes/RoutesSubscriber.html":{},"components/TripPassagesComponent.html":{}}}],["white",{"_index":1235,"title":{},"body":{"directives/MainMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["width",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/MainToolbarComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/StopsInfoComponent.html":{}}}],["width:#{$boxmaxwidth",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["width:$boxmaxwidth",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["width:100",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CommonErrorComponent.html":{},"components/NotFoundComponent.html":{},"components/ToolbarSearchBoxComponent.html":{}}}],["width:100vw",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["width:439px",{"_index":1398,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["width:440px",{"_index":1403,"title":{},"body":{"components/MainToolbarComponent.html":{}}}],["width:64px",{"_index":569,"title":{},"body":{"components/CommonErrorComponent.html":{},"components/MapHeaderBoxComponent.html":{},"components/NotFoundComponent.html":{}}}],["window.innerheight",{"_index":846,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["window.innerwidth",{"_index":844,"title":{},"body":{"directives/DrawableDirective.html":{}}}],["window.open('https://github.com/donmahallem/trapezeclientng",{"_index":1651,"title":{},"body":{"components/SidebarComponent.html":{}}}],["worker",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["wrapper",{"_index":1079,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["x",{"_index":810,"title":{},"body":{"directives/DrawableDirective.html":{},"components/StopInfoComponent.html":{},"components/StopsInfoComponent.html":{}}}],["y",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"directives/DrawableDirective.html":{},"components/StopsInfoComponent.html":{}}}],["y2lyy2xlign4psizncigy3k9ijm0iibypsizmiigbwfzaz0idxjskcnhksig",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y2xhc3m9imhlyxz5iib4psiznciget0indyiigzpbgw9imjsywnriibzdhjv",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y:auto",{"_index":1667,"title":{},"body":{"components/SidebarComponent.html":{}}}],["ybpzd0iysi+dqo8cmvjdcb3awr0ad0imtawiibozwlnahq9ijewmcigzmlsbd0ii2zmziiv",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1592,"title":{},"body":{"classes/RouteLoadingSubscriber.html":{},"components/ToolbarSearchBoxComponent.html":{},"components/TripPassagesComponent.html":{}}}],["z",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/MapHeaderBoxComponent.html":{}}}],["zero",{"_index":694,"title":{},"body":{"components/DepartureListItemComponent.html":{}}}],["zgrszsi+sdwvdgv4dd4ncjwvbwfzaz4ncjxnigzpbhrlcj0idxjskcniksig",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zindexoffset",{"_index":965,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["zone",{"_index":878,"title":{},"body":{"directives/FollowBusMapDirective.html":{},"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"directives/MainMapDirective.html":{},"classes/RoutesSubscriber.html":{},"directives/StopLocationMapDirective.html":{},"classes/UserLocationSubscriber.html":{},"classes/VehicleLoadSubscriber.html":{}}}],["zone.js",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/CountdownTimerModule.html":{},"modules/ErrorModule.html":{},"modules/MainMapModule.html":{},"modules/MainToolbarModule.html":{},"modules/MapHeaderBoxModule.html":{},"modules/RetryDialogModule.html":{},"modules/SidebarModule.html":{},"modules/StopModule.html":{},"modules/StopsModule.html":{},"modules/TripPassagesModule.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":1030,"title":{},"body":{"interfaces/IMapBounds.html":{},"interfaces/IMapMoveEndEvent.html":{},"interfaces/IMapMoveStartEvent.html":{},"classes/LeafletMapComponent.html":{},"classes/UserLocationSubscriber.html":{}}}],["zpsjodhrwoi8vd3d3lnczlm9yzy8ymdawl3n2zyi+dqo8c3r5bgu+lmhlyxz5ihsgzm9udd",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                getRouteByTripId\n                            \n                            \n                                    Public\n                                getRouteByVehicleId\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getStations\n                            \n                            \n                                    Public\n                                getStopInfo\n                            \n                            \n                                    Public\n                                getStopPassages\n                            \n                            \n                                    Public\n                                getTripPassages\n                            \n                            \n                                    Public\n                                getVehicleLocation\n                            \n                            \n                                    Public\n                                getVehicleLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            baseUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    baseUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRouteByTripId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteByTripId(tripId: TripId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                            TripId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRouteByVehicleId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteByVehicleId(vehicleId: VehicleId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                            VehicleId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopInfo(stopId: StopId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopId\n                                    \n                                            StopId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopPassages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopPassages(stopId: StopId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopId\n                                    \n                                            StopId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTripPassages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTripPassages(tripId: TripId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                            TripId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVehicleLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVehicleLocation(vehicleId: VehicleId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicleId\n                                    \n                                            VehicleId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVehicleLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVehicleLocations(bounds: IMapBounds)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bounds\n                                    \n                                                IMapBounds\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n    ISettings,\n    IStopInfo,\n    IStopLocations,\n    IStopPassage,\n    IVehicleLocation,\n    IVehicleLocationList,\n    StopId,\n    TripId,\n    VehicleId,\n} from '@donmahallem/trapeze-api-types';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { TripPassagesLocation } from '../models';\nimport { IMapBounds } from '../modules/common/leaflet-map.component';\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiService {\n\n    constructor(private http: HttpClient) { }\n\n    public baseUrl(): string {\n        return environment.apiEndpoint.endsWith('\\/') ? environment.apiEndpoint : (environment.apiEndpoint + '\\/');\n    }\n\n    public getTripPassages(tripId: TripId): Observable {\n        return this.http.get(this.baseUrl() + 'api/trip/' + tripId + '/passages?mode=departure');\n    }\n    public getRouteByVehicleId(vehicleId: VehicleId): Observable {\n        return this.http.get(this.baseUrl() + 'api/vehicle/' + vehicleId + '/route');\n    }\n    public getRouteByTripId(tripId: TripId): Observable {\n        return this.http.get(this.baseUrl() + 'api/trip/' + tripId + '/route');\n    }\n    public getStopInfo(stopId: StopId): Observable {\n        return this.http.get(this.baseUrl() + 'api/stop/' + stopId + '/info');\n    }\n    public getStopPassages(stopId: StopId): Observable {\n        return this.http.get(this.baseUrl() + 'api/stop/' + stopId + '/departures');\n    }\n    public getVehicleLocations(bounds: IMapBounds): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/vehicles', {\n            params: {\n                bottom: '' + Math.round(bounds.bottom * 3600000),\n                left: '' + Math.round(bounds.left * 3600000),\n                right: '' + Math.round(bounds.right * 3600000),\n                top: '' + Math.round(bounds.top * 3600000),\n            },\n        });\n    }\n    public getVehicleLocation(vehicleId: VehicleId): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/vehicle/' + vehicleId);\n    }\n\n    public getStations(): Observable {\n        return this.http.get(this.baseUrl() + 'api/geo/stops');\n    }\n\n    public getSettings(): Observable {\n        return this.http.get(this.baseUrl() + 'api/settings');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                prediction\n                            \n                            \n                                predictions\n                            \n                            \n                                sidenav\n                            \n                            \n                                sidenavContainer\n                            \n                            \n                                title\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onVoted\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isSidenavOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onVoted\n                        \n                        \n                    \n                \n            \n            \n                \nonVoted(agreed: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    agreed\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(DrawableDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prediction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            predictions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenavContainer\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenavContainer)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tripId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isSidenavOpen\n                    \n                \n\n                \n                    \n                        getisSidenavOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavContainer } from '@angular/material';\nimport { DrawableDirective } from './drawable.directive';\nimport { SidebarService } from './services/sidebar.service';\n@Component({\n    selector: 'app-root',\n    styleUrls: ['./app.component.scss'],\n    templateUrl: './app.component.pug',\n})\nexport class AppComponent implements OnInit {\n    title = 'app';\n    prediction: any;\n\n    @ViewChild(MatSidenavContainer)\n    sidenavContainer: MatSidenavContainer;\n    @ViewChild(MatSidenav)\n    sidenav: MatSidenav;\n    predictions: any;\n    tripId: string;\n    constructor(private sidebarService: SidebarService) {\n    }\n    @ViewChild(DrawableDirective) canvas;\n    ngOnInit() {\n        this.sidebarService.sidebarObservable\n            .subscribe((open) => {\n                if (open) {\n                    this.sidenav.open();\n                } else {\n                    this.sidenav.close();\n                }\n            });\n        this.sidenav.openedChange.subscribe((open) => {\n            if (open) {\n                this.sidebarService.openSidebar();\n            } else {\n                this.sidebarService.closeSidebar();\n            }\n        });\n    }\n    onVoted(agreed: any) {\n        this.tripId = agreed.tripId;\n    }\n\n    public toggleSidebar(): void {\n        this.sidenav.toggle();\n    }\n\n    public get isSidenavOpen(): boolean {\n        return this.sidenav.opened;\n    }\n\n}\n\n    \n\n    \n        mat-sidenav-container.main-container(#sidenavContainer,[hasBackdrop]=\"true\")\n    mat-sidenav.main-nav(#sidenav,mode=\"over\")\n        app-sidebar\n    mat-sidenav-content\n        map(appMainMap)\n        .overlay-box\n            .router-box\n                router-outlet\n            app-main-toolbar\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0px;\n    padding: 0px;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    overflow: hidden;\n    flex-direction: column;\n    display: flex;\n}\n\n@import './box-settings.scss';\nmat-sidenav-container {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: row;\n}\n\nmat-sidenav-content{\n    align-self: stretch;\n    display:block;\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    position:fixed;\n}\nmap[appMainMap]{\n    height:100%;\n    width:100%;\n    display:block;\n}\n\nbutton.sidebar-toggle {\n    position: absolute;\n    top: 8px;\n    left: 16px;\n    z-index: 10001;\n}\n\nmat-sidenav.main-nav {\n    width: 100%;\n    max-width: 400px;\n    display: flex;\n    overflow: hidden;\n}\n\n@import '~@angular/material/theming';\n\n$searchBorderRadius: 8px;\n\napp-main-toolbar{\n    max-width: $boxMaxWidth;\n    position: absolute;\n    top:0px;\n    left:0px;\n    right:0px;\n    margin:$boxMarginVertical auto 0px auto;\n    z-index: #{$overlayZIndex};\n    border-radius: $searchBorderRadius;\n    border:1px solid rgb(87, 99, 207);\n    @include mat-elevation(4);\n    overflow: hidden;\n}\n@keyframes overlay-box-expand-animation {\n    to {\n        width:100vw;\n    }\n    from {\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n    }\n}\n@keyframes overlay-box-contract-animation {\n    from {\n        width:100vw;\n    }\n    to {\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n    }\n}\n\n.overlay-box{\n    display:block;\n    z-index: #{$overlayZIndex - 1};\n    width: 100vw;\n    position: absolute;\n    top:0px;\n    left:0px;\n    right:0px;\n    bottom:0px;\n    pointer-events:none;\n    animation-name: overlay-box-expand-animation;\n    animation-duration: 1s;\n    app-main-toolbar{\n        margin:#{$boxMarginVertical} auto 0 auto;\n        pointer-events:visible;\n    }\n    .router-box{\n        z-index: #{$overlayZIndex - 1};\n        width: 100%;\n        position: absolute;\n        top:0px;\n        left:0px;\n        right:0px;\n        bottom:0px;\n        overflow:auto;\n        ::ng-deep > *:not(:first-child) {\n            background-color:#F9F9F9;\n            pointer-events:visible;\n            height:100%;\n            background-attachment: fixed;\n            display: flex;\n            flex: 1;\n            flex-direction: column;\n            overflow-y: auto;\n            @include mat-elevation(4);\n        }\n    }\n    @media (max-width: #{$boxMaxWidth + (2 * $boxMarginHorizontal)}) and (min-width: #{$boxMaxWidth + 1}){\n        app-main-toolbar{\n            border-radius: calc( #{$searchBorderRadius /(2 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n            margin-top: calc( #{$boxMarginVertical /(2 * $boxMarginHorizontal)}*(100vw - #{$boxMaxWidth}) );\n        }\n    }\n    @media (min-width: $breakpoint){\n        app-main-toolbar{\n            right:unset;\n            margin:$boxMarginVertical 0px 0px $boxMarginHorizontal;\n            width:$boxMaxWidth;\n        }\n    \n        // Needed for dropshadow to appear for nav box\n        $rightPadding: 20px;\n        .router-box{\n            padding-right:$rightPadding;\n        }\n    }\n\n    @media (max-width: #{$boxMaxWidth} ){\n        app-main-toolbar{\n            border-radius: 0px;\n            margin-top: 0px;\n        }\n    }\n}\n\n@media (min-width: #{$breakpoint }){\n    .overlay-box{\n        animation-name: overlay-box-contract-animation;\n        animation-duration: 1s;\n        width:#{$boxMaxWidth + (2 * $boxMarginHorizontal)};\n        right:unset;\n    }\n}\n@media (max-width: #{$boxMaxWidth} ){\n    .overlay-box{\n        display:flex;\n        flex-direction: column;\n        position: absolute;\n        align-items: stretch;\n        app-main-toolbar{\n            margin:0px;\n            position: relative;\n            flex:0 0 auto;\n            order: 1;\n        }\n        .router-box{\n            position: unset;\n            flex:1 1 auto;\n            order: 2;\n            height: 100%;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-sidenav-container.main-container(#sidenavContainer,[hasBackdrop]=\"true\")    mat-sidenav.main-nav(#sidenav,mode=\"over\")        app-sidebar    mat-sidenav-content        map(appMainMap)        .overlay-box            .router-box                router-outlet            app-main-toolbar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppErrorHandler.html":{"url":"injectables/AppErrorHandler.html","title":"injectable - AppErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-error-handler.ts\n        \n\n            \n                Description\n            \n            \n                AppErrorHandler to catch global errors\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                            \n                                    Public\n                                handleHttpErrorResponse\n                            \n                            \n                                    Public\n                                isClientOffline\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-error-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: Error | HttpErrorResponse | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:25\n                \n            \n\n\n            \n                \n                    Handles all errors\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error | HttpErrorResponse | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleHttpErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleHttpErrorResponse(errorResponse: HttpErrorResponse, notificationService: AppNotificationService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:47\n                \n            \n\n\n            \n                \n                    Handles HttpErrorResponses\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the response to handle\n\n                                    \n                                \n                                \n                                    notificationService\n                                    \n                                                AppNotificationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the notification service to be used\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isClientOffline\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isClientOffline()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-error-handler.ts:18\n                \n            \n\n\n            \n                \n                    If the browser supports the online tag it will\nreturns its value. otherwise it will always be true\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the navigator is offline\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AppNotificationService, AppNotificationType } from './services/app-notification.service';\n\n/**\n * AppErrorHandler to catch global errors\n */\n@Injectable()\nexport class AppErrorHandler implements ErrorHandler {\n\n    public constructor(private injector: Injector) { }\n\n    /**\n     * If the browser supports the online tag it will\n     * returns its value. otherwise it will always be true\n     * @returns true if the navigator is offline\n     */\n    public isClientOffline(): boolean {\n        return (navigator.onLine === false);\n    }\n\n    /**\n     * Handles all errors\n     */\n    public handleError(error: Error | HttpErrorResponse | any): void {\n        // The notification service\n        const notificationService: AppNotificationService = this.injector.get(AppNotificationService);\n        if (error instanceof HttpErrorResponse) {\n            return this.handleHttpErrorResponse(error, notificationService);\n        } else {\n            notificationService.notify({\n                message: error.message,\n                reportable: true,\n                title: 'Uncaught error occured',\n                type: AppNotificationType.ERROR,\n            });\n        }\n        // tslint:disable-next-line:no-console\n        console.error('It happens: ', error);\n    }\n\n    /**\n     * Handles HttpErrorResponses\n     * @param errorResponse the response to handle\n     * @param notificationService the notification service to be used\n     */\n    public handleHttpErrorResponse(errorResponse: HttpErrorResponse, notificationService: AppNotificationService): void {\n        // Server or connection error happened\n        if (this.isClientOffline()) {\n            // Handle offline error\n            return notificationService.notify({\n                title: 'No Internet Connection',\n                type: AppNotificationType.ERROR,\n            });\n        } else if (errorResponse.status) {\n            if (errorResponse.status >= 500 && errorResponse.status = 400 && errorResponse.status \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrawableDirective\n\nDrawableDirective\n\nAppModule -->\n\nDrawableDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainMapModule\n\nMainMapModule\n\nAppModule -->\n\nMainMapModule->AppModule\n\n\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nAppModule -->\n\nMainToolbarModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nAppNotificationService\n\nAppNotificationService\n\nAppModule -->\n\nAppNotificationService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nStopPointService\n\nStopPointService\n\nAppModule -->\n\nStopPointService->AppModule\n\n\n\n\n\nUserLocationService\n\nUserLocationService\n\nAppModule -->\n\nUserLocationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DrawableDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppNotificationService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            StopPointService\n                        \n                        \n                            UserLocationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainMapModule\n                        \n                        \n                            MainToolbarModule\n                        \n                        \n                            SidebarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { MatIconModule, MatInputModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AppErrorHandler } from './app-error-handler';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DrawableDirective } from './drawable.directive';\nimport { MainMapModule } from './modules/main-map';\nimport { MainToolbarModule } from './modules/main-toolbar/main-toolbar.module';\nimport { SidebarModule } from './modules/sidebar/sidebar.module';\nimport { AppNotificationService } from './services/app-notification.service';\nimport { SettingsService } from './services/settings.service';\nimport { StopPointService } from './services/stop-point.service';\nimport { UserLocationService } from './services/user-location.service';\n\nexport const SettingsInitializer = (appInitService: SettingsService) => {\n    return (): Promise => {\n        return appInitService.load();\n    };\n};\nconst moduleImports: any[] = [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatInputModule,\n    MainMapModule,\n    MainToolbarModule,\n    SidebarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production && environment.pwa === true,\n    }),\n];\n@NgModule({\n    bootstrap: [AppComponent],\n    declarations: [\n        AppComponent,\n        DrawableDirective,\n    ],\n    imports: moduleImports,\n    providers: [\n        StopPointService,\n        UserLocationService,\n        SettingsService,\n        AppNotificationService,\n        {\n            deps: [SettingsService],\n            multi: true,\n            provide: APP_INITIALIZER,\n            useFactory: SettingsInitializer,\n        },\n        {\n            provide: ErrorHandler,\n            useClass: AppErrorHandler,\n        },\n    ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppNotificationService.html":{"url":"injectables/AppNotificationService.html","title":"injectable - AppNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notificationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notificationObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app-notification.service.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notify(noti: IAppNotification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-notification.service.ts:56\n                \n            \n\n\n            \n                \n                    Will publish the notification\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    noti\n                                    \n                                                IAppNotification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the notification\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notificationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/app-notification.service.ts:49\n                            \n                        \n\n                \n                    \n                        Subject for replaying notifcations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notificationObservable\n                    \n                \n\n                \n                    \n                        getnotificationObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/app-notification.service.ts:63\n                                \n                            \n                    \n                        \n                                The notification observable\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    constructor() { }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preload\n                        \n                        \n                    \n                \n            \n            \n                \npreload(route: Route, load: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-preloading-strategy.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    load\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n  preload(route: Route, load: Function): Observable {\n    return route.path.startsWith('error') ? load() : EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nconst appRoutes: Routes = [\n    {\n        loadChildren: './modules/trip-passages/trip-passages.module#TripPassagesModule',\n        path: 'passages',\n    },\n    {\n        loadChildren: './modules/stop/stop.module#StopModule',\n        path: 'stop',\n    },\n    {\n        loadChildren: './modules/stops/stops.module#StopsModule',\n        path: 'stops',\n    },\n    {\n        loadChildren: './modules/error/error.module#ErrorModule',\n        path: 'error',\n    },\n    {\n        children: [\n        ],\n        path: '',\n    },\n    {\n        path: '**', redirectTo: '/error/not-found',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes,\n            {\n                enableTracing: false,\n                preloadingStrategy: AppPreloadingStrategy,\n            }, // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Bounds.html":{"url":"interfaces/Bounds.html","title":"interface - Bounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Bounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITripPassages, IVehicleLocation } from '@donmahallem/trapeze-api-types';\n\nexport interface Bounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport type TripPassagesLocation = ITripPassages & {\n    location: IVehicleLocation,\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommonErrorComponent.html":{"url":"components/CommonErrorComponent.html","title":"component - CommonErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommonErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/error/common-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-common-error\n            \n\n            \n                styleUrls\n                ./common-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./common-error.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/error/common-error.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n@Component({\n    selector: 'app-common-error',\n    styleUrls: ['./common-error.component.scss'],\n    templateUrl: './common-error.component.pug',\n})\nexport class CommonErrorComponent {\n\n    constructor() {\n    }\n\n}\n\n    \n\n    \n        .header\n    mat-icon help_outline\nh3 Error Occured\np An error occured while performing an action.\n    \n\n    \n                \n                    ./common-error.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    flex-flow: column;\n    height: 100%;\n    background: #F9F9F9;\n}\n\n.header{\n    position: relative;\n    height:calc(100vw / 4 * 3);\n    width:100%;\n    max-height: 250px;\n    min-height:150px;\n    background:#999999;\n    mat-icon{\n        position: absolute;\n        top:0px;\n        right:0px;\n        bottom:0px;\n        left:0px;\n        margin:auto;\n        width:64px;\n        height: 64px;\n        font-size: 64px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.header    mat-icon help_outlineh3 Error Occuredp An error occured while performing an action.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommonErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CountdownTimerDirective.html":{"url":"directives/CountdownTimerDirective.html","title":"directive - CountdownTimerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CountdownTimerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/countdown-timer/countdown-timer.directive.ts\n        \n\n            \n                Description\n            \n            \n                CountdownTimerDirective\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        span[appCountdownTimer]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                timestampSubject\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                targetTime\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                innerHTML\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    targetTime\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : '-'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:21\n                            \n                        \n                \n                    \n                        Placeholder if time has run out\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        targetTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:27\n                            \n                        \n                \n                    \n                        Sets the targetTime\n\n                    \n                \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            innerHTML\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:35\n                            \n                        \n\n                \n                    \n                        The innerHtml for the directive\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestampSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        targetTime\n                    \n                \n\n\n                \n                    \n                        settargetTime(timestamp: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/common/countdown-timer/countdown-timer.directive.ts:27\n                                \n                            \n                    \n                        \n                                Sets the targetTime\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            timestamp\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { combineLatest, timer, BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * CountdownTimerDirective\n */\n@Directive({\n    selector: 'span[appCountdownTimer]',\n})\nexport class CountdownTimerDirective implements OnInit, OnDestroy {\n\n    private timestamp = '';\n    private updateSubscription: Subscription;\n    private timestampSubject: BehaviorSubject = new BehaviorSubject(0);\n\n    /**\n     * Placeholder if time has run out\n     */\n    @Input()\n    public placeholder = '-';\n\n    /**\n     * Sets the targetTime\n     */\n    @Input()\n    public set targetTime(timestamp: number) {\n        this.timestampSubject.next(timestamp);\n    }\n\n    /**\n     * The innerHtml for the directive\n     */\n    @HostBinding('innerHTML')\n    public get text() {\n        return this.timestamp;\n    }\n\n    public ngOnInit(): void {\n        this.updateSubscription = combineLatest([timer(0, 200), this.timestampSubject])\n            .pipe(map((value: [number, number]): string => {\n                const diff: number = Math.max(value[1] - Date.now(), 0);\n                if (diff  {\n                this.timestamp = val;\n            }));\n\n    }\n\n    public ngOnDestroy(): void {\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CountdownTimerModule.html":{"url":"modules/CountdownTimerModule.html","title":"module - CountdownTimerModule","body":"\n                   \n\n\n\n\n    Modules\n    CountdownTimerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CountdownTimerModule\n\n\n\ncluster_CountdownTimerModule_declarations\n\n\n\ncluster_CountdownTimerModule_exports\n\n\n\n\nCountdownTimerDirective\n\nCountdownTimerDirective\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nCountdownTimerModule -->\n\nCountdownTimerDirective->CountdownTimerModule\n\n\n\n\n\nCountdownTimerDirective \n\nCountdownTimerDirective \n\nCountdownTimerDirective  -->\n\nCountdownTimerModule->CountdownTimerDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/countdown-timer/countdown-timer.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module containing the CountdownDirective\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CountdownTimerDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CountdownTimerDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n} from '@angular/material';\nimport { CountdownTimerDirective } from './countdown-timer.directive';\n\n/**\n * Module containing the CountdownDirective\n */\n@NgModule({\n    declarations: [\n        CountdownTimerDirective,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        CountdownTimerDirective,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class CountdownTimerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartureListComponent.html":{"url":"components/DepartureListComponent.html","title":"component - DepartureListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DepartureListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/departure-list.component.ts\n\n\n    \n        Description\n    \n    \n        List of Departures Component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-departure-list\n            \n\n            \n                styleUrls\n                ./departure-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./departure-list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                departures\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    departures\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        departures\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list.component.ts:23\n                            \n                        \n                \n                    \n                        set the departures\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasDepartures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasDepartures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list.component.ts:38\n                \n            \n\n\n            \n                \n                    Returns if the atleast one departure was provided\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if there is atleast one departure\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDepartures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDeparture[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        departures\n                    \n                \n\n                \n                    \n                        getdepartures()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list.component.ts:30\n                                \n                            \n                    \n                        \n                                departures\n\n\n                                \n                                    Returns :     IDeparture[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setdepartures(deps: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list.component.ts:23\n                                \n                            \n                    \n                        \n                                set the departures\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { IDeparture } from '@donmahallem/trapeze-api-types';\n\n/**\n * List of Departures Component\n */\n@Component({\n    selector: 'app-departure-list',\n    styleUrls: ['./departure-list.component.scss'],\n    templateUrl: './departure-list.component.pug',\n})\nexport class DepartureListComponent {\n\n    private mDepartures: IDeparture[] = [];\n\n    /**\n     * set the departures\n     */\n    @Input('departures')\n    public set departures(deps: IDeparture[]) {\n        this.mDepartures = deps ? deps : [];\n    }\n\n    /**\n     * departures\n     */\n    public get departures(): IDeparture[] {\n        return this.mDepartures ? this.mDepartures : [];\n    }\n\n    /**\n     * Returns if the atleast one departure was provided\n     * @returns true if there is atleast one departure\n     */\n    public hasDepartures(): boolean {\n        return this.mDepartures !== undefined && this.mDepartures.length > 0;\n    }\n\n}\n\n    \n\n    \n        mat-nav-list(*ngIf=\"hasDepartures()\",role=\"list\")\n    app-departure-list-item(*ngFor=\"let passage of departures\",[departure]=\"passage\")\n.no-departures(*ngIf=\"!hasDepartures()\")\n    h4 No Departures\n    \n\n    \n                \n                    ./departure-list.component.scss\n                \n                :host{\n    display:block;\n}\ndiv.no-departures{\n    margin:15px;\n}\nspan.delay{\n    color:red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list(*ngIf=\"hasDepartures()\",role=\"list\")    app-departure-list-item(*ngFor=\"let passage of departures\",[departure]=\"passage\").no-departures(*ngIf=\"!hasDepartures()\")    h4 No Departures'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'DepartureListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartureListItemComponent.html":{"url":"components/DepartureListItemComponent.html","title":"component - DepartureListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DepartureListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/departure-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-departure-list-item\n            \n\n            \n                styleUrls\n                ./departure-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./departure-list-item.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDelay\n                            \n                            \n                                    Private\n                                mDeparture\n                            \n                            \n                                    Private\n                                mTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateDelay\n                            \n                            \n                                    Public\n                                convertTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                departure\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    departure\n                                \n                                \n                                    time\n                                \n                                \n                                    statusIcon\n                                \n                                \n                                    status\n                                \n                                \n                                    delay\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        departure\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:35\n                            \n                        \n                \n                    \n                        Sets the departure\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            calculateDelay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateDelay(data: IDeparture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list-item.component.ts:96\n                \n            \n\n\n            \n                \n                    Calculates the delay\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IDeparture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a number except 0 or false\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"undefined\" | number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(data: IDeparture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/departure-list-item.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IDeparture\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean | number\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:24\n                            \n                        \n\n                \n                    \n                        The delay of the departure. Can be positive or negative excluding zero\nor false if no delay is to be expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDeparture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDeparture\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:19\n                            \n                        \n\n                \n                    \n                        Object holding the current departure\nCan be undefined\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:28\n                            \n                        \n\n                \n                    \n                        The time of arrival\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        departure\n                    \n                \n\n                \n                    \n                        getdeparture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:45\n                                \n                            \n                    \n                        \n                                gets the departure\n\n\n                                \n                                \n                                \n                                    Returns :     IDeparture\n\n                                \n                        \n                    \n\n                \n                    \n                        setdeparture(deps)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:35\n                                \n                            \n                    \n                        \n                                Sets the departure\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The departures\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n\n                \n                    \n                        gettime()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusIcon\n                    \n                \n\n                \n                    \n                        getstatusIcon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:71\n                                \n                            \n                    \n                        \n                                Returns the DepartureStatus\n\n\n                                \n                                \n                                \n                                    Returns :     VEHICLE_STATUS\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        delay\n                    \n                \n\n                \n                    \n                        getdelay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/departure-list-item.component.ts:88\n                                \n                            \n                    \n                        \n                                Returns the delay\n\n\n                                \n                                \n                                \n                                    Returns :     boolean | number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { IDeparture } from '@donmahallem/trapeze-api-types';\nimport { VEHICLE_STATUS } from '@donmahallem/trapeze-api-types/dist/vehicle-status';\nimport * as moment from 'moment';\n@Component({\n    selector: 'app-departure-list-item',\n    styleUrls: ['./departure-list-item.component.scss'],\n    templateUrl: './departure-list-item.component.pug',\n})\nexport class DepartureListItemComponent {\n\n    /**\n     * Object holding the current departure\n     * Can be undefined\n     */\n    private mDeparture: IDeparture = undefined;\n    /**\n     * The delay of the departure. Can be positive or negative excluding zero\n     * or false if no delay is to be expected\n     */\n    private mDelay: boolean | number = false;\n    /**\n     * The time of arrival\n     */\n    private mTime = '';\n\n    /**\n     * Sets the departure\n     * @param deps The departures\n     */\n    @Input('departure')\n    public set departure(deps: IDeparture) {\n        this.mDeparture = deps;\n        this.mDelay = this.calculateDelay(deps);\n        this.mTime = this.convertTime(deps);\n    }\n\n    /**\n     * gets the departure\n     * @returns the departure or undefined\n     */\n    public get departure(): IDeparture {\n        return this.mDeparture;\n    }\n\n    public get time(): string {\n        return this.mTime;\n    }\n\n    public get statusIcon(): string {\n        switch (this.mDeparture.status) {\n            case VEHICLE_STATUS.PREDICTED:\n                return 'directions_bus';\n            case VEHICLE_STATUS.DEPARTED:\n                return 'directions_bus';\n            case VEHICLE_STATUS.STOPPING:\n                return 'departure_board';\n            case VEHICLE_STATUS.PLANNED:\n            default:\n                return 'query_builder';\n        }\n    }\n\n    /**\n     * Returns the DepartureStatus\n     * @returns vehicle status {@VEHICLE_STATUS}\n     */\n    public get status(): VEHICLE_STATUS {\n        return this.mDeparture.status;\n    }\n\n    public convertTime(data: IDeparture) {\n        const time: number = data.actualRelativeTime;\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n\n    /**\n     * Returns the delay\n     * @returns false or an integer except 0\n     */\n    public get delay(): boolean | number {\n        return this.mDelay;\n    }\n\n    /**\n     * Calculates the delay\n     * @param data a number except 0 or false\n     */\n    public calculateDelay(data: IDeparture): false | number {\n        if (data && data.actualTime && data.plannedTime) {\n            if (data.actualTime !== data.plannedTime) {\n                const actual: moment.Moment = moment(data.actualTime, 'HH:mm');\n                const planned: moment.Moment = moment(data.plannedTime, 'HH:mm');\n                let diffMinutes: number = moment.duration(actual.diff(planned)).asMinutes();\n                if (diffMinutes > 60 * 12) {\n                    diffMinutes -= 60 * 24;\n                } else if (diffMinutes \n    \n\n    \n        a([routerLink]=\"['/passages', departure.tripId]\",role=\"listitem\")\n    mat-list-item\n        mat-icon(matListIcon,title=\"{{status}}\") {{statusIcon}}\n        span.pattern-text(*ngIf=\"delay!==false\",[ngClass]=\"{'late':(delay>0),'early':(delay\n    \n\n    \n                \n                    ./departure-list-item.component.scss\n                \n                :host{\n    display:block;\n}\ndiv.no-departures{\n    margin:15px;\n}\nspan.pattern-text{\n    font-weight: bold;\n}\n\nspan.pattern-text.late{\n    color:#d50000;\n}\nspan.pattern-text.late:before{\n    content: '+';\n}\nspan.pattern-text.early{\n    color:#00d500;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'a([routerLink]=\"[\\'/passages\\', departure.tripId]\",role=\"listitem\")    mat-list-item        mat-icon(matListIcon,title=\"{{status}}\") {{statusIcon}}        span.pattern-text(*ngIf=\"delay!==false\",[ngClass]=\"{\\'late\\':(delay>0),\\'early\\':(delay'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'DepartureListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DrawableDirective.html":{"url":"directives/DrawableDirective.html","title":"directive - DrawableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DrawableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/drawable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDrawable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                ctx\n                            \n                            \n                                pos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getImgData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPosition\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                newImage\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mousedown\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mousemove\n                            \n                            \n                                mouseup\n                            \n                            \n                                resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/drawable.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        newImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mousedown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousedown(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseenter(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:26\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousemove(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:36\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmouseup(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nresize(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:56\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ImageData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawable.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CanvasRenderingContext2D\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { x: 0, y: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawable.directive.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[appDrawable]',\n})\nexport class DrawableDirective implements OnInit {\n    pos = { x: 0, y: 0 };\n    ctx: CanvasRenderingContext2D;\n    canvas: HTMLCanvasElement;\n\n    @Output() newImage = new EventEmitter();\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        this.canvas = this.el.nativeElement as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onUp(e) {\n        this.newImage.emit(this.getImgData());\n    }\n\n    @HostListener('mouseenter', ['$event'])\n    onEnter(e) {\n        this.setPosition(e);\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMove(e) {\n        this.setPosition(e);\n    }\n\n    @HostListener('mousemove', ['$event'])\n    onDown(e) {\n\n        if (e.buttons !== 1) {\n            return;\n        }\n\n        this.ctx.beginPath(); // begin\n\n        this.ctx.lineWidth = 10;\n        this.ctx.lineCap = 'round';\n        this.ctx.strokeStyle = '#111111';\n\n        this.ctx.moveTo(this.pos.x, this.pos.y);\n        this.setPosition(e);\n        this.ctx.lineTo(this.pos.x, this.pos.y);\n\n        this.ctx.stroke();\n    }\n\n    @HostListener('resize', ['$event'])\n    onResize(e) {\n        this.ctx.canvas.width = window.innerWidth;\n        this.ctx.canvas.height = window.innerHeight;\n    }\n\n    setPosition(e) {\n        this.pos.x = e.offsetX;\n        this.pos.y = e.offsetY;\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n\n    getImgData(): ImageData {\n        return this.ctx.getImageData(0, 0, 300, 300);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\n\nCommonErrorComponent\n\nCommonErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nCommonErrorComponent->ErrorModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nErrorModule -->\n\nNotFoundComponent->ErrorModule\n\n\n\n\n\nErrorRoutingModule\n\nErrorRoutingModule\n\nErrorModule -->\n\nErrorRoutingModule->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/error/error.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CommonErrorComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule, MatListModule,\n} from '@angular/material';\nimport { CommonErrorComponent } from './common-error.component';\nimport { ErrorRoutingModule } from './error-routing.module';\nimport { NotFoundComponent } from './not-found.component';\n@NgModule({\n    declarations: [\n        NotFoundComponent,\n        CommonErrorComponent,\n    ],\n    imports: [\n        ErrorRoutingModule,\n        CommonModule,\n        MatListModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class ErrorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorRoutingModule.html":{"url":"modules/ErrorRoutingModule.html","title":"module - ErrorRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/error/error-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonErrorComponent } from './common-error.component';\nimport { NotFoundComponent } from './not-found.component';\n\nconst errorRoutes: Routes = [\n    {\n        component: CommonErrorComponent,\n        path: '',\n    },\n    {\n        component: NotFoundComponent,\n        path: 'not-found',\n    },\n    {\n        path: '**',\n        redirectTo: 'not-found',\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(errorRoutes),\n    ],\n})\nexport class ErrorRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FollowBusMapDirective.html":{"url":"directives/FollowBusMapDirective.html","title":"directive - FollowBusMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FollowBusMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/follow-bus-map.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appTripPassages]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routePolyLines\n                            \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                updateObservable\n                            \n                            \n                                    Private\n                                vehicleLocationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRoutePaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, userLocationService: UserLocationService, zone: NgZone, apiService: ApiService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:33\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRoutePaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRoutePaths(paths: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routePolyLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Polyline[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n                \n                    \n                        getlocation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:37\n                                \n                            \n\n                \n                    \n                        setlocation(id)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IVehicleLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, mergeMap } from 'rxjs/operators';\nimport { createVehicleIcon } from 'src/app/leaflet';\nimport { ApiService } from 'src/app/services';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\nexport class RoutesSubscriber extends Subscriber {\n    public constructor(private map: FollowBusMapDirective) {\n        super();\n    }\n    public next(routes) {\n        this.map.setRoutePaths(routes.paths);\n    }\n}\n@Directive({\n    selector: 'map[appTripPassages]',\n})\nexport class FollowBusMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    private vehicleLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        private apiService: ApiService,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n    @Input('location')\n    public set location(id: IVehicleLocation) {\n        this.vehicleLocationSubject.next(id);\n    }\n\n    public get location(): IVehicleLocation {\n        return this.vehicleLocationSubject.getValue();\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private updateObservable: Subscription;\n    private routePolyLines: L.Polyline[] = [];\n\n    public setRoutePaths(paths: any[]): void {\n        for (const path of paths) {\n            const pointList: any[] = [];\n            for (const wayPoint of path.wayPoints) {\n                pointList.push(new L.LatLng(wayPoint.lat / 3600000, wayPoint.lon / 3600000));\n            }\n            const firstpolyline = L.polyline(pointList, {\n                color: path.color,\n                opacity: 0.5,\n                smoothFactor: 1,\n                weight: 3,\n            });\n            firstpolyline.addTo(this.getMap());\n            this.routePolyLines.push(firstpolyline);\n        }\n    }\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n    public addMarker(): void {\n        this.updateObservable = this.vehicleLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n\n                    const vehicleIcon: L.DivIcon = createVehicleIcon(location.heading, location.name.split(' ')[0], 40);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            clickable: false,\n                            icon: vehicleIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    (marker).setRotationAngle(location.heading - 90);\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n        this.vehicleLocationSubject\n            .pipe(\n                filter(num => num !== null),\n                distinctUntilChanged(),\n                mergeMap(boundsa => {\n                    return this.apiService.getRouteByTripId(boundsa.tripId);\n                }))\n            .subscribe(new RoutesSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.updateObservable.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppNotification.html":{"url":"interfaces/IAppNotification.html","title":"interface - IAppNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-notification.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        reportable\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification Message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportable\n                                    \n                                \n                                \n                                    \n                                        reportable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reportable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Notification Title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         AppNotificationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppNotificationType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Notification Type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Notification Type\n */\nexport enum AppNotificationType {\n    /**\n     * Alert\n     */\n    ALERT = 1,\n    /**\n     * Info\n     */\n    INFO = 2,\n    /**\n     * Error\n     */\n    ERROR = 3,\n}\n\nexport interface IAppNotification {\n    /**\n     * Notification Type\n     */\n    type?: AppNotificationType;\n    /**\n     * Notification Title\n     */\n    title: string;\n    /**\n     * Notification Message\n     */\n    message?: string;\n    /**\n     * Reportable\n     */\n    reportable?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppNotificationService {\n\n    /**\n     * Subject for replaying notifcations\n     */\n    private notificationSubject: Subject = new Subject();\n    constructor() { }\n\n    /**\n     * Will publish the notification\n     * @param noti the notification\n     */\n    public notify(noti: IAppNotification): void {\n        this.notificationSubject.next(noti);\n    }\n\n    /**\n     * The notification observable\n     */\n    public get notificationObservable(): Observable {\n        return this.notificationSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnvironmentBase.html":{"url":"interfaces/IEnvironmentBase.html","title":"interface - IEnvironmentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEnvironmentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/environment.base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiEndpoint\n                                \n                                \n                                        production\n                                \n                                \n                                            Optional\n                                        pwa\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pwa\n                                    \n                                \n                                \n                                    \n                                        pwa:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         AppVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppVersion\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AppVersion } from './app-version';\n\nexport interface IEnvironmentBase {\n    readonly apiEndpoint: string;\n    readonly production: boolean;\n    readonly pwa?: boolean;\n    readonly version: AppVersion;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapBounds.html":{"url":"interfaces/IMapBounds.html","title":"interface - IMapBounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapBounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                                \n                                        right\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapMoveEndEvent.html":{"url":"interfaces/IMapMoveEndEvent.html","title":"interface - IMapMoveEndEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapMoveEndEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         MapMoveEventType.END\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapMoveEventType.END\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapMoveStartEvent.html":{"url":"interfaces/IMapMoveStartEvent.html","title":"interface - IMapMoveStartEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMapMoveStartEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         MapMoveEventType.START\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapMoveEventType.START\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPassageStatus.html":{"url":"interfaces/IPassageStatus.html","title":"interface - IPassageStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPassageStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        failures\n                                \n                                \n                                        passages\n                                \n                                \n                                        status\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failures\n                                    \n                                \n                                \n                                    \n                                        failures:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passages\n                                    \n                                \n                                \n                                    \n                                        passages:         TripPassagesLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TripPassagesLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         UpdateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UpdateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IActualTripPassage, TripId } from '@donmahallem/trapeze-api-types';\nimport { from, BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, debounceTime, flatMap, map } from 'rxjs/operators';\nimport { TripPassagesLocation } from 'src/app/models';\nimport { ApiService } from '../../services';\n\nenum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status: UpdateStatus;\n    passages: TripPassagesLocation;\n    timestamp: number;\n    failures?: number;\n}\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.pug',\n})\nexport class TripPassagesComponent implements AfterViewInit, OnDestroy {\n    public readonly DEBOUNCE_TIME: number = 5000;\n    private status: BehaviorSubject = new BehaviorSubject(undefined);\n    private snapshotDataSubscription: Subscription;\n    private pollSubscription: Subscription;\n    public readonly StatusOps: typeof UpdateStatus = UpdateStatus;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private router: Router) {\n        this.snapshotDataSubscription = this.route.data.subscribe((data) => {\n            this.status.next({\n                passages: data['tripPassages'],\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n            });\n        });\n    }\n\n    /**\n     * Returns the TripPassages\n     * @returns undefined or {@link TripPassagesLocation}\n     */\n    public get tripData(): TripPassagesLocation {\n        if (this.status.value) {\n            return this.status.value.passages;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the last timestamp when data was tried to be retrieved\n     * @returns number or 0 if no timestamp is set\n     */\n    public get lastTimestamp(): number {\n        if (this.status.value) {\n            return this.status.value.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns the current set update status or {@link UpdateStatus.LOADING}\n     * @returns the {@link UpdateStatus}\n     */\n    public get statusCode(): UpdateStatus {\n        if (this.status.value) {\n            return this.status.value.status;\n        }\n        return UpdateStatus.LOADING;\n    }\n\n    /**\n     * returns the current tripID\n     */\n    public get tripId(): TripId {\n        return this.route.snapshot.params.tripId;\n    }\n\n    /**\n     * short hand to retrieve route name\n     */\n    public get routeName(): string {\n        return (this.tripData) ? this.tripData.routeName : '';\n    }\n\n    /**\n     * List of passages\n     */\n    public get tripPassages(): IActualTripPassage[] {\n        return (this.tripData !== undefined) ? this.tripData.actual : [];\n    }\n\n    /**\n     * Returns if an error has happened during the last update\n     * @returns true if an error occured\n     */\n    public hasError(): boolean {\n        return this.statusCode >= UpdateStatus.ERROR;\n    }\n\n    private handleError(err?: any): Observable {\n        let status: UpdateStatus = UpdateStatus.ERROR;\n        if (err.status) {\n            // Http Error\n            const statusCode: number = err.status;\n            if (statusCode === 404) {\n                status = UpdateStatus.NOT_FOUND;\n                this.router.navigate(['not-found'], {\n                    queryParams: {\n                        type: 'passages',\n                    },\n                });\n            } else if (statusCode >= 500 && statusCode  {\n                return this.route.snapshot.params['tripId'];\n            }),\n            flatMap((tripId: TripId) => {\n                return this.apiService.getTripPassages(tripId);\n            }),\n            map((passages: TripPassagesLocation): IPassageStatus => {\n                return {\n                    passages: passages,\n                    status: UpdateStatus.LOADED,\n                    timestamp: Date.now(),\n                };\n            }),\n            catchError(this.handleError.bind(this)))\n            .subscribe(new Subscriber((val: IPassageStatus) => {\n                if (val.passages.tripId === this.tripId) {\n                    this.status.next(val);\n                } else {\n                    // trigger so a reload can execute\n                    this.status.next(this.status.value);\n                }\n            }));\n    }\n    /**\n     * destroys created update observables\n     */\n    public ngOnDestroy(): void {\n        if (this.snapshotDataSubscription) {\n            this.snapshotDataSubscription.unsubscribe();\n        }\n        if (this.pollSubscription) {\n            this.pollSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeafletMapComponent.html":{"url":"classes/LeafletMapComponent.html","title":"class - LeafletMapComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeafletMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                mapContainer\n                            \n                            \n                                    Public\n                                    Readonly\n                                mapMove\n                            \n                            \n                                    Private\n                                mUserLocationSubscription\n                            \n                            \n                                    Private\n                                userLocationLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addLayer\n                            \n                            \n                                    Public\n                                getMap\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    mapBounds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, zone: NgZone, userLocationService: UserLocationService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/leaflet-map.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mapcontainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            mapMove\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mUserLocationSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userLocationLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addLayer(layer: L.Layer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                            L.Layer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Layer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.Map | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(coords: Coordinates)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:84\n                \n            \n\n\n            \n                \n                    Sets the user location. To clear the location set it to undefined\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coords\n                                    \n                                            Coordinates\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The coords or undefined\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        mapBounds\n                    \n                \n\n                \n                    \n                        getmapBounds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/common/leaflet-map.component.ts:119\n                                \n                            \n                    \n                        \n                                wrapper for this.map.getBounds()\n\n\n                                \n                                    Returns :         L.LatLngBounds\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MainMapDirective.html":{"url":"directives/MainMapDirective.html","title":"directive - MainMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MainMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appMainMap]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                vehicleMarkerLayer\n                            \n                            \n                                    Private\n                                vehicleUpdateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                addVehicleMarker\n                            \n                            \n                                    Public\n                                markerOnClick\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setVehicles\n                            \n                            \n                                    Public\n                                startVehicleUpdater\n                            \n                            \n                                    Public\n                                stopMarkerOnClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, apiService: ApiService, router: Router, stopService: StopPointService, userLocationService: UserLocationService, snackBar: MatSnackBar, settings: SettingsService, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-map/main-map.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addVehicleMarker\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addVehicleMarker(vehicle: IVehicleLocation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicle\n                                    \n                                            IVehicleLocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     L.Marker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            markerOnClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markerOnClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setVehicles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setVehicles(vehicles: IVehicleLocationList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vehicles\n                                    \n                                            IVehicleLocationList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startVehicleUpdater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startVehicleUpdater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopMarkerOnClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopMarkerOnClick(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            vehicleUpdateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-map/main-map.directive.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { combineLatest, from, timer, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map, startWith } from 'rxjs/operators';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { createStopIcon, createVehicleIcon } from '../../leaflet';\nimport { IMapBounds, LeafletMapComponent, MapMoveEvent, MapMoveEventType } from '../../modules/common/leaflet-map.component';\nimport { StopPointService } from '../../services/stop-point.service';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { ApiService } from './../../services';\n\nexport class VehicleLoadSubscriber extends Subscriber {\n\n    public constructor(private mainMap: MainMapDirective) {\n        super();\n    }\n    public next(res: IVehicleLocationList): void {\n        this.mainMap.setVehicles(res);\n    }\n}\n\n@Directive({\n    selector: 'map[appMainMap]',\n})\nexport class MainMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(elRef: ElementRef,\n        private apiService: ApiService,\n        private router: Router,\n        private stopService: StopPointService,\n        userLocationService: UserLocationService,\n        private snackBar: MatSnackBar,\n        settings: SettingsService,\n        zone: NgZone) {\n        super(elRef, zone, userLocationService, settings);\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleUpdateSubscription: Subscription;\n\n    public setVehicles(vehicles: IVehicleLocationList): void {\n        if (this.vehicleMarkerLayer !== undefined) {\n            this.vehicleMarkerLayer.clearLayers();\n        } else {\n            this.vehicleMarkerLayer = L.featureGroup();\n            this.vehicleMarkerLayer.addTo(this.getMap());\n            this.vehicleMarkerLayer.on('click', this.markerOnClick.bind(this));\n        }\n        if (vehicles && Array.isArray(vehicles.vehicles)) {\n            for (const veh of vehicles.vehicles) {\n                if (veh.isDeleted === true) {\n                    continue;\n                }\n                this.addVehicleMarker(veh).addTo(this.vehicleMarkerLayer);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.startVehicleUpdater();\n        const ourCustomControl = L.Control.extend({\n            onAdd: () => {\n                const container = L.DomUtil.create('i', 'material-icons leaflet-bar leaflet-control leaflet-control-custom');\n                container.style.backgroundColor = 'white';\n                container.style.width = '42px';\n                container.style.height = '42px';\n                container.style.lineHeight = '42px';\n                container.style.textAlign = 'center';\n                container.style.verticalAlign = 'center';\n                container.style.cursor = 'pointer';\n                container.innerHTML = 'my_location';\n                container.style.userSelect = 'none';\n                container.style.msUserSelect = 'none';\n                container.onclick = () => {\n                    if (this.userLocationService.location) {\n                        const pos: Position = this.userLocationService.location;\n                        this.getMap().panTo({\n                            alt: 5000,\n                            lat: pos.coords.latitude, // / 3600000,\n                            lng: pos.coords.longitude, // / 3600000,\n                        },\n                            { animate: true });\n                    } else {\n                        this.snackBar.open('No location acquired yet!',\n                            undefined,\n                            {\n                                duration: 2000,\n                            });\n                    }\n                };\n                return container;\n            },\n            options: {\n                position: 'bottomright',\n                // control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'\n            },\n        });\n        this.getMap().addControl(new ourCustomControl());\n        // this.getMap().flyTo(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n    }\n\n    public startVehicleUpdater(): void {\n        // as mapMove doesn't emit on init this needs to be provided to load atleast once\n        const primedMoveObservable: Observable = this.mapMove.pipe(\n            startWith({\n                type: MapMoveEventType.END,\n            }));\n        this.vehicleUpdateSubscription = combineLatest([timer(0, 5000), primedMoveObservable])\n            .pipe(\n                map((value: [number, MapMoveEvent]): MapMoveEvent => {\n                    return value[1];\n                }),\n                filter((event: MapMoveEvent): boolean => {\n                    return (event.type === MapMoveEventType.END);\n                }),\n                flatMap((moveEvent: MapMoveEvent) => {\n                    const bounds: IMapBounds = {\n                        bottom: this.mapBounds.getSouth(),\n                        left: this.mapBounds.getWest(),\n                        right: this.mapBounds.getEast(),\n                        top: this.mapBounds.getNorth(),\n                    };\n                    return this.apiService.getVehicleLocations(bounds);\n                }),\n                catchError((err: Error) => {\n                    return from([{}]);\n                }))\n            .subscribe(new VehicleLoadSubscriber(this));\n    }\n\n    public markerOnClick(event) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['passages', event.sourceTarget.data.tripId]);\n        });\n    }\n    public addVehicleMarker(vehicle: IVehicleLocation): L.Marker {\n        const vehicleIcon: L.DivIcon = createVehicleIcon(vehicle.heading, vehicle.name.split(' ')[0], 40);\n        const markerT: any = L.marker([vehicle.latitude / 3600000, vehicle.longitude / 3600000], \n            {\n                icon: vehicleIcon,\n                rotationAngle: vehicle.heading - 90,\n                title: vehicle.name,\n                zIndexOffset: 100,\n            });\n        markerT.data = vehicle;\n        return markerT;\n    }\n    public addMarker() {\n        this.stopService.stopLocationsObservable\n            .subscribe((stops: IStopLocation[]) => {\n                const stopList: L.Marker[] = [];\n                for (const stop of stops) {\n                    if (stop === null) {\n                        continue;\n                    }\n                    const greenIcon = createStopIcon();\n                    const markerT: L.Marker = L.marker([stop.latitude / 3600000, stop.longitude / 3600000],\n                        {\n                            clickable: true,\n                            icon: greenIcon,\n                            riseOffset: 10,\n                            riseOnHover: true,\n                            title: stop.name,\n                            zIndexOffset: 10,\n                        });\n                    (markerT).data = stop;\n                    stopList.push(markerT);\n                }\n                if (this.stopMarkerLayer !== undefined) {\n                    this.stopMarkerLayer.remove();\n                }\n                const featureGroup: L.FeatureGroup = L.featureGroup(stopList);\n                this.stopMarkerLayer = featureGroup.addTo(this.getMap());\n                featureGroup.on('click', this.stopMarkerOnClick.bind(this));\n            });\n    }\n\n    public stopMarkerOnClick(event: { sourceTarget: { data: IStopLocation } }) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['stop', event.sourceTarget.data.shortName]);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.vehicleUpdateSubscription) {\n            this.vehicleUpdateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainMapModule.html":{"url":"modules/MainMapModule.html","title":"module - MainMapModule","body":"\n                   \n\n\n\n\n    Modules\n    MainMapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainMapModule\n\n\n\ncluster_MainMapModule_declarations\n\n\n\ncluster_MainMapModule_exports\n\n\n\n\nMainMapDirective\n\nMainMapDirective\n\n\n\nMainMapModule\n\nMainMapModule\n\nMainMapModule -->\n\nMainMapDirective->MainMapModule\n\n\n\n\n\nMainMapDirective \n\nMainMapDirective \n\nMainMapDirective  -->\n\nMainMapModule->MainMapDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainMapDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainMapDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatSnackBarModule,\n} from '@angular/material';\nimport { MainMapDirective } from './main-map.directive';\n@NgModule({\n    declarations: [\n        MainMapDirective,\n    ],\n    exports: [\n        CommonModule,\n        MatSnackBarModule,\n        MainMapDirective,\n    ],\n    imports: [\n        MatSnackBarModule,\n        CommonModule,\n    ],\n})\nexport class MainMapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarComponent.html":{"url":"components/MainToolbarComponent.html","title":"component - MainToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/main-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-toolbar\n            \n\n            \n                styleUrls\n                ./main-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-toolbar.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeable\n                            \n                            \n                                    Private\n                                mSearchOpen\n                            \n                            \n                                    Private\n                                searchBoxComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFocusSearch\n                            \n                            \n                                    Public\n                                toggleSearch\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: SidebarService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFocusSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFocusSearch(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSearchOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBoxComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarSearchBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ToolbarSearchBoxComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchOpen\n                    \n                \n\n                \n                    \n                        getsearchOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:34\n                                \n                            \n\n                \n                    \n                        setsearchOpen(open: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            open\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\nexport class NavigationSubscriber extends Subscriber {\n\n    public constructor(private toolbar: MainToolbarComponent) {\n        super();\n    }\n    public next(event: RouterEvent): void {\n        if (event instanceof NavigationEnd && event.url.length > 1) {\n            this.toolbar.closeable = true;\n        } else if (event instanceof NavigationStart) {\n            this.toolbar.closeable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-main-toolbar',\n    styleUrls: ['./main-toolbar.component.scss'],\n    templateUrl: './main-toolbar.component.pug',\n})\nexport class MainToolbarComponent implements OnInit {\n    public closeable = false;\n\n    constructor(private sidebarService: SidebarService,\n        private router: Router) {\n        this.router.events.subscribe(new NavigationSubscriber(this));\n    }\n\n    public get searchOpen(): boolean {\n        return this.mSearchOpen;\n    }\n\n    public set searchOpen(open: boolean) {\n        this.mSearchOpen = open;\n    }\n    @ViewChild(ToolbarSearchBoxComponent)\n    private searchBoxComponent: ToolbarSearchBoxComponent;\n\n    private mSearchOpen = false;\n\n    ngOnInit() {\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarService.toggleSidebar();\n    }\n\n    public onFocusSearch(event) {\n        this.searchOpen = event;\n    }\n    public toggleSearch(): void {\n        if (this.searchBoxComponent) {\n            this.searchBoxComponent.doFocusSearch();\n        }\n    }\n\n}\n\n    \n\n    \n        mat-toolbar.main-toolbar(color=\"primary\",[ngClass]=\"{'search-open':(searchOpen===true),'navigation-closeable':(closeable===true)}\")\n    button.sidebar-toggle(mat-icon-button,(click)=\"toggleSidebar()\",i18n-aria-label=\"Toggle Sidebar@@toggleSidebar\",aria-label=\"Toggle Sidebar\",role=\"button\",aria-pressed=\"false\")\n        mat-icon menu\n    app-toolbar-search((focusSearch)=\"onFocusSearch($event)\")\n    button#btnSearch(mat-icon-button,(click)=\"toggleSearch()\")\n        mat-icon search\n    mat-divider.close-divider([vertical]=\"true\")\n    button.close(mat-icon-button,[routerLink]=\"['/']\")\n        mat-icon\napp-route-loading-indicator\n    \n\n    \n                \n                    ./main-toolbar.component.scss\n                \n                .fill-remaining-space {\n    /* This fills the remaining space, by using flexbox. \n       Every toolbar row uses a flexbox row layout. */\n    flex: 1 1 auto;\n}\n\n:host {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n.search-open{\n    app-toolbar-search{\n        opacity: 1;\n    }\n}\nbutton.sidebar-toggle{\n    display:block;\n}\n\n@media (max-width: 439px){\n    .navigation-closeable{\n        button.close{\n            display:none;\n        }\n        mat-divider.close-divider{\n            display:none;\n        }\n    }\n}\nbutton.close{\n    display:none;\n    ::after{\n        content: \"close\"\n    }\n}\nmat-divider.close-divider{\n    display:none;\n}\n@media (max-width:439px){\n    .navigation-closeable{\n        button.close{\n            display:block;\n            order: 1;\n            ::after{\n                content: \"arrow_back\"\n            }\n        }\n        mat-divider.close-divider{\n            display:none;\n        }\n        app-toolbar-search{\n            order:2;\n        }\n        button#btnSearch{\n            order:3;\n        }\n        button.sidebar-toggle{\n            display:none;\n        }\n    }\n}\n@media (min-width:440px){\n    .navigation-closeable{\n        button.close{\n            display:block;\n            order: 4;\n        }\n        mat-divider.close-divider{\n            display:block;\n            order: 3;\n        }\n    }\n}\n\napp-toolbar-search{\n    flex:1 1 auto;\n    opacity:0.4;\n}\n\nmat-toolbar mat-divider{\n    height:40px;\n    border-right-color: rgba(255,255,255,0.1);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-toolbar.main-toolbar(color=\"primary\",[ngClass]=\"{\\'search-open\\':(searchOpen===true),\\'navigation-closeable\\':(closeable===true)}\")    button.sidebar-toggle(mat-icon-button,(click)=\"toggleSidebar()\",i18n-aria-label=\"Toggle Sidebar@@toggleSidebar\",aria-label=\"Toggle Sidebar\",role=\"button\",aria-pressed=\"false\")        mat-icon menu    app-toolbar-search((focusSearch)=\"onFocusSearch($event)\")    button#btnSearch(mat-icon-button,(click)=\"toggleSearch()\")        mat-icon search    mat-divider.close-divider([vertical]=\"true\")    button.close(mat-icon-button,[routerLink]=\"[\\'/\\']\")        mat-iconapp-route-loading-indicator'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainToolbarModule.html":{"url":"modules/MainToolbarModule.html","title":"module - MainToolbarModule","body":"\n                   \n\n\n\n\n    Modules\n    MainToolbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainToolbarModule\n\n\n\ncluster_MainToolbarModule_declarations\n\n\n\ncluster_MainToolbarModule_exports\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nMainToolbarModule -->\n\nMainToolbarComponent->MainToolbarModule\n\n\n\n\n\nRouteLoadingIndicatorComponent\n\nRouteLoadingIndicatorComponent\n\nMainToolbarModule -->\n\nRouteLoadingIndicatorComponent->MainToolbarModule\n\n\n\n\n\nToolbarSearchBoxComponent\n\nToolbarSearchBoxComponent\n\nMainToolbarModule -->\n\nToolbarSearchBoxComponent->MainToolbarModule\n\n\n\n\n\nMainToolbarComponent \n\nMainToolbarComponent \n\nMainToolbarComponent  -->\n\nMainToolbarModule->MainToolbarComponent \n\n\n\n\n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent  -->\n\nMainToolbarModule->RouteLoadingIndicatorComponent \n\n\n\n\n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent  -->\n\nMainToolbarModule->ToolbarSearchBoxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-toolbar/main-toolbar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainToolbarComponent\n                        \n                        \n                            RouteLoadingIndicatorComponent\n                        \n                        \n                            ToolbarSearchBoxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainToolbarComponent\n                        \n                        \n                            RouteLoadingIndicatorComponent\n                        \n                        \n                            ToolbarSearchBoxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { MainToolbarComponent } from './main-toolbar.component';\nimport { RouteLoadingIndicatorComponent } from './route-loading-indicator.component';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\n@NgModule({\n    declarations: [\n        MainToolbarComponent,\n        ToolbarSearchBoxComponent,\n        RouteLoadingIndicatorComponent,\n    ],\n    exports: [\n        MainToolbarComponent,\n        CommonModule,\n        MatIconModule,\n        MatToolbarModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        RouterModule,\n        ToolbarSearchBoxComponent,\n        RouteLoadingIndicatorComponent,\n        MatProgressBarModule,\n        MatDividerModule,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatToolbarModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        MatDividerModule,\n        RouterModule,\n        MatProgressBarModule,\n    ],\n    providers: [\n    ],\n})\nexport class MainToolbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapHeaderBoxComponent.html":{"url":"components/MapHeaderBoxComponent.html","title":"component - MapHeaderBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapHeaderBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/common/map-header-box/map-header-box.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-header-box\n            \n\n            \n                styleUrls\n                ./map-header-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-header-box.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/common/map-header-box/map-header-box.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\n@Component({\n    selector: 'app-map-header-box',\n    styleUrls: ['./map-header-box.component.scss'],\n    templateUrl: './map-header-box.component.pug',\n})\nexport class MapHeaderBoxComponent {\n\n    @Input()\n    public title: string = undefined;\n    @Input()\n    public subtitle: string = undefined;\n    @Input()\n    @HostBinding('class.no-location')\n    public blur = false;\n}\n\n    \n\n    \n        ng-content\n.title-box\n    span.title(*ngIf=\"title!==undefined\",trole=\"heading\",aria-level=\"2\",title=\"{{title}}\") {{title}}\n    span.subtitle(*ngIf=\"subtitle!==undefined\",title=\"{{subtitle}}\") {{subtitle}}\nmat-icon location_off\n    \n\n    \n                \n                    ./map-header-box.component.scss\n                \n                :host {\n    position: relative;\n    min-height:250px;\n    max-height:300px;\n    height:calc(100vw / 4 * 3);\n    width: 100%;\n    user-select: none;\n    overflow:none;\n    flex:0 0;\n}\n\n:host > ::ng-deep map {\n    position: absolute;\n    display: block;\n    height: 100%;\n    width: 100%;\n    ::ng-deep .leaflet-control-attribution{\n        display:none;\n    }\n}\n\n.title-box{\n    position: absolute;\n    bottom:0px;\n    left:0px;\n    right:0px;\n    z-index: 800;\n    padding:20px 20px 10px 20px;\n    color:white;\n    text-shadow: 0 0 5px black;\n    background-image: linear-gradient(rgba(0,0,0,0.0), rgba(0,0,0,0.7));\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    span.title{\n        font-size: 20px;\n        font-weight: bold;\n    }\n    span.subtitle{\n        font-size: 12px;\n        font-weight: bold;\n    }\n}\nmat-icon{\n    position: absolute;\n    z-index: 799;\n    bottom:0px;\n    left:0px;\n    right:0px;\n    top:0px;\n    margin:auto;\n    font-size: 64px;\n    width:64px;\n    height:64px;\n    display:none;\n    color:white;\n}\n\n\n:host-context(.no-location){\n    ::ng-deep map {\n        filter: blur(2px) grayscale(100%) brightness(0.5);\n        transition: all 1s ease-out;\n    }\n    mat-icon{\n        display:block;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ng-content.title-box    span.title(*ngIf=\"title!==undefined\",trole=\"heading\",aria-level=\"2\",title=\"{{title}}\") {{title}}    span.subtitle(*ngIf=\"subtitle!==undefined\",title=\"{{subtitle}}\") {{subtitle}}mat-icon location_off'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapHeaderBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapHeaderBoxModule.html":{"url":"modules/MapHeaderBoxModule.html","title":"module - MapHeaderBoxModule","body":"\n                   \n\n\n\n\n    Modules\n    MapHeaderBoxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapHeaderBoxModule\n\n\n\ncluster_MapHeaderBoxModule_declarations\n\n\n\ncluster_MapHeaderBoxModule_exports\n\n\n\n\nMapHeaderBoxComponent\n\nMapHeaderBoxComponent\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule -->\n\nMapHeaderBoxComponent->MapHeaderBoxModule\n\n\n\n\n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent  -->\n\nMapHeaderBoxModule->MapHeaderBoxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/map-header-box/map-header-box.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapHeaderBoxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapHeaderBoxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n} from '@angular/material';\nimport { MapHeaderBoxComponent } from './map-header-box.component';\n\n@NgModule({\n    declarations: [\n        MapHeaderBoxComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        MapHeaderBoxComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n    ],\n    providers: [\n    ],\n})\nexport class MapHeaderBoxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationSubscriber.html":{"url":"classes/NavigationSubscriber.html","title":"class - NavigationSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-toolbar/main-toolbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(toolbar: MainToolbarComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toolbar\n                                                  \n                                                        \n                                                                        MainToolbarComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(event: RouterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/main-toolbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RouterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { Subscriber } from 'rxjs';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { ToolbarSearchBoxComponent } from './search-box.component';\n\nexport class NavigationSubscriber extends Subscriber {\n\n    public constructor(private toolbar: MainToolbarComponent) {\n        super();\n    }\n    public next(event: RouterEvent): void {\n        if (event instanceof NavigationEnd && event.url.length > 1) {\n            this.toolbar.closeable = true;\n        } else if (event instanceof NavigationStart) {\n            this.toolbar.closeable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-main-toolbar',\n    styleUrls: ['./main-toolbar.component.scss'],\n    templateUrl: './main-toolbar.component.pug',\n})\nexport class MainToolbarComponent implements OnInit {\n    public closeable = false;\n\n    constructor(private sidebarService: SidebarService,\n        private router: Router) {\n        this.router.events.subscribe(new NavigationSubscriber(this));\n    }\n\n    public get searchOpen(): boolean {\n        return this.mSearchOpen;\n    }\n\n    public set searchOpen(open: boolean) {\n        this.mSearchOpen = open;\n    }\n    @ViewChild(ToolbarSearchBoxComponent)\n    private searchBoxComponent: ToolbarSearchBoxComponent;\n\n    private mSearchOpen = false;\n\n    ngOnInit() {\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarService.toggleSidebar();\n    }\n\n    public onFocusSearch(event) {\n        this.searchOpen = event;\n    }\n    public toggleSearch(): void {\n        if (this.searchBoxComponent) {\n            this.searchBoxComponent.doFocusSearch();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/error/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                endpoints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/error/not-found.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'home',\n        path: '/',\n        title: 'Home',\n    }, {\n        icon: 'place',\n        path: '/stops',\n        title: 'Stops',\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/error/not-found.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n@Component({\n    selector: 'app-not-found',\n    styleUrls: ['./not-found.component.scss'],\n    templateUrl: './not-found.component.pug',\n})\nexport class NotFoundComponent {\n\n    public readonly endpoints: {\n        icon: string;\n        path: string;\n        title: string;\n    }[] = [{\n        icon: 'home',\n        path: '/',\n        title: 'Home',\n    }, {\n        icon: 'place',\n        path: '/stops',\n        title: 'Stops',\n    }];\n    constructor() {\n    }\n\n}\n\n    \n\n    \n        .header\n    mat-icon help_outline\nh3 Not Found\nmat-nav-list(role=\"list\")\n    mat-list-item(*ngFor=\"let endpoint of endpoints\",role=\"listitem\"[routerLink]=\"[endpoint.path]\")\n        mat-icon(matListIcon) {{endpoint.icon}}\n        h3(matLine) {{endpoint.title}}\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    flex-flow: column;\n    height: 100%;\n    background: #F9F9F9;\n}\n\n.header{\n    position: relative;\n    height:calc(100vw / 4 * 3);\n    width:100%;\n    max-height: 250px;\n    min-height:150px;\n    background:#999999;\n    mat-icon{\n        position: absolute;\n        top:0px;\n        right:0px;\n        bottom:0px;\n        left:0px;\n        margin:auto;\n        width:64px;\n        height: 64px;\n        font-size: 64px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.header    mat-icon help_outlineh3 Not Foundmat-nav-list(role=\"list\")    mat-list-item(*ngFor=\"let endpoint of endpoints\",role=\"listitem\"[routerLink]=\"[endpoint.path]\")        mat-icon(matListIcon) {{endpoint.icon}}        h3(matLine) {{endpoint.title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RetryDialogComponent.html":{"url":"components/RetryDialogComponent.html","title":"component - RetryDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RetryDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/common/retry-dialog/retry-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-retry-dialog\n            \n\n            \n                styleUrls\n                ./retry-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./retry-dialog.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: RetryDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        RetryDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RetryDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class RetryDialogData {\n    message?: string;\n    code?: number;\n}\n\n@Component({\n    selector: 'app-retry-dialog',\n    styleUrls: ['./retry-dialog.component.scss'],\n    templateUrl: './retry-dialog.component.pug',\n})\nexport class RetryDialogComponent {\n    constructor(public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: RetryDialogData) { }\n\n    public onNoClick(): void {\n        this.dialogRef.close(false);\n    }\n}\n\n    \n\n    \n        h1(mat-dialog-title) Error\ndiv(mat-dialog-content)\n    p {{data.message}}\n    p(*ngIf=\"data.code\") Code: {{data.code}}\ndiv(mat-dialog-actions)\n    button(mat-button,(click)=\"onNoClick()\") No Thanks\n    button(mat-button,[mat-dialog-close]=\"true\",cdkFocusInitial) Ok\n    \n\n    \n                \n                    ./retry-dialog.component.scss\n                \n                :host{\n    background: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'h1(mat-dialog-title) Errordiv(mat-dialog-content)    p {{data.message}}    p(*ngIf=\"data.code\") Code: {{data.code}}div(mat-dialog-actions)    button(mat-button,(click)=\"onNoClick()\") No Thanks    button(mat-button,[mat-dialog-close]=\"true\",cdkFocusInitial) Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RetryDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RetryDialogData.html":{"url":"classes/RetryDialogData.html","title":"class - RetryDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RetryDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/retry-dialog/retry-dialog.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                code\n                            \n                            \n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/common/retry-dialog/retry-dialog.component.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport class RetryDialogData {\n    message?: string;\n    code?: number;\n}\n\n@Component({\n    selector: 'app-retry-dialog',\n    styleUrls: ['./retry-dialog.component.scss'],\n    templateUrl: './retry-dialog.component.pug',\n})\nexport class RetryDialogComponent {\n    constructor(public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: RetryDialogData) { }\n\n    public onNoClick(): void {\n        this.dialogRef.close(false);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RetryDialogModule.html":{"url":"modules/RetryDialogModule.html","title":"module - RetryDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    RetryDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RetryDialogModule\n\n\n\ncluster_RetryDialogModule_declarations\n\n\n\ncluster_RetryDialogModule_exports\n\n\n\n\nRetryDialogComponent\n\nRetryDialogComponent\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nRetryDialogModule -->\n\nRetryDialogComponent->RetryDialogModule\n\n\n\n\n\nRetryDialogComponent \n\nRetryDialogComponent \n\nRetryDialogComponent  -->\n\nRetryDialogModule->RetryDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/common/retry-dialog/retry-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RetryDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule, MatDialogModule, MatIconModule,\n} from '@angular/material';\nimport { RetryDialogComponent } from './retry-dialog.component';\n\n@NgModule({\n    declarations: [\n        RetryDialogComponent,\n    ],\n    entryComponents: [\n        RetryDialogComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n        RetryDialogComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatDialogModule,\n    ],\n    providers: [\n    ],\n})\nexport class RetryDialogModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteListComponent.html":{"url":"components/RouteListComponent.html","title":"component - RouteListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouteListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/route-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-list\n            \n\n            \n                styleUrls\n                ./route-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./route-list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mDepartures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    routes\n                                \n                                \n                                    hasRoutes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/route-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(time, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/route-list.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mDepartures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/route-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n\n                \n                    \n                        getroutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:19\n                                \n                            \n\n                \n                    \n                        setroutes(deps: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            deps\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hasRoutes\n                    \n                \n\n                \n                    \n                        gethasRoutes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/route-list.component.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    Input,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-route-list',\n    styleUrls: ['./route-list.component.scss'],\n    templateUrl: './route-list.component.pug',\n})\nexport class RouteListComponent {\n\n    private mDepartures: any[] = [];\n    @Input('routes')\n    public set routes(deps: any[]) {\n        this.mDepartures = deps ? deps : [];\n    }\n\n    public get routes(): any[] {\n        return this.mDepartures;\n    }\n\n    public get hasRoutes(): boolean {\n        return this.mDepartures && this.mDepartures.length > 0;\n    }\n    public convertTime(time, data) {\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n\n}\n\n    \n\n    \n        mat-list(role=\"list\",*ngIf=\"hasRoutes\")\n    ng-container(*ngFor=\"let passage of routes\")\n        h3(matSubheader) {{passage?.shortName}}\n        mat-divider\n        mat-list-item(*ngFor=\"let direction of passage.directions\")\n            h4(matLine) {{direction}}\n.no-routes(*ngIf=\"!hasRoutes\")\n    h4 No Routes\n    \n\n    \n                \n                    ./route-list.component.scss\n                \n                :host{\n    display:block;\n}\nmat-list-item ul{\n    color:red;\n    display:block;\n    list-style-type: circle;\n    list-style-position: outside;\n    li{\n        display:list-item;\n        padding:0px 20px 0px 20px;\n    }\n}\n\ndiv.no-routes{\n    margin:15px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-list(role=\"list\",*ngIf=\"hasRoutes\")    ng-container(*ngFor=\"let passage of routes\")        h3(matSubheader) {{passage?.shortName}}        mat-divider        mat-list-item(*ngFor=\"let direction of passage.directions\")            h4(matLine) {{direction}}.no-routes(*ngIf=\"!hasRoutes\")    h4 No Routes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RouteListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteLoadingIndicatorComponent.html":{"url":"components/RouteLoadingIndicatorComponent.html","title":"component - RouteLoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RouteLoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/route-loading-indicator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-loading-indicator\n            \n\n            \n                styleUrls\n                ./route-loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./route-loading-indicator.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router,\n} from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\nexport class RouteLoadingSubscriber extends Subscriber {\n\n    constructor(private indicatorCmp: RouteLoadingIndicatorComponent) {\n        super();\n    }\n    next(value?: Event): void {\n        switch (true) {\n            case value instanceof NavigationStart:\n                this.indicatorCmp.loading = true;\n                break;\n            case value instanceof NavigationEnd:\n            case value instanceof NavigationCancel:\n            case value instanceof NavigationError:\n                this.indicatorCmp.loading = false;\n                break;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-route-loading-indicator',\n    styleUrls: ['./route-loading-indicator.component.scss'],\n    templateUrl: './route-loading-indicator.component.pug',\n})\nexport class RouteLoadingIndicatorComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n\n    public loading = false;\n    constructor(private router: Router) {\n\n    }\n    public ngOnInit(): void {\n        this.subscription = this.router\n            .events\n            .subscribe(new RouteLoadingSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        mat-progress-bar(*ngIf=\"loading\",mode=\"indeterminate\",color=\"accent\")\n    \n\n    \n                \n                    ./route-loading-indicator.component.scss\n                \n                :host{\n    display:block;\n    position: relative;\n    bottom:0px;\n    right:0px;\n    left:0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-progress-bar(*ngIf=\"loading\",mode=\"indeterminate\",color=\"accent\")'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'RouteLoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteLoadingSubscriber.html":{"url":"classes/RouteLoadingSubscriber.html","title":"class - RouteLoadingSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteLoadingSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-toolbar/route-loading-indicator.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(indicatorCmp: RouteLoadingIndicatorComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indicatorCmp\n                                                  \n                                                        \n                                                                        RouteLoadingIndicatorComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(value?: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/route-loading-indicator.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router,\n} from '@angular/router';\nimport { Subscriber, Subscription } from 'rxjs';\n\nexport class RouteLoadingSubscriber extends Subscriber {\n\n    constructor(private indicatorCmp: RouteLoadingIndicatorComponent) {\n        super();\n    }\n    next(value?: Event): void {\n        switch (true) {\n            case value instanceof NavigationStart:\n                this.indicatorCmp.loading = true;\n                break;\n            case value instanceof NavigationEnd:\n            case value instanceof NavigationCancel:\n            case value instanceof NavigationError:\n                this.indicatorCmp.loading = false;\n                break;\n        }\n    }\n}\n\n@Component({\n    selector: 'app-route-loading-indicator',\n    styleUrls: ['./route-loading-indicator.component.scss'],\n    templateUrl: './route-loading-indicator.component.pug',\n})\nexport class RouteLoadingIndicatorComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n\n    public loading = false;\n    constructor(private router: Router) {\n\n    }\n    public ngOnInit(): void {\n        this.subscription = this.router\n            .events\n            .subscribe(new RouteLoadingSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoutesSubscriber.html":{"url":"classes/RoutesSubscriber.html","title":"class - RoutesSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoutesSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/trip-passages/follow-bus-map.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(map: FollowBusMapDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    FollowBusMapDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(routes)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/follow-bus-map.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IVehicleLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscriber, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, mergeMap } from 'rxjs/operators';\nimport { createVehicleIcon } from 'src/app/leaflet';\nimport { ApiService } from 'src/app/services';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\nexport class RoutesSubscriber extends Subscriber {\n    public constructor(private map: FollowBusMapDirective) {\n        super();\n    }\n    public next(routes) {\n        this.map.setRoutePaths(routes.paths);\n    }\n}\n@Directive({\n    selector: 'map[appTripPassages]',\n})\nexport class FollowBusMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    private vehicleLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        private apiService: ApiService,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n    @Input('location')\n    public set location(id: IVehicleLocation) {\n        this.vehicleLocationSubject.next(id);\n    }\n\n    public get location(): IVehicleLocation {\n        return this.vehicleLocationSubject.getValue();\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private updateObservable: Subscription;\n    private routePolyLines: L.Polyline[] = [];\n\n    public setRoutePaths(paths: any[]): void {\n        for (const path of paths) {\n            const pointList: any[] = [];\n            for (const wayPoint of path.wayPoints) {\n                pointList.push(new L.LatLng(wayPoint.lat / 3600000, wayPoint.lon / 3600000));\n            }\n            const firstpolyline = L.polyline(pointList, {\n                color: path.color,\n                opacity: 0.5,\n                smoothFactor: 1,\n                weight: 3,\n            });\n            firstpolyline.addTo(this.getMap());\n            this.routePolyLines.push(firstpolyline);\n        }\n    }\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n    public addMarker(): void {\n        this.updateObservable = this.vehicleLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n\n                    const vehicleIcon: L.DivIcon = createVehicleIcon(location.heading, location.name.split(' ')[0], 40);\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            clickable: false,\n                            icon: vehicleIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    (marker).setRotationAngle(location.heading - 90);\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n        this.vehicleLocationSubject\n            .pipe(\n                filter(num => num !== null),\n                distinctUntilChanged(),\n                mergeMap(boundsa => {\n                    return this.apiService.getRouteByTripId(boundsa.tripId);\n                }))\n            .subscribe(new RoutesSubscriber(this));\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.updateObservable.unsubscribe();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsLoadSubscriber.html":{"url":"classes/SettingsLoadSubscriber.html","title":"class - SettingsLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(resolve: (arg: void) => void)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolve\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISettings } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { from, Observable, Subscriber } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class SettingsLoadSubscriber extends Subscriber {\n    public constructor(private resolve: (arg: void) => void) {\n        super();\n    }\n\n    public error(err: any): void {\n        this.resolve();\n        // tslint:disable-next-line:no-console\n        console.error(err);\n    }\n\n    public complete(): void {\n        this.resolve();\n    }\n}\n\n@Injectable(\n    { providedIn: 'root' },\n)\nexport class SettingsService {\n\n    private mSettings: ISettings = undefined;\n\n    constructor(private apiService: ApiService) {\n\n    }\n\n    public get settings(): ISettings {\n        return this.mSettings;\n    }\n\n    public getInitialMapCenter(): L.LatLng {\n        if (this.settings &&\n            this.settings.INITIAL_LAT &&\n            this.settings.INITIAL_LON) {\n            return new L.LatLng(this.settings.INITIAL_LAT / 3600000, this.settings.INITIAL_LON / 3600000);\n        }\n        return new L.LatLng(0, 0);\n    }\n    public getInitialMapZoom(): number {\n        if (this.settings && this.settings.INITIAL_ZOOM) {\n            return this.settings.INITIAL_ZOOM;\n        }\n        return 20;\n    }\n\n    public load(): Promise {\n        return new Promise((resolve: (arg: void) => void, reject: (err: any) => void) => {\n            return this.apiService.getSettings()\n                .pipe(tap((value: ISettings): void => {\n                    this.mSettings = value;\n                }),\n                    map((value: ISettings): void => {\n                        return;\n                    }),\n                    catchError((err: any): Observable => {\n                        return from([undefined]);\n                    }))\n                .subscribe(new SettingsLoadSubscriber(resolve));\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mSettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInitialMapCenter\n                            \n                            \n                                    Public\n                                getInitialMapZoom\n                            \n                            \n                                    Public\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    settings\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitialMapCenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMapCenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     L.LatLng\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitialMapZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitialMapZoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ISettings\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n\n                \n                    \n                        getsettings()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/settings.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ISettings } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { from, Observable, Subscriber } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class SettingsLoadSubscriber extends Subscriber {\n    public constructor(private resolve: (arg: void) => void) {\n        super();\n    }\n\n    public error(err: any): void {\n        this.resolve();\n        // tslint:disable-next-line:no-console\n        console.error(err);\n    }\n\n    public complete(): void {\n        this.resolve();\n    }\n}\n\n@Injectable(\n    { providedIn: 'root' },\n)\nexport class SettingsService {\n\n    private mSettings: ISettings = undefined;\n\n    constructor(private apiService: ApiService) {\n\n    }\n\n    public get settings(): ISettings {\n        return this.mSettings;\n    }\n\n    public getInitialMapCenter(): L.LatLng {\n        if (this.settings &&\n            this.settings.INITIAL_LAT &&\n            this.settings.INITIAL_LON) {\n            return new L.LatLng(this.settings.INITIAL_LAT / 3600000, this.settings.INITIAL_LON / 3600000);\n        }\n        return new L.LatLng(0, 0);\n    }\n    public getInitialMapZoom(): number {\n        if (this.settings && this.settings.INITIAL_ZOOM) {\n            return this.settings.INITIAL_ZOOM;\n        }\n        return 20;\n    }\n\n    public load(): Promise {\n        return new Promise((resolve: (arg: void) => void, reject: (err: any) => void) => {\n            return this.apiService.getSettings()\n                .pipe(tap((value: ISettings): void => {\n                    this.mSettings = value;\n                }),\n                    map((value: ISettings): void => {\n                        return;\n                    }),\n                    catchError((err: any): Observable => {\n                        return from([undefined]);\n                    }))\n                .subscribe(new SettingsLoadSubscriber(resolve));\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeSidebar\n                            \n                            \n                                    Public\n                                openGithub\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appVersion\n                                \n                                \n                                    angularVersion\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sidebarService: SidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sidebar/sidebar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        SidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/sidebar.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openGithub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/sidebar.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appVersion\n                    \n                \n\n                \n                    \n                        getappVersion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/sidebar.component.ts:26\n                                \n                            \n                    \n                        \n                                The app version found inside the package\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        angularVersion\n                    \n                \n\n                \n                    \n                        getangularVersion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/sidebar.component.ts:34\n                                \n                            \n                    \n                        \n                                The @angular/core version used\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, VERSION } from '@angular/core';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { environment } from 'src/environments/environment.example';\n@Component({\n    selector: 'app-sidebar',\n    styleUrls: ['./sidebar.component.scss'],\n    templateUrl: './sidebar.component.pug',\n})\nexport class SidebarComponent {\n    public constructor(private sidebarService: SidebarService) {\n\n    }\n\n    public closeSidebar(): void {\n        this.sidebarService.closeSidebar();\n    }\n\n    public openGithub(): void {\n        window.open('https://github.com/donmahallem/TrapezeClientNg', '_blank');\n    }\n\n    /**\n     * The app version found inside the package\n     * @returns the package version\n     */\n    public get appVersion(): string {\n        return environment.version;\n    }\n\n    /**\n     * The @angular/core version used\n     * @returns Version {@link VERSION.full}\n     */\n    public get angularVersion(): string {\n        return VERSION.full;\n    }\n}\n\n    \n\n    \n        button(mat-icon-button,(click)=\"closeSidebar()\")\n    mat-icon close\nmat-list\n    h3(matSubheader) Head\n    mat-list-item\n        mat-icon(matListIcon) home\n        h4(matLine) Home\n        p(matLine) Home\n    mat-list-item\n        mat-icon(matListIcon) place\n        h4(matLine) Stops\n        p(matLine) List of stops\n    mat-list-item\n        mat-icon(matListIcon) warning\n        h4(matLine) No Content yet\n        p(matLine) New stuff to come?\n    mat-divider\n    mat-list-item\n        mat-icon(matListIcon) info\n        h4(matLine) Version\n        p(matLine) {{appVersion}}\n    mat-list-item((click)=\"openGithub()\")\n        mat-icon(matListIcon) info\n        h4(matLine) Github\n        p(matLine) The Projects Source Code\n    mat-list-item\n        mat-icon(matListIcon) info\n        h4(matLine) Angular Version\n        p(matLine) {{angularVersion}}\n.info-box\n    span(title=\"App Version\") App: {{appVersion}}\n    span(title=\"Angular Version\") Angular: {{angularVersion}}\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                :host{\n    display:flex;\n    justify-items: stretch;\n    flex-direction: column;\n    height:100%;\n}\nmat-list{\n    flex:1 0 auto;\n    overflow-y:auto;\n}\n.info-box{\n    border-top: 1px solid grey;\n    flex:0 0;\n    display:flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'button(mat-icon-button,(click)=\"closeSidebar()\")    mat-icon closemat-list    h3(matSubheader) Head    mat-list-item        mat-icon(matListIcon) home        h4(matLine) Home        p(matLine) Home    mat-list-item        mat-icon(matListIcon) place        h4(matLine) Stops        p(matLine) List of stops    mat-list-item        mat-icon(matListIcon) warning        h4(matLine) No Content yet        p(matLine) New stuff to come?    mat-divider    mat-list-item        mat-icon(matListIcon) info        h4(matLine) Version        p(matLine) {{appVersion}}    mat-list-item((click)=\"openGithub()\")        mat-icon(matListIcon) info        h4(matLine) Github        p(matLine) The Projects Source Code    mat-list-item        mat-icon(matListIcon) info        h4(matLine) Angular Version        p(matLine) {{angularVersion}}.info-box    span(title=\"App Version\") App: {{appVersion}}    span(title=\"Angular Version\") Angular: {{angularVersion}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sidebar/sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n} from '@angular/material';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    declarations: [\n        SidebarComponent,\n    ],\n    exports: [\n        CommonModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        SidebarComponent,\n        MatButtonModule,\n    ],\n    imports: [\n        CommonModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        MatButtonModule,\n    ],\n    providers: [\n    ],\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidebarService.html":{"url":"injectables/SidebarService.html","title":"injectable - SidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sidebar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                sidebarObservable\n                            \n                            \n                                    Private\n                                sidebarStatusSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeSidebar\n                            \n                            \n                                    Public\n                                openSidebar\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sidebar.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidebar.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            sidebarObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.sidebarStatusSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidebar.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidebarStatusSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidebar.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarOpen\n                    \n                \n\n                \n                    \n                        getsidebarOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/sidebar.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n@Injectable({\n    providedIn: 'root',\n})\nexport class SidebarService {\n\n    private sidebarStatusSubject: BehaviorSubject = new BehaviorSubject(false);\n    public readonly sidebarObservable: Observable = this.sidebarStatusSubject.asObservable();\n\n    public constructor() { }\n\n    public get sidebarOpen(): boolean {\n        return this.sidebarStatusSubject.value;\n    }\n\n    public toggleSidebar(): void {\n        this.sidebarStatusSubject.next(!this.sidebarStatusSubject.getValue());\n    }\n\n    public openSidebar(): void {\n        this.sidebarStatusSubject.next(true);\n    }\n\n    public closeSidebar(): void {\n        this.sidebarStatusSubject.next(false);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopInfoComponent.html":{"url":"components/StopInfoComponent.html","title":"component - StopInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StopInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stop/stop-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stop-info\n            \n\n            \n                styleUrls\n                ./stop-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stop-info.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccured\n                            \n                            \n                                    Private\n                                mStopInfo\n                            \n                            \n                                    Private\n                                mTimerObservable\n                            \n                            \n                                    Private\n                                mTimeUntilRefresh\n                            \n                            \n                                    Public\n                                routes\n                            \n                            \n                                    Public\n                                stopLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                tickInterval\n                            \n                            \n                                    Public\n                                    Readonly\n                                ticksToRefresh\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertTime\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeUntilRefresh\n                                \n                                \n                                    stopId\n                                \n                                \n                                    stopInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, apiService: ApiService, stopService: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-info.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTime(time, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:65\n                \n            \n\n\n            \n                \n                    Converts the time to a human readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateData(data: IStopPassage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            IStopPassage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorOccured\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStopInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopPassage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTimerObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:37\n                            \n                        \n\n                \n                    \n                        The timer overservable dictating the update interval\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mTimeUntilRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:52\n                            \n                        \n\n                \n                    \n                        The stop location.\nCan be undefined or an instance of IStopLocation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            tickInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:46\n                            \n                        \n\n                \n                    \n                        Tick interval in miliseconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            ticksToRefresh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-info.component.ts:33\n                            \n                        \n\n                \n                    \n                        Subscription for the update Observable\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeUntilRefresh\n                    \n                \n\n                \n                    \n                        gettimeUntilRefresh()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopId\n                    \n                \n\n                \n                    \n                        getstopId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopInfo\n                    \n                \n\n                \n                    \n                        getstopInfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-info.component.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopLocation, IStopPassage, StopId } from '@donmahallem/trapeze-api-types';\nimport { combineLatest, from, merge, timer, Observable, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map } from 'rxjs/operators';\nimport { StopPointService } from 'src/app/services/stop-point.service';\nimport { ApiService } from '../../services';\n@Component({\n    selector: 'app-stop-info',\n    styleUrls: ['./stop-info.component.scss'],\n    templateUrl: './stop-info.component.pug',\n})\nexport class StopInfoComponent implements AfterViewInit, OnDestroy {\n\n    constructor(private route: ActivatedRoute, private apiService: ApiService,\n        private stopService: StopPointService) {\n        this.mStopInfo = this.route.snapshot.data.stopInfo;\n    }\n\n    public get timeUntilRefresh(): number {\n        return this.mTimeUntilRefresh;\n    }\n    public get stopId(): string {\n        return this.route.snapshot.params.stopId;\n    }\n\n    public get stopInfo(): IStopPassage {\n        return this.mStopInfo;\n    }\n    /**\n     * Subscription for the update Observable\n     */\n    private updateSubscription: Subscription;\n    /**\n     * The timer overservable dictating the update interval\n     */\n    private mTimerObservable: Observable;\n    private mTimeUntilRefresh = 0;\n    public routes: any[] = [];\n    private mStopInfo: IStopPassage;\n    public errorOccured = false;\n    public readonly ticksToRefresh: number = 50;\n    /**\n     * Tick interval in miliseconds\n     */\n    public readonly tickInterval: number = 200;\n\n    /**\n     * The stop location.\n     * Can be undefined or an instance of {@link IStopLocation}\n     */\n    public stopLocation: IStopLocation = undefined;\n    private updateData(data: IStopPassage): void {\n        this.errorOccured = false;\n        if ((data).stopShortName === this.stopId) {\n            this.mStopInfo = data;\n        }\n    }\n\n    /**\n     * Converts the time to a human readable format\n     * @param time time\n     * @param data data\n     */\n    public convertTime(time, data) {\n        if (time > 300) {\n            return data.actualTime;\n        } else {\n            return Math.ceil(time / 60) + 'min';\n        }\n    }\n    public ngAfterViewInit(): void {\n        this.mTimerObservable = timer(this.tickInterval, this.tickInterval);\n        this.mTimerObservable.subscribe((tick: number) => {\n            const ticksLeft: number = this.ticksToRefresh - (tick % this.ticksToRefresh);\n            const diff: number = Math.round((ticksLeft * this.tickInterval) / 1000);\n            if (diff !== this.mTimeUntilRefresh) {\n                this.mTimeUntilRefresh = diff;\n            }\n        });\n        const stopIdObvservable: Observable = this.route.params\n            .pipe(map((a: { stopId: string }): string => a.stopId));\n        stopIdObvservable.pipe(map((id: string) => {\n            return this.stopService.getStopLocation(id);\n        }))\n            .subscribe((stop) => {\n                this.stopLocation = stop;\n            });\n        const refreshObservable = combineLatest([this.mTimerObservable.pipe(filter((val: number) => {\n            return val % this.ticksToRefresh === 0 && val > 0;\n        })), stopIdObvservable])\n            .pipe(\n                map((a): string => a[1]),\n                flatMap((stopId: StopId): Observable => {\n                    return this.apiService.getStopPassages(stopId);\n                }),\n                catchError((err, a) => {\n                    this.errorOccured = true;\n                    return from([undefined]);\n                }),\n                filter((item: IStopPassage) => {\n                    return item !== undefined;\n                }));\n        /**\n         * combine observables\n         */\n        this.updateSubscription = merge(refreshObservable, this.route.data.pipe(map((value) => {\n            return value.stopInfo;\n        })))\n            .subscribe(this.updateData.bind(this));\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n\n}\n\n    \n\n    \n        app-map-header-box([blur]=\"stopLocation===undefined\",title=\"{{stopInfo?.stopName}}\",i18n-title=\"@@stopName\",i18n-subtitle=\"Refreshing in x seconds@@refreshingInXSeconds\",subtitle=\"Refreshing in {{timeUntilRefresh}}s\")\n    map(appStopLocation,[location]=\"stopLocation\",role=\"none\")\nmat-tab-group(mat-stretch-tabs,[dynamicHeight]=\"true\")\n    mat-tab(i18n-label=\"tab header departures|Departures@@departures\",label=\"Departures\")\n        app-departure-list([departures]=\"stopInfo?.actual\")\n    mat-tab(i18n-label=\"tab header routes|Routes@@Routes\",label=\"Routes\")\n        app-route-list([routes]=\"stopInfo?.routes\")\ndiv.error-box(*ngIf=\"errorOccured\")\n    h3 Error occured\n    p Will retry in a {{timeUntilRefresh}}s\n\n    \n\n    \n                \n                    ./stop-info.component.scss\n                \n                mat-tab-group{\n    flex-grow: 1;\n}\ndiv.error-box{\n    flex:0 0 auto;\n    background:#B00020;\n    color:white;\n    padding:5px 20px 5px 20px;\n    h3{\n        font-size: 25px;\n        line-height: 30px;\n        padding:0px;\n        margin:0px;\n    }\n    p{\n        font-size: 15px;\n        line-height: 20px;\n        padding:0px;\n        margin:0px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-map-header-box([blur]=\"stopLocation===undefined\",title=\"{{stopInfo?.stopName}}\",i18n-title=\"@@stopName\",i18n-subtitle=\"Refreshing in x seconds@@refreshingInXSeconds\",subtitle=\"Refreshing in {{timeUntilRefresh}}s\")    map(appStopLocation,[location]=\"stopLocation\",role=\"none\")mat-tab-group(mat-stretch-tabs,[dynamicHeight]=\"true\")    mat-tab(i18n-label=\"tab header departures|Departures@@departures\",label=\"Departures\")        app-departure-list([departures]=\"stopInfo?.actual\")    mat-tab(i18n-label=\"tab header routes|Routes@@Routes\",label=\"Routes\")        app-route-list([routes]=\"stopInfo?.routes\")div.error-box(*ngIf=\"errorOccured\")    h3 Error occured    p Will retry in a {{timeUntilRefresh}}s'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'StopInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StopInfoResolver.html":{"url":"guards/StopInfoResolver.html","title":"guard - StopInfoResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    StopInfoResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/stop/stop-info.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-info.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-info.resolver.ts:28\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopPassage } from '@donmahallem/trapeze-api-types';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../services';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class StopInfoResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: ApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getStopPassages(route.params['stopId'])\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StopLocationMapDirective.html":{"url":"directives/StopLocationMapDirective.html","title":"directive - StopLocationMapDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StopLocationMapDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/stop/stop-map.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive displaying a map with the StopLocation\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        map[appStopLocation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopLocationSubject\n                            \n                            \n                                    Private\n                                stopMarkerLayer\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                startUpdater\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, userLocationService: UserLocationService, zone: NgZone, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stop/stop-map.directive.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startUpdater\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startUpdater()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stop/stop-map.directive.ts:51\n                \n            \n\n\n            \n                \n                    Creates the Update Observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLocationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopMarkerLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n\n                \n                    \n                        setlocation(loc)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stop/stop-map.directive.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            loc\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { createStopIcon } from 'src/app/leaflet';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport { LeafletMapComponent } from '../common/leaflet-map.component';\n\n/**\n * Directive displaying a map with the StopLocation\n */\n@Directive({\n    selector: 'map[appStopLocation]',\n})\nexport class StopLocationMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(elRef: ElementRef,\n        userLocationService: UserLocationService,\n        zone: NgZone,\n        settingsService: SettingsService) {\n        super(elRef, zone, userLocationService, settingsService);\n    }\n    @Input('location')\n    public set location(loc: IStopLocation) {\n        this.stopLocationSubject.next(loc);\n    }\n    private updateSubscription: Subscription;\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n\n    private stopLocationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.startUpdater();\n        this.getMap().dragging.disable();\n        this.getMap().touchZoom.disable();\n        this.getMap().doubleClickZoom.disable();\n        this.getMap().scrollWheelZoom.disable();\n        this.getMap().eachLayer((layer: L.Layer) => {\n            if (layer instanceof L.TileLayer) {\n                layer.options.attribution = '';\n                layer.redraw();\n            }\n        });\n    }\n\n    /**\n     * Creates the Update Observable\n     */\n    public startUpdater(): void {\n        if (this.updateSubscription) {\n            return;\n        }\n        this.updateSubscription = this.stopLocationSubject\n            .subscribe((location) => {\n                if (this.stopMarkerLayer) {\n                    this.stopMarkerLayer.clearLayers();\n                } else {\n                    this.stopMarkerLayer = new L.FeatureGroup();\n                    this.stopMarkerLayer.addTo(this.getMap());\n                }\n                if (location) {\n                    const stopIcon: L.Icon = createStopIcon();\n                    const marker: L.Marker = L.marker([location.latitude / 3600000, location.longitude / 3600000],\n                        {\n                            clickable: false,\n                            icon: stopIcon,\n                            interactive: false,\n                            title: location.name,\n                            zIndexOffset: 100,\n                        });\n                    marker.addTo(this.stopMarkerLayer);\n                    this.getMap().panTo({\n                        alt: 2000,\n                        lat: location.latitude / 3600000,\n                        lng: location.longitude / 3600000,\n                    },\n                        { animate: true });\n                }\n            });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.updateSubscription) {\n            this.updateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopModule.html":{"url":"modules/StopModule.html","title":"module - StopModule","body":"\n                   \n\n\n\n\n    Modules\n    StopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StopModule\n\n\n\ncluster_StopModule_declarations\n\n\n\ncluster_StopModule_imports\n\n\n\n\nDepartureListComponent\n\nDepartureListComponent\n\n\n\nStopModule\n\nStopModule\n\nStopModule -->\n\nDepartureListComponent->StopModule\n\n\n\n\n\nDepartureListItemComponent\n\nDepartureListItemComponent\n\nStopModule -->\n\nDepartureListItemComponent->StopModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nStopModule -->\n\nRouteListComponent->StopModule\n\n\n\n\n\nStopInfoComponent\n\nStopInfoComponent\n\nStopModule -->\n\nStopInfoComponent->StopModule\n\n\n\n\n\nStopLocationMapDirective\n\nStopLocationMapDirective\n\nStopModule -->\n\nStopLocationMapDirective->StopModule\n\n\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nStopModule -->\n\nMapHeaderBoxModule->StopModule\n\n\n\n\n\nStopRoutingModule\n\nStopRoutingModule\n\nStopModule -->\n\nStopRoutingModule->StopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stop/stop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DepartureListComponent\n                        \n                        \n                            DepartureListItemComponent\n                        \n                        \n                            RouteListComponent\n                        \n                        \n                            StopInfoComponent\n                        \n                        \n                            StopLocationMapDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapHeaderBoxModule\n                        \n                        \n                            StopRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { MapHeaderBoxModule } from '../common';\nimport { DepartureListItemComponent } from './departure-list-item.component';\nimport { DepartureListComponent } from './departure-list.component';\nimport { RouteListComponent } from './route-list.component';\nimport { StopInfoComponent } from './stop-info.component';\nimport { StopInfoResolver } from './stop-info.resolver';\nimport { StopLocationMapDirective } from './stop-map.directive';\nimport { StopRoutingModule } from './stop-routing.module';\n@NgModule({\n    declarations: [\n        StopInfoComponent,\n        DepartureListComponent,\n        RouteListComponent,\n        StopLocationMapDirective,\n        DepartureListItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        StopRoutingModule,\n        MatTabsModule,\n        MapHeaderBoxModule,\n    ],\n    providers: [\n        StopInfoResolver,\n    ],\n})\nexport class StopModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StopPointLoadSubscriber.html":{"url":"classes/StopPointLoadSubscriber.html","title":"class - StopPointLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StopPointLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-point.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                complete\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(service: StopPointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-point.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    complete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(stops: IStopLocation[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stops\n                                    \n                                            IStopLocation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class StopPointLoadSubscriber extends Subscriber {\n\n    public constructor(private service: StopPointService) {\n        super();\n    }\n\n    public next(stops: IStopLocation[]): void {\n        this.service.stopLocations = stops;\n    }\n\n    public error(err: any): void {\n\n    }\n\n    public complete(): void {\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StopPointService {\n\n    private stopLocationsSubject: BehaviorSubject = new BehaviorSubject([]);\n    private stopLoadSubscription: Subscription;\n    constructor(private api: ApiService) {\n    }\n\n    private loadStops(): void {\n        this.stopLoadSubscription = this.api.getStations()\n            .pipe(map((value) => {\n                return value.stops;\n            }))\n            .subscribe(new StopPointLoadSubscriber(this));\n    }\n    public get stopLocations(): IStopLocation[] {\n        return this.stopLocationsSubject.value;\n    }\n    public set stopLocations(locations: IStopLocation[]) {\n        this.stopLocationsSubject.next(locations ? locations : []);\n    }\n\n    public getStopLocation(stopShortName: string): IStopLocation {\n        for (const stop of this.stopLocations) {\n            if (stop.shortName === stopShortName) {\n                return stop;\n            }\n        }\n        return undefined;\n    }\n\n    public get isLoading(): boolean {\n        return this.stopLoadSubscription && !this.stopLoadSubscription.closed;\n    }\n\n    public get stopLocationsObservable(): Observable {\n        if (this.stopLocations.length === 0 && !this.isLoading) {\n            this.loadStops();\n        }\n        return this.stopLocationsSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopPointService.html":{"url":"injectables/StopPointService.html","title":"injectable - StopPointService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StopPointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-point.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stopLoadSubscription\n                            \n                            \n                                    Private\n                                stopLocationsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getStopLocation\n                            \n                            \n                                    Private\n                                loadStops\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stopLocations\n                                \n                                \n                                    isLoading\n                                \n                                \n                                    stopLocationsObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-point.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStopLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopLocation(stopShortName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopShortName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IStopLocation\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadStops\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadStops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-point.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLoadSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopLocationsSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/stop-point.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stopLocations\n                    \n                \n\n                \n                    \n                        getstopLocations()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:42\n                                \n                            \n\n                \n                    \n                        setstopLocations(locations: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            locations\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n\n                \n                    \n                        getisLoading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stopLocationsObservable\n                    \n                \n\n                \n                    \n                        getstopLocationsObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/stop-point.service.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport class StopPointLoadSubscriber extends Subscriber {\n\n    public constructor(private service: StopPointService) {\n        super();\n    }\n\n    public next(stops: IStopLocation[]): void {\n        this.service.stopLocations = stops;\n    }\n\n    public error(err: any): void {\n\n    }\n\n    public complete(): void {\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StopPointService {\n\n    private stopLocationsSubject: BehaviorSubject = new BehaviorSubject([]);\n    private stopLoadSubscription: Subscription;\n    constructor(private api: ApiService) {\n    }\n\n    private loadStops(): void {\n        this.stopLoadSubscription = this.api.getStations()\n            .pipe(map((value) => {\n                return value.stops;\n            }))\n            .subscribe(new StopPointLoadSubscriber(this));\n    }\n    public get stopLocations(): IStopLocation[] {\n        return this.stopLocationsSubject.value;\n    }\n    public set stopLocations(locations: IStopLocation[]) {\n        this.stopLocationsSubject.next(locations ? locations : []);\n    }\n\n    public getStopLocation(stopShortName: string): IStopLocation {\n        for (const stop of this.stopLocations) {\n            if (stop.shortName === stopShortName) {\n                return stop;\n            }\n        }\n        return undefined;\n    }\n\n    public get isLoading(): boolean {\n        return this.stopLoadSubscription && !this.stopLoadSubscription.closed;\n    }\n\n    public get stopLocationsObservable(): Observable {\n        if (this.stopLocations.length === 0 && !this.isLoading) {\n            this.loadStops();\n        }\n        return this.stopLocationsSubject.asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopRoutingModule.html":{"url":"modules/StopRoutingModule.html","title":"module - StopRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stop/stop-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopInfoComponent } from './stop-info.component';\nimport { StopInfoResolver } from './stop-info.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopInfoComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':stopId',\n        resolve: {\n            stopInfo: StopInfoResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopsInfoComponent.html":{"url":"components/StopsInfoComponent.html","title":"component - StopsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StopsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stops/stops-info.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stops-info\n            \n\n            \n                styleUrls\n                ./stops-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stops-info.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mStops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/stops-info.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasHeader(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/stops-info.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mStops\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IStopLocation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stops/stops-info.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stops/stops-info.component.ts:26\n                                \n                            \n                    \n                        \n                                The stops to be displayed\n\n\n                                \n                                \n                                \n                                    Returns :     IStopLocation[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\n@Component({\n    selector: 'app-stops-info',\n    styleUrls: ['./stops-info.component.scss'],\n    templateUrl: './stops-info.component.pug',\n})\nexport class StopsInfoComponent {\n    private mStops: IStopLocation[] = [];\n    constructor(private activatedRoute: ActivatedRoute) {\n        const st: IStopLocation[] = this.activatedRoute.snapshot.data.stops.stops.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n        this.mStops = st;\n\n    }\n\n    public hasHeader(idx: number): boolean {\n        return idx === 0 || this.stops[idx].name.charAt(0) !== this.stops[idx - 1].name.charAt(0);\n    }\n    /**\n     * The stops to be displayed\n     * @returns a list of stops to be used\n     */\n    public get stops(): IStopLocation[] {\n        return this.mStops;\n    }\n\n}\n\n    \n\n    \n        mat-nav-list.stoplist(role=\"list\")\n    ng-container(*ngFor=\"let item of stops;let idx = index;\")\n        mat-divider(*ngIf=\"hasHeader(idx)&&idx>0\")\n        h3(*ngIf=\"hasHeader(idx)\",mat-subheader) {{item.name.charAt(0)}}\n        mat-list-item([routerLink]=\"['/stop', item.shortName]\",role=\"listitem\")\n            mat-icon(mat-list-icon) place\n            h4(mat-line) {{item?.name}}\n    \n\n    \n                \n                    ./stops-info.component.scss\n                \n                mat-nav-list.stoplist {\n    overflow-y: auto;\n    overflow-x: hidden;\n    flex: 1;\n    \n}\n@import './../../box-settings.scss';\n@media (min-width: #{$boxMaxWidth + 1}){\n    mat-nav-list.stoplist{\n        padding-top:100px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-nav-list.stoplist(role=\"list\")    ng-container(*ngFor=\"let item of stops;let idx = index;\")        mat-divider(*ngIf=\"hasHeader(idx)&&idx>0\")        h3(*ngIf=\"hasHeader(idx)\",mat-subheader) {{item.name.charAt(0)}}        mat-list-item([routerLink]=\"[\\'/stop\\', item.shortName]\",role=\"listitem\")            mat-icon(mat-list-icon) place            h4(mat-line) {{item?.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'StopsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsModule.html":{"url":"modules/StopsModule.html","title":"module - StopsModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\n\nStopsInfoComponent\n\nStopsInfoComponent\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nStopsInfoComponent->StopsModule\n\n\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nStopsModule -->\n\nRetryDialogModule->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Stops lazy loaded Module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StopsInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RetryDialogModule\n                        \n                        \n                            StopsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n} from '@angular/material';\nimport { RetryDialogModule } from '../common/retry-dialog';\nimport { StopsInfoComponent } from './stops-info.component';\nimport { StopsRoutingModule } from './stops-routing.module';\nimport { StopsResolver } from './stops.resolver';\n\n/**\n * Stops lazy loaded Module\n */\n@NgModule({\n    declarations: [\n        StopsInfoComponent,\n    ],\n    imports: [\n        StopsRoutingModule,\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        MatInputModule,\n        RetryDialogModule,\n        MatDialogModule,\n    ],\n    providers: [\n        StopsResolver,\n    ],\n})\nexport class StopsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/StopsResolver.html":{"url":"guards/StopsResolver.html","title":"guard - StopsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    StopsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/stops/stops.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    A Resolver for the Stations Response\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/stops.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/stops.resolver.ts:32\n                \n            \n\n\n            \n                \n                    Resolves the station response\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The activated RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The router state snapshot\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that resolves the {\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { IStopLocations } from '@donmahallem/trapeze-api-types';\nimport { throwError, EMPTY, Observable } from 'rxjs';\nimport { catchError, retryWhen } from 'rxjs/operators';\nimport { retryDialogStrategy } from 'src/app/rxjs-util';\nimport { ApiService } from '../../services';\nimport { RetryDialogComponent } from '../common/retry-dialog';\n\n/**\n * A Resolver for the Stations Response\n */\n@Injectable()\nexport class StopsResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     */\n    public constructor(private api: ApiService,\n        private router: Router,\n        private dialog: MatDialog) { }\n\n    /**\n     * Resolves the station response\n     * @param route The activated RouteSnapshot\n     * @param state The router state snapshot\n     * @returns An observable that resolves the {@StationsResponse}\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getStations()\n            .pipe(catchError((err: any | HttpErrorResponse): Observable => {\n                if (err.status === 404) {\n                    this.router.navigate(['error', 'not-found']);\n                    return EMPTY;\n                } else {\n                    return throwError(err);\n                }\n            }),\n                retryWhen(retryDialogStrategy((error: any | HttpErrorResponse) => {\n                    return this.dialog.open(RetryDialogComponent, {\n                        data: {\n                            code: error.status ? error.status : undefined,\n                            message: 'test',\n                        },\n                    });\n                })));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsRoutingModule.html":{"url":"modules/StopsRoutingModule.html","title":"module - StopsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopsInfoComponent } from './stops-info.component';\nimport { StopsResolver } from './stops.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: StopsInfoComponent,\n        path: '',\n        resolve: {\n            stops: StopsResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class StopsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarSearchBoxComponent.html":{"url":"components/ToolbarSearchBoxComponent.html","title":"component - ToolbarSearchBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarSearchBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-toolbar/search-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar-search\n            \n\n            \n                styleUrls\n                ./search-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-box.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoComplete\n                            \n                            \n                                filteredOptions\n                            \n                            \n                                searchControl\n                            \n                            \n                                    Public\n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFn\n                            \n                            \n                                    Public\n                                doFocusSearch\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLoseFocus\n                            \n                            \n                                    Public\n                                onStopSelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusSearch\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stopService: StopPointService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-toolbar/search-box.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopPointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        focusSearch\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFn\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFn(user?: IStopLocation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            IStopLocation\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doFocusSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFocusSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoseFocus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoseFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onStopSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onStopSelected(stop?: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-toolbar/search-box.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stop\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatAutocomplete)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('searchInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchOpen\n                    \n                \n\n\n                \n                    \n                        setsearchOpen(open: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/main-toolbar/search-box.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            open\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation } from '@donmahallem/trapeze-api-types';\nimport { Observable } from 'rxjs';\nimport { flatMap, map, startWith } from 'rxjs/operators';\nimport { StopPointService } from 'src/app/services/stop-point.service';\n@Component({\n    selector: 'app-toolbar-search',\n    styleUrls: ['./search-box.component.scss'],\n    templateUrl: './search-box.component.pug',\n})\nexport class ToolbarSearchBoxComponent implements OnInit, OnDestroy {\n\n    searchControl = new FormControl();\n    filteredOptions: Observable;\n\n    @ViewChild(MatAutocomplete)\n    autoComplete: MatAutocomplete;\n    @ViewChild('searchInput')\n    public searchInput: ElementRef;\n\n    @Output()\n    public readonly focusSearch: EventEmitter = new EventEmitter();\n    constructor(private stopService: StopPointService,\n        private router: Router) {\n    }\n\n    public set searchOpen(open: boolean) {\n        if (open) {\n            this.searchControl.setValue('');\n            this.doFocusSearch();\n        }\n    }\n\n    public doFocusSearch(): void {\n        setTimeout(() => {\n            this.searchInput.nativeElement.focus();\n            this.searchInput.nativeElement.select();\n        }, 0);\n    }\n\n    public onLoseFocus(): void {\n        this.focusSearch.next(false);\n    }\n\n    public onStopSelected(stop?: MatAutocompleteSelectedEvent): void {\n        this.searchOpen = false;\n        this.focusSearch.next(false);\n        if (stop.option.value) {\n            this.searchControl.setValue('');\n            this.router.navigate(['/stop', stop.option.value.shortName]);\n        }\n    }\n    displayFn(user?: IStopLocation): string | undefined {\n        return user ? user.name : undefined;\n    }\n    public ngOnInit(): void {\n        this.filteredOptions = this.searchControl.valueChanges\n            .pipe(\n                startWith(''),\n                flatMap((value: string) => {\n                    return this.stopService.stopLocationsObservable\n                        .pipe(map((stops: IStopLocation[]) => {\n                            return stops.filter(option => option.name.toLowerCase().includes(value));\n                        }));\n                }),\n            );\n    }\n\n    public ngOnDestroy(): void {\n    }\n\n}\n\n    \n\n    \n        form(role=\"search\")\n    mat-form-field\n        input(#searchInput,(blur)=\"onLoseFocus()\",type=\"search\",aria-label=\"Number\",placeholder=\"Stopname\",matInput,[formControl]=\"searchControl\",[matAutocomplete]=\"auto\",i18n-placeholder=\"Stopname to search@@stopnameToSearch\",i18n-aria-placeholder=\"Stopname to search@@stopnameToSearch\")\n        mat-autocomplete(#auto=\"matAutocomplete\",[displayWith]=\"displayFn\",(optionSelected)=\"onStopSelected($event)\")\n            mat-option(*ngFor=\"let option of filteredOptions | async\",[value]=\"option\") {{option.name}}\n    \n\n    \n                \n                    ./search-box.component.scss\n                \n                :host{\n    display:block;\n}\nform,mat-form-field{\n    width:100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'form(role=\"search\")    mat-form-field        input(#searchInput,(blur)=\"onLoseFocus()\",type=\"search\",aria-label=\"Number\",placeholder=\"Stopname\",matInput,[formControl]=\"searchControl\",[matAutocomplete]=\"auto\",i18n-placeholder=\"Stopname to search@@stopnameToSearch\",i18n-aria-placeholder=\"Stopname to search@@stopnameToSearch\")        mat-autocomplete(#auto=\"matAutocomplete\",[displayWith]=\"displayFn\",(optionSelected)=\"onStopSelected($event)\")            mat-option(*ngFor=\"let option of filteredOptions | async\",[value]=\"option\") {{option.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarSearchBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripPassagesComponent.html":{"url":"components/TripPassagesComponent.html","title":"component - TripPassagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripPassagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/trip-passages/trip-passages.component.ts\n\n\n    \n        Description\n    \n    \n        Component displaying the TripPassages for a Trip\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-passages\n            \n\n            \n                styleUrls\n                ./trip-passages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trip-passages.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                DEBOUNCE_TIME\n                            \n                            \n                                    Private\n                                pollSubscription\n                            \n                            \n                                    Private\n                                snapshotDataSubscription\n                            \n                            \n                                    Private\n                                status\n                            \n                            \n                                    Public\n                                    Readonly\n                                StatusOps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tripData\n                                \n                                \n                                    lastTimestamp\n                                \n                                \n                                    statusCode\n                                \n                                \n                                    tripId\n                                \n                                \n                                    routeName\n                                \n                                \n                                    tripPassages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/trip-passages.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:109\n                \n            \n\n\n            \n                \n                    Returns if an error has happened during the last update\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if an error occured\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:142\n                \n            \n\n\n            \n                \n                    Initializes the update observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:170\n                \n            \n\n\n            \n                \n                    destroys created update observables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            DEBOUNCE_TIME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pollSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            snapshotDataSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            StatusOps\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UpdateStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tripData\n                    \n                \n\n                \n                    \n                        gettripData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:55\n                                \n                            \n                    \n                        \n                                Returns the TripPassages\n\n\n                                \n                                \n                                \n                                    Returns :         TripPassagesLocation\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastTimestamp\n                    \n                \n\n                \n                    \n                        getlastTimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:66\n                                \n                            \n                    \n                        \n                                Returns the last timestamp when data was tried to be retrieved\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusCode\n                    \n                \n\n                \n                    \n                        getstatusCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:77\n                                \n                            \n                    \n                        \n                                Returns the current set update status or UpdateStatus.LOADING\n\n\n                                \n                                \n                                \n                                    Returns :         UpdateStatus\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tripId\n                    \n                \n\n                \n                    \n                        gettripId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:87\n                                \n                            \n                    \n                        \n                                returns the current tripID\n\n\n                                \n                                    Returns :     TripId\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        routeName\n                    \n                \n\n                \n                    \n                        getrouteName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:94\n                                \n                            \n                    \n                        \n                                short hand to retrieve route name\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tripPassages\n                    \n                \n\n                \n                    \n                        gettripPassages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/trip-passages/trip-passages.component.ts:101\n                                \n                            \n                    \n                        \n                                List of passages\n\n\n                                \n                                    Returns :     IActualTripPassage[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IActualTripPassage, TripId } from '@donmahallem/trapeze-api-types';\nimport { from, BehaviorSubject, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, debounceTime, flatMap, map } from 'rxjs/operators';\nimport { TripPassagesLocation } from 'src/app/models';\nimport { ApiService } from '../../services';\n\nenum UpdateStatus {\n    LOADING = 1,\n    LOADED = 2,\n    ERROR = 3,\n    PAUSED = 4,\n    UNKNOWN = 5,\n    NOT_FOUND = 404,\n    SERVER_ERROR = 500,\n}\n\nexport interface IPassageStatus {\n    status: UpdateStatus;\n    passages: TripPassagesLocation;\n    timestamp: number;\n    failures?: number;\n}\n/**\n * Component displaying the TripPassages for a Trip\n */\n@Component({\n    selector: 'app-trip-passages',\n    styleUrls: ['./trip-passages.component.scss'],\n    templateUrl: './trip-passages.component.pug',\n})\nexport class TripPassagesComponent implements AfterViewInit, OnDestroy {\n    public readonly DEBOUNCE_TIME: number = 5000;\n    private status: BehaviorSubject = new BehaviorSubject(undefined);\n    private snapshotDataSubscription: Subscription;\n    private pollSubscription: Subscription;\n    public readonly StatusOps: typeof UpdateStatus = UpdateStatus;\n    constructor(private route: ActivatedRoute,\n        private apiService: ApiService,\n        private router: Router) {\n        this.snapshotDataSubscription = this.route.data.subscribe((data) => {\n            this.status.next({\n                passages: data['tripPassages'],\n                status: UpdateStatus.LOADED,\n                timestamp: Date.now(),\n            });\n        });\n    }\n\n    /**\n     * Returns the TripPassages\n     * @returns undefined or {@link TripPassagesLocation}\n     */\n    public get tripData(): TripPassagesLocation {\n        if (this.status.value) {\n            return this.status.value.passages;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the last timestamp when data was tried to be retrieved\n     * @returns number or 0 if no timestamp is set\n     */\n    public get lastTimestamp(): number {\n        if (this.status.value) {\n            return this.status.value.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * Returns the current set update status or {@link UpdateStatus.LOADING}\n     * @returns the {@link UpdateStatus}\n     */\n    public get statusCode(): UpdateStatus {\n        if (this.status.value) {\n            return this.status.value.status;\n        }\n        return UpdateStatus.LOADING;\n    }\n\n    /**\n     * returns the current tripID\n     */\n    public get tripId(): TripId {\n        return this.route.snapshot.params.tripId;\n    }\n\n    /**\n     * short hand to retrieve route name\n     */\n    public get routeName(): string {\n        return (this.tripData) ? this.tripData.routeName : '';\n    }\n\n    /**\n     * List of passages\n     */\n    public get tripPassages(): IActualTripPassage[] {\n        return (this.tripData !== undefined) ? this.tripData.actual : [];\n    }\n\n    /**\n     * Returns if an error has happened during the last update\n     * @returns true if an error occured\n     */\n    public hasError(): boolean {\n        return this.statusCode >= UpdateStatus.ERROR;\n    }\n\n    private handleError(err?: any): Observable {\n        let status: UpdateStatus = UpdateStatus.ERROR;\n        if (err.status) {\n            // Http Error\n            const statusCode: number = err.status;\n            if (statusCode === 404) {\n                status = UpdateStatus.NOT_FOUND;\n                this.router.navigate(['not-found'], {\n                    queryParams: {\n                        type: 'passages',\n                    },\n                });\n            } else if (statusCode >= 500 && statusCode  {\n                return this.route.snapshot.params['tripId'];\n            }),\n            flatMap((tripId: TripId) => {\n                return this.apiService.getTripPassages(tripId);\n            }),\n            map((passages: TripPassagesLocation): IPassageStatus => {\n                return {\n                    passages: passages,\n                    status: UpdateStatus.LOADED,\n                    timestamp: Date.now(),\n                };\n            }),\n            catchError(this.handleError.bind(this)))\n            .subscribe(new Subscriber((val: IPassageStatus) => {\n                if (val.passages.tripId === this.tripId) {\n                    this.status.next(val);\n                } else {\n                    // trigger so a reload can execute\n                    this.status.next(this.status.value);\n                }\n            }));\n    }\n    /**\n     * destroys created update observables\n     */\n    public ngOnDestroy(): void {\n        if (this.snapshotDataSubscription) {\n            this.snapshotDataSubscription.unsubscribe();\n        }\n        if (this.pollSubscription) {\n            this.pollSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n    \n        app-map-header-box([blur]=\"hasError()\",title=\"{{routeName}} - {{tripData?.directionText}}\")\n    map(appTripPassages,[location]=\"tripData?.location\",role=\"none\")\ndiv.error-box(*ngIf=\"hasError()\",aria-errormessage=\"Error retrieving data\",i18n-aria-errormessage=\"@@errorUpdatingData\")\n    span.title(i18n=\"@@anErrorOccured\") An error occured (Code: {{statusCode}})\n    span.text Retrying in\n        |\n        span(appCountdownTimer,[targetTime]=\"lastTimestamp + DEBOUNCE_TIME\",[placeholder]=\"'sync'\") test\nmat-nav-list(*ngIf=\"tripId==tripData?.tripId\",role=\"list\")\n    a(*ngFor=\"let passage of tripPassages\",[routerLink]=\"['/stop', passage?.stop?.shortName]\",role=\"listitem\")\n        mat-list-item\n            mat-icon(matListIcon,role=\"figure\",i18n-aria-label=\"@@busStopIcon\",aria-label=\"Bus stop icon\") trip_origin\n            h3(matLine,aria-label=\"Stop name\",i18n-aria-label=\"@@stopName\") {{passage?.stop?.name}}\n            p(matLine)\n                span(role=\"timer\") {{passage?.actualTime}}\n                |\n                span(class=\"demo-2\",role=\"status\") -- {{passage?.status}}\n    \n\n    \n                \n                    ./trip-passages.component.scss\n                \n                h3.route-title {\n    padding: 24px;\n}\n\ndiv.error-box {\n    background: #F44336;\n    padding: 16px;\n    flex:0 0 auto; \n    span.title {\n        text-transform: capitalize;\n        font-weight: bold;\n        display: block;\n        font-size: 16px;\n    }\n    span.text {\n        font-size: 12px;\n    }\n}\n\nmat-nav-list{\n    flex-grow: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-map-header-box([blur]=\"hasError()\",title=\"{{routeName}} - {{tripData?.directionText}}\")    map(appTripPassages,[location]=\"tripData?.location\",role=\"none\")div.error-box(*ngIf=\"hasError()\",aria-errormessage=\"Error retrieving data\",i18n-aria-errormessage=\"@@errorUpdatingData\")    span.title(i18n=\"@@anErrorOccured\") An error occured (Code: {{statusCode}})    span.text Retrying in        |        span(appCountdownTimer,[targetTime]=\"lastTimestamp + DEBOUNCE_TIME\",[placeholder]=\"\\'sync\\'\") testmat-nav-list(*ngIf=\"tripId==tripData?.tripId\",role=\"list\")    a(*ngFor=\"let passage of tripPassages\",[routerLink]=\"[\\'/stop\\', passage?.stop?.shortName]\",role=\"listitem\")        mat-list-item            mat-icon(matListIcon,role=\"figure\",i18n-aria-label=\"@@busStopIcon\",aria-label=\"Bus stop icon\") trip_origin            h3(matLine,aria-label=\"Stop name\",i18n-aria-label=\"@@stopName\") {{passage?.stop?.name}}            p(matLine)                span(role=\"timer\") {{passage?.actualTime}}                |                span(class=\"demo-2\",role=\"status\") -- {{passage?.status}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommonErrorComponent', 'selector': 'app-common-error'},{'name': 'DepartureListComponent', 'selector': 'app-departure-list'},{'name': 'DepartureListItemComponent', 'selector': 'app-departure-list-item'},{'name': 'MainToolbarComponent', 'selector': 'app-main-toolbar'},{'name': 'MapHeaderBoxComponent', 'selector': 'app-map-header-box'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RetryDialogComponent', 'selector': 'app-retry-dialog'},{'name': 'RouteListComponent', 'selector': 'app-route-list'},{'name': 'RouteLoadingIndicatorComponent', 'selector': 'app-route-loading-indicator'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StopInfoComponent', 'selector': 'app-stop-info'},{'name': 'StopsInfoComponent', 'selector': 'app-stops-info'},{'name': 'ToolbarSearchBoxComponent', 'selector': 'app-toolbar-search'},{'name': 'TripPassagesComponent', 'selector': 'app-trip-passages'}];\n    var DIRECTIVES = [{'name': 'CountdownTimerDirective', 'selector': 'span[appCountdownTimer]'},{'name': 'DrawableDirective', 'selector': '[appDrawable]'},{'name': 'FollowBusMapDirective', 'selector': 'map[appTripPassages]'},{'name': 'MainMapDirective', 'selector': 'map[appMainMap]'},{'name': 'StopLocationMapDirective', 'selector': 'map[appStopLocation]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripPassagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TripPassagesModule.html":{"url":"modules/TripPassagesModule.html","title":"module - TripPassagesModule","body":"\n                   \n\n\n\n\n    Modules\n    TripPassagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TripPassagesModule\n\n\n\ncluster_TripPassagesModule_declarations\n\n\n\ncluster_TripPassagesModule_imports\n\n\n\n\nFollowBusMapDirective\n\nFollowBusMapDirective\n\n\n\nTripPassagesModule\n\nTripPassagesModule\n\nTripPassagesModule -->\n\nFollowBusMapDirective->TripPassagesModule\n\n\n\n\n\nTripPassagesComponent\n\nTripPassagesComponent\n\nTripPassagesModule -->\n\nTripPassagesComponent->TripPassagesModule\n\n\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nTripPassagesModule -->\n\nCountdownTimerModule->TripPassagesModule\n\n\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nTripPassagesModule -->\n\nMapHeaderBoxModule->TripPassagesModule\n\n\n\n\n\nTripPassagesRoutingModule\n\nTripPassagesRoutingModule\n\nTripPassagesModule -->\n\nTripPassagesRoutingModule->TripPassagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FollowBusMapDirective\n                        \n                        \n                            TripPassagesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CountdownTimerModule\n                        \n                        \n                            MapHeaderBoxModule\n                        \n                        \n                            TripPassagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatIconModule, MatListModule, MatProgressSpinnerModule, MatToolbarModule } from '@angular/material';\nimport { MapHeaderBoxModule } from '../common';\nimport { CountdownTimerModule } from '../common/countdown-timer';\nimport { FollowBusMapDirective } from './follow-bus-map.directive';\nimport { TripPassagesRoutingModule } from './trip-passages-routing.module';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n@NgModule({\n    declarations: [\n        TripPassagesComponent,\n        FollowBusMapDirective,\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatListModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatProgressSpinnerModule,\n        TripPassagesRoutingModule,\n        MapHeaderBoxModule,\n        CountdownTimerModule,\n    ],\n    providers: [\n        TripPassagesResolver,\n    ],\n})\nexport class TripPassagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TripPassagesResolver.html":{"url":"guards/TripPassagesResolver.html","title":"guard - TripPassagesResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TripPassagesResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/trip-passages/trip-passages.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/trip-passages/trip-passages.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/trip-passages/trip-passages.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../services';\n\n@Injectable()\nexport class TripPassagesResolver implements Resolve {\n\n    public constructor(private api: ApiService, private router: Router) { }\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api.getTripPassages(route.params['tripId'])\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['not-found']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TripPassagesRoutingModule.html":{"url":"modules/TripPassagesRoutingModule.html","title":"module - TripPassagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TripPassagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/trip-passages/trip-passages-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TripPassagesComponent } from './trip-passages.component';\nimport { TripPassagesResolver } from './trip-passages.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: TripPassagesComponent,\n        data: {\n            openSidebar: true,\n        },\n        path: ':tripId',\n        resolve: {\n            tripPassages: TripPassagesResolver,\n        },\n    },\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class TripPassagesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLocationService.html":{"url":"injectables/UserLocationService.html","title":"injectable - UserLocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-location.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                locationErrorObservable\n                            \n                            \n                                    Private\n                                locationErrorSubject\n                            \n                            \n                                    Public\n                                    Readonly\n                                locationObservable\n                            \n                            \n                                    Private\n                                locationSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPositionRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    featureAvailable\n                                \n                                \n                                    location\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-location.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPositionRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPositionRequest(timeout: number, highAccuracy: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-location.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                \n                                \n                                    highAccuracy\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationErrorObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.locationErrorSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationErrorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.locationSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        featureAvailable\n                    \n                \n\n                \n                    \n                        getfeatureAvailable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n\n                \n                    \n                        getlocation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/user-location.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { catchError, debounceTime, flatMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserLocationService {\n\n    private locationErrorSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    public readonly locationErrorObservable: Observable = this.locationErrorSubject.asObservable();\n\n    private locationSubject: BehaviorSubject = new BehaviorSubject(undefined);\n    public readonly locationObservable: Observable = this.locationSubject.asObservable();\n    public constructor() {\n        this.locationErrorObservable\n            .pipe(debounceTime(30000),\n                flatMap((val) => {\n                    return this.createPositionRequest();\n                }),\n                catchError((err) => {\n                    this.locationErrorSubject.next(err);\n                    return EMPTY;\n                }))\n            .subscribe((val) => {\n                this.locationErrorSubject.next(undefined);\n                this.locationSubject.next(val);\n            });\n    }\n\n    public get featureAvailable(): boolean {\n        return (navigator.geolocation) ? true : false;\n    }\n\n    public get location(): Position {\n        return this.locationSubject.value;\n    }\n\n    public createPositionRequest(timeout: number = 10000, highAccuracy: boolean = false) {\n        return new Observable((subscriber) => {\n\n            const geoSuccess = (position: Position): void => {\n                subscriber.next(position);\n                subscriber.complete();\n            };\n            const geoError = (error: PositionError): void => {\n                subscriber.error(error);\n            };\n            navigator.geolocation.getCurrentPosition(geoSuccess, geoError, {\n                enableHighAccuracy: highAccuracy,\n                maximumAge: 5 * 60 * 1000, // Cache 5 minutes\n                timeout: timeout,\n            });\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLocationSubscriber.html":{"url":"classes/UserLocationSubscriber.html","title":"class - UserLocationSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLocationSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/common/leaflet-map.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(cmp: LeafletMapComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/common/leaflet-map.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cmp\n                                                  \n                                                        \n                                                                        LeafletMapComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(value: Position)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/common/leaflet-map.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Position\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport { Subject, Subscriber, Subscription } from 'rxjs';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { UserLocationService } from 'src/app/services/user-location.service';\nimport './rotating-marker.patch';\n\nexport enum MapMoveEventType {\n    NONE = 0,\n    START = 1,\n    END = 2,\n}\n\nexport interface IMapMoveStartEvent {\n    type: MapMoveEventType.START;\n}\n\nexport interface IMapMoveEndEvent {\n    type: MapMoveEventType.END;\n}\n\nexport type MapMoveEvent = IMapMoveStartEvent | IMapMoveEndEvent;\n\nexport interface IMapBounds {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n}\n\nexport class UserLocationSubscriber extends Subscriber {\n    public constructor(private cmp: LeafletMapComponent) {\n        super();\n    }\n\n    public next(value: Position) {\n        this.cmp.setUserLocation(value ? value.coords : undefined);\n    }\n}\n\nexport abstract class LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(private elRef: ElementRef,\n        protected zone: NgZone,\n        protected userLocationService: UserLocationService,\n        protected settings: SettingsService) {\n    }\n    @ViewChild('mapcontainer') mapContainer;\n    private map: L.Map;\n    public readonly mapMove: Subject = new Subject();\n    private mUserLocationSubscription: Subscription = undefined;\n    private userLocationLayer: L.FeatureGroup;\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            // Seems to be necessary to run ngZone updates EVERY SINGLE TIME!!!! the map is firing a drag event\n            this.map = L.map(this.elRef.nativeElement, { zoomControl: false })\n                .setView(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: 'Map data &copy; OpenStreetMap '\n                    + 'contributors, CC-BY-SA, '\n                    + 'Imagery © Mapbox',\n                maxZoom: 18,\n                subdomains: ['a', 'b', 'c'],\n            }).addTo(this.map);\n            this.map.on('movestart', () => {\n                this.mapMove.next({\n                    type: MapMoveEventType.START,\n                });\n            });\n            this.map.on('moveend', (...args: any[]) => {\n                this.mapMove.next({\n                    type: MapMoveEventType.END,\n                });\n            });\n        });\n        this.mUserLocationSubscription = this.userLocationService\n            .locationObservable.subscribe(new UserLocationSubscriber(this));\n    }\n\n    /**\n     * Sets the user location. To clear the location set it to undefined\n     * @param coords The coords or undefined\n     */\n    public setUserLocation(coords: Coordinates): void {\n        if (this.userLocationLayer) {\n            this.userLocationLayer.clearLayers();\n        } else {\n            this.userLocationLayer = L.featureGroup();\n            this.userLocationLayer.addTo(this.map);\n        }\n        if (coords === undefined) {\n            return;\n        }\n        const radius: number = coords.accuracy / 2;\n        const userPosition: [number, number] = [coords.latitude, coords.longitude];\n        L.circle(userPosition, radius, {\n            interactive: false,\n        }).addTo(this.userLocationLayer);\n        L.circleMarker(userPosition, {\n            color: '#0000FF',\n            fillColor: '#0000FF',\n            fillOpacity: 0.9,\n            opacity: 0.1,\n            radius: 5,\n        }).addTo(this.userLocationLayer);\n    }\n\n    public getMap(): L.Map | undefined {\n        return this.map;\n    }\n\n    public addLayer(layer: L.Layer): L.Layer {\n        return layer.addTo(this.map);\n    }\n\n    /**\n     * wrapper for this.map.getBounds()\n     */\n    public get mapBounds(): L.LatLngBounds {\n        return this.map.getBounds();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.mUserLocationSubscription) {\n            this.mUserLocationSubscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VehicleLoadSubscriber.html":{"url":"classes/VehicleLoadSubscriber.html","title":"class - VehicleLoadSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VehicleLoadSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/main-map/main-map.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subscriber\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mainMap: MainMapDirective)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-map/main-map.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mainMap\n                                                  \n                                                        \n                                                                    MainMapDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(res: IVehicleLocationList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-map/main-map.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            IVehicleLocationList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { IStopLocation, IVehicleLocation, IVehicleLocationList } from '@donmahallem/trapeze-api-types';\nimport * as L from 'leaflet';\nimport { combineLatest, from, timer, Observable, Subscriber, Subscription } from 'rxjs';\nimport { catchError, filter, flatMap, map, startWith } from 'rxjs/operators';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { createStopIcon, createVehicleIcon } from '../../leaflet';\nimport { IMapBounds, LeafletMapComponent, MapMoveEvent, MapMoveEventType } from '../../modules/common/leaflet-map.component';\nimport { StopPointService } from '../../services/stop-point.service';\nimport { UserLocationService } from '../../services/user-location.service';\nimport { ApiService } from './../../services';\n\nexport class VehicleLoadSubscriber extends Subscriber {\n\n    public constructor(private mainMap: MainMapDirective) {\n        super();\n    }\n    public next(res: IVehicleLocationList): void {\n        this.mainMap.setVehicles(res);\n    }\n}\n\n@Directive({\n    selector: 'map[appMainMap]',\n})\nexport class MainMapDirective extends LeafletMapComponent implements AfterViewInit, OnDestroy {\n    constructor(elRef: ElementRef,\n        private apiService: ApiService,\n        private router: Router,\n        private stopService: StopPointService,\n        userLocationService: UserLocationService,\n        private snackBar: MatSnackBar,\n        settings: SettingsService,\n        zone: NgZone) {\n        super(elRef, zone, userLocationService, settings);\n    }\n\n    private stopMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleMarkerLayer: L.FeatureGroup = undefined;\n    private vehicleUpdateSubscription: Subscription;\n\n    public setVehicles(vehicles: IVehicleLocationList): void {\n        if (this.vehicleMarkerLayer !== undefined) {\n            this.vehicleMarkerLayer.clearLayers();\n        } else {\n            this.vehicleMarkerLayer = L.featureGroup();\n            this.vehicleMarkerLayer.addTo(this.getMap());\n            this.vehicleMarkerLayer.on('click', this.markerOnClick.bind(this));\n        }\n        if (vehicles && Array.isArray(vehicles.vehicles)) {\n            for (const veh of vehicles.vehicles) {\n                if (veh.isDeleted === true) {\n                    continue;\n                }\n                this.addVehicleMarker(veh).addTo(this.vehicleMarkerLayer);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.addMarker();\n        this.startVehicleUpdater();\n        const ourCustomControl = L.Control.extend({\n            onAdd: () => {\n                const container = L.DomUtil.create('i', 'material-icons leaflet-bar leaflet-control leaflet-control-custom');\n                container.style.backgroundColor = 'white';\n                container.style.width = '42px';\n                container.style.height = '42px';\n                container.style.lineHeight = '42px';\n                container.style.textAlign = 'center';\n                container.style.verticalAlign = 'center';\n                container.style.cursor = 'pointer';\n                container.innerHTML = 'my_location';\n                container.style.userSelect = 'none';\n                container.style.msUserSelect = 'none';\n                container.onclick = () => {\n                    if (this.userLocationService.location) {\n                        const pos: Position = this.userLocationService.location;\n                        this.getMap().panTo({\n                            alt: 5000,\n                            lat: pos.coords.latitude, // / 3600000,\n                            lng: pos.coords.longitude, // / 3600000,\n                        },\n                            { animate: true });\n                    } else {\n                        this.snackBar.open('No location acquired yet!',\n                            undefined,\n                            {\n                                duration: 2000,\n                            });\n                    }\n                };\n                return container;\n            },\n            options: {\n                position: 'bottomright',\n                // control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'\n            },\n        });\n        this.getMap().addControl(new ourCustomControl());\n        // this.getMap().flyTo(this.settings.getInitialMapCenter(), this.settings.getInitialMapZoom());\n    }\n\n    public startVehicleUpdater(): void {\n        // as mapMove doesn't emit on init this needs to be provided to load atleast once\n        const primedMoveObservable: Observable = this.mapMove.pipe(\n            startWith({\n                type: MapMoveEventType.END,\n            }));\n        this.vehicleUpdateSubscription = combineLatest([timer(0, 5000), primedMoveObservable])\n            .pipe(\n                map((value: [number, MapMoveEvent]): MapMoveEvent => {\n                    return value[1];\n                }),\n                filter((event: MapMoveEvent): boolean => {\n                    return (event.type === MapMoveEventType.END);\n                }),\n                flatMap((moveEvent: MapMoveEvent) => {\n                    const bounds: IMapBounds = {\n                        bottom: this.mapBounds.getSouth(),\n                        left: this.mapBounds.getWest(),\n                        right: this.mapBounds.getEast(),\n                        top: this.mapBounds.getNorth(),\n                    };\n                    return this.apiService.getVehicleLocations(bounds);\n                }),\n                catchError((err: Error) => {\n                    return from([{}]);\n                }))\n            .subscribe(new VehicleLoadSubscriber(this));\n    }\n\n    public markerOnClick(event) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['passages', event.sourceTarget.data.tripId]);\n        });\n    }\n    public addVehicleMarker(vehicle: IVehicleLocation): L.Marker {\n        const vehicleIcon: L.DivIcon = createVehicleIcon(vehicle.heading, vehicle.name.split(' ')[0], 40);\n        const markerT: any = L.marker([vehicle.latitude / 3600000, vehicle.longitude / 3600000], \n            {\n                icon: vehicleIcon,\n                rotationAngle: vehicle.heading - 90,\n                title: vehicle.name,\n                zIndexOffset: 100,\n            });\n        markerT.data = vehicle;\n        return markerT;\n    }\n    public addMarker() {\n        this.stopService.stopLocationsObservable\n            .subscribe((stops: IStopLocation[]) => {\n                const stopList: L.Marker[] = [];\n                for (const stop of stops) {\n                    if (stop === null) {\n                        continue;\n                    }\n                    const greenIcon = createStopIcon();\n                    const markerT: L.Marker = L.marker([stop.latitude / 3600000, stop.longitude / 3600000],\n                        {\n                            clickable: true,\n                            icon: greenIcon,\n                            riseOffset: 10,\n                            riseOnHover: true,\n                            title: stop.name,\n                            zIndexOffset: 10,\n                        });\n                    (markerT).data = stop;\n                    stopList.push(markerT);\n                }\n                if (this.stopMarkerLayer !== undefined) {\n                    this.stopMarkerLayer.remove();\n                }\n                const featureGroup: L.FeatureGroup = L.featureGroup(stopList);\n                this.stopMarkerLayer = featureGroup.addTo(this.getMap());\n                featureGroup.on('click', this.stopMarkerOnClick.bind(this));\n            });\n    }\n\n    public stopMarkerOnClick(event: { sourceTarget: { data: IStopLocation } }) {\n        // needs to be taken back into the ng zone\n        this.zone.run(() => {\n            this.router.navigate(['stop', event.sourceTarget.data.shortName]);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this.vehicleUpdateSubscription) {\n            this.vehicleUpdateSubscription.unsubscribe();\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-error-handler.ts\n            \n            injectable\n            AppErrorHandler\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/app-preloading-strategy.ts\n            \n            class\n            AppPreloadingStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            moduleImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            SettingsInitializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/drawable.directive.ts\n            \n            directive\n            DrawableDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_SHADOW_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/constants.ts\n            \n            variable\n            STOP_ICON_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/icons.ts\n            \n            variable\n            createStopIcon\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/leaflet/icons.ts\n            \n            variable\n            createVehicleIcon\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Bounds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/countdown-timer/countdown-timer.directive.ts\n            \n            directive\n            CountdownTimerDirective\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            class\n            LeafletMapComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            class\n            UserLocationSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapBounds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapMoveEndEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/common/leaflet-map.component.ts\n            \n            interface\n            IMapMoveStartEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/common/map-header-box/map-header-box.component.ts\n            \n            component\n            MapHeaderBoxComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/common/retry-dialog/retry-dialog.component.ts\n            \n            component\n            RetryDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/common/retry-dialog/retry-dialog.component.ts\n            \n            class\n            RetryDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/error/common-error.component.ts\n            \n            component\n            CommonErrorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/error/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-map/main-map.directive.ts\n            \n            directive\n            MainMapDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/main-map/main-map.directive.ts\n            \n            class\n            VehicleLoadSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/main-toolbar.component.ts\n            \n            component\n            MainToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/main-toolbar.component.ts\n            \n            class\n            NavigationSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/route-loading-indicator.component.ts\n            \n            component\n            RouteLoadingIndicatorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/route-loading-indicator.component.ts\n            \n            class\n            RouteLoadingSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/main-toolbar/search-box.component.ts\n            \n            component\n            ToolbarSearchBoxComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/departure-list-item.component.ts\n            \n            component\n            DepartureListItemComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/modules/stop/departure-list.component.ts\n            \n            component\n            DepartureListComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/route-list.component.ts\n            \n            component\n            RouteListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-info.component.ts\n            \n            component\n            StopInfoComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-info.resolver.ts\n            \n            guard\n            StopInfoResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/stop/stop-map.directive.ts\n            \n            directive\n            StopLocationMapDirective\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/modules/stops/stops-info.component.ts\n            \n            component\n            StopsInfoComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/stops/stops.resolver.ts\n            \n            guard\n            StopsResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/follow-bus-map.directive.ts\n            \n            directive\n            FollowBusMapDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/follow-bus-map.directive.ts\n            \n            class\n            RoutesSubscriber\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.component.ts\n            \n            component\n            TripPassagesComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.component.ts\n            \n            interface\n            IPassageStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/trip-passages/trip-passages.resolver.ts\n            \n            guard\n            TripPassagesResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/rxjs-util/retry-dialog-strategy.ts\n            \n            variable\n            retryDialogStrategy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            injectable\n            AppNotificationService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/app-notification.service.ts\n            \n            interface\n            IAppNotification\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            class\n            SettingsLoadSubscriber\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/sidebar.service.ts\n            \n            injectable\n            SidebarService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/stop-point.service.ts\n            \n            class\n            StopPointLoadSubscriber\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/stop-point.service.ts\n            \n            injectable\n            StopPointService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/user-location.service.ts\n            \n            injectable\n            UserLocationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/app-version.ts\n            \n            function\n            getAppVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.base.ts\n            \n            interface\n            IEnvironmentBase\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.pwa.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.example.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.14\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.14\n        \n            @angular/compiler : ^7.2.14\n        \n            @angular/core : ^7.2.14\n        \n            @angular/forms : ^7.2.14\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ^7.2.14\n        \n            @angular/platform-browser-dynamic : ^7.2.14\n        \n            @angular/pwa : ^0.13.8\n        \n            @angular/router : ^7.2.14\n        \n            @angular/service-worker : ^7.2.14\n        \n            @donmahallem/trapeze-api-types : ^1.2.1\n        \n            @types/leaflet : 1.4.4\n        \n            core-js : ^3.0.1\n        \n            leaflet : ^1.4.0\n        \n            leaflet-rotatedmarker : ^0.2.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-cli-pug-loader : ^0.1.7\n        \n            rxjs : ^6.5.1\n        \n            zone.js : ^0.9.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppNotificationType   (src/.../app-notification.service.ts)\n                        \n                        \n                            MapMoveEventType   (src/.../leaflet-map.component.ts)\n                        \n                        \n                            UpdateStatus   (src/.../trip-passages.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/app-notification.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AppNotificationType\n                    \n                \n                    \n                        \n                            Notification Type\n\n                        \n                    \n                        \n                            \n                                 ALERT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/modules/common/leaflet-map.component.ts\n    \n        \n            \n                \n                    \n                        \n                        MapMoveEventType\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/modules/trip-passages/trip-passages.component.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdateStatus\n                    \n                \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 LOADED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PAUSED\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getAppVersion   (src/.../app-version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/app-version.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getAppVersion\n                        \n                        \n                    \n                \n            \n            \n                \ngetAppVersion()\n                \n            \n\n\n\n\n            \n                \n                    Reads the angular app version from the package file\n\n\n                    \n                    \n                    \n                        Returns :         AppVersion\n\n                    \n                    \n                        The current app version\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ntrapeze-client-ng\n   \nNgsw Disabled: \nNgsw Enabled:  \nDescription\nThis is the angular client for the Trapeze Backend provided by this express route.\nDocumentation\nThe Documentation can be found HERE\nUsage\nIn order to build this client successfully you will need to copy the environment.example.ts file and modify the values as you need.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CountdownTimerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainMapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainToolbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapHeaderBoxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RetryDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TripPassagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TripPassagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CountdownTimerModule\n\n\n\ncluster_CountdownTimerModule_declarations\n\n\n\ncluster_CountdownTimerModule_exports\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_MainMapModule\n\n\n\ncluster_MainMapModule_declarations\n\n\n\ncluster_MainMapModule_exports\n\n\n\ncluster_MainToolbarModule\n\n\n\ncluster_MainToolbarModule_declarations\n\n\n\ncluster_MainToolbarModule_exports\n\n\n\ncluster_MapHeaderBoxModule\n\n\n\ncluster_MapHeaderBoxModule_declarations\n\n\n\ncluster_MapHeaderBoxModule_exports\n\n\n\ncluster_RetryDialogModule\n\n\n\ncluster_RetryDialogModule_declarations\n\n\n\ncluster_RetryDialogModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_StopModule\n\n\n\ncluster_StopModule_declarations\n\n\n\ncluster_StopModule_imports\n\n\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\ncluster_TripPassagesModule\n\n\n\ncluster_TripPassagesModule_declarations\n\n\n\ncluster_TripPassagesModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrawableDirective\n\nDrawableDirective\n\nAppModule -->\n\nDrawableDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainMapModule\n\nMainMapModule\n\nAppModule -->\n\nMainMapModule->AppModule\n\n\n\n\n\nMainMapDirective \n\nMainMapDirective \n\nMainMapDirective  -->\n\nMainMapModule->MainMapDirective \n\n\n\n\n\nMainToolbarModule\n\nMainToolbarModule\n\nAppModule -->\n\nMainToolbarModule->AppModule\n\n\n\n\n\nMainToolbarComponent \n\nMainToolbarComponent \n\nMainToolbarComponent  -->\n\nMainToolbarModule->MainToolbarComponent \n\n\n\n\n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent \n\nRouteLoadingIndicatorComponent  -->\n\nMainToolbarModule->RouteLoadingIndicatorComponent \n\n\n\n\n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent \n\nToolbarSearchBoxComponent  -->\n\nMainToolbarModule->ToolbarSearchBoxComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nAppNotificationService\n\nAppNotificationService\n\nAppModule -->\n\nAppNotificationService->AppModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nAppModule -->\n\nSettingsService->AppModule\n\n\n\n\n\nStopPointService\n\nStopPointService\n\nAppModule -->\n\nStopPointService->AppModule\n\n\n\n\n\nUserLocationService\n\nUserLocationService\n\nAppModule -->\n\nUserLocationService->AppModule\n\n\n\n\n\nCountdownTimerDirective\n\nCountdownTimerDirective\n\n\n\nCountdownTimerModule\n\nCountdownTimerModule\n\nCountdownTimerModule -->\n\nCountdownTimerDirective->CountdownTimerModule\n\n\n\n\n\nCountdownTimerDirective \n\nCountdownTimerDirective \n\nCountdownTimerDirective  -->\n\nCountdownTimerModule->CountdownTimerDirective \n\n\n\n\n\nTripPassagesModule\n\nTripPassagesModule\n\nTripPassagesModule -->\n\nCountdownTimerModule->TripPassagesModule\n\n\n\n\n\nCommonErrorComponent\n\nCommonErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nCommonErrorComponent->ErrorModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nErrorModule -->\n\nNotFoundComponent->ErrorModule\n\n\n\n\n\nErrorRoutingModule\n\nErrorRoutingModule\n\nErrorModule -->\n\nErrorRoutingModule->ErrorModule\n\n\n\n\n\nMainMapDirective\n\nMainMapDirective\n\nMainMapModule -->\n\nMainMapDirective->MainMapModule\n\n\n\n\n\nMainToolbarComponent\n\nMainToolbarComponent\n\nMainToolbarModule -->\n\nMainToolbarComponent->MainToolbarModule\n\n\n\n\n\nRouteLoadingIndicatorComponent\n\nRouteLoadingIndicatorComponent\n\nMainToolbarModule -->\n\nRouteLoadingIndicatorComponent->MainToolbarModule\n\n\n\n\n\nToolbarSearchBoxComponent\n\nToolbarSearchBoxComponent\n\nMainToolbarModule -->\n\nToolbarSearchBoxComponent->MainToolbarModule\n\n\n\n\n\nMapHeaderBoxComponent\n\nMapHeaderBoxComponent\n\n\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule\n\nMapHeaderBoxModule -->\n\nMapHeaderBoxComponent->MapHeaderBoxModule\n\n\n\n\n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent \n\nMapHeaderBoxComponent  -->\n\nMapHeaderBoxModule->MapHeaderBoxComponent \n\n\n\n\n\nStopModule\n\nStopModule\n\nStopModule -->\n\nMapHeaderBoxModule->StopModule\n\n\n\nTripPassagesModule -->\n\nMapHeaderBoxModule->TripPassagesModule\n\n\n\n\n\nRetryDialogComponent\n\nRetryDialogComponent\n\n\n\nRetryDialogModule\n\nRetryDialogModule\n\nRetryDialogModule -->\n\nRetryDialogComponent->RetryDialogModule\n\n\n\n\n\nRetryDialogComponent \n\nRetryDialogComponent \n\nRetryDialogComponent  -->\n\nRetryDialogModule->RetryDialogComponent \n\n\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nRetryDialogModule->StopsModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nDepartureListComponent\n\nDepartureListComponent\n\nStopModule -->\n\nDepartureListComponent->StopModule\n\n\n\n\n\nDepartureListItemComponent\n\nDepartureListItemComponent\n\nStopModule -->\n\nDepartureListItemComponent->StopModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nStopModule -->\n\nRouteListComponent->StopModule\n\n\n\n\n\nStopInfoComponent\n\nStopInfoComponent\n\nStopModule -->\n\nStopInfoComponent->StopModule\n\n\n\n\n\nStopLocationMapDirective\n\nStopLocationMapDirective\n\nStopModule -->\n\nStopLocationMapDirective->StopModule\n\n\n\n\n\nStopRoutingModule\n\nStopRoutingModule\n\nStopModule -->\n\nStopRoutingModule->StopModule\n\n\n\n\n\nStopsInfoComponent\n\nStopsInfoComponent\n\nStopsModule -->\n\nStopsInfoComponent->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\nFollowBusMapDirective\n\nFollowBusMapDirective\n\nTripPassagesModule -->\n\nFollowBusMapDirective->TripPassagesModule\n\n\n\n\n\nTripPassagesComponent\n\nTripPassagesComponent\n\nTripPassagesModule -->\n\nTripPassagesComponent->TripPassagesModule\n\n\n\n\n\nTripPassagesRoutingModule\n\nTripPassagesRoutingModule\n\nTripPassagesModule -->\n\nTripPassagesRoutingModule->TripPassagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        18 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppVersion   (src/.../app-version.ts)\n                        \n                        \n                            CreateDialogFunc   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            CreateDialogFuncResponse   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            ErrorItem   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            MapMoveEvent   (src/.../leaflet-map.component.ts)\n                        \n                        \n                            RetryDialogStrategyFunc   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            RetryDialogStrategyFuncResponse   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            TripPassagesLocation   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/app-version.ts\n    \n    \n        \n            \n                \n                    \n                    AppVersion\n                \n            \n            \n                \n                    App Version\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/rxjs-util/retry-dialog-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    CreateDialogFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CreateDialogFuncResponse\n                \n            \n            \n                \n                            MatDialogRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ErrorItem\n                \n            \n            \n                \n                        any | HttpErrorResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RetryDialogStrategyFunc\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RetryDialogStrategyFuncResponse\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/modules/common/leaflet-map.component.ts\n    \n    \n        \n            \n                \n                    \n                    MapMoveEvent\n                \n            \n            \n                \n                        IMapMoveStartEvent | IMapMoveEndEvent\n\n                \n            \n        \n    \n    src/app/models/index.ts\n    \n    \n        \n            \n                \n                    \n                    TripPassagesLocation\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createStopIcon   (src/.../icons.ts)\n                        \n                        \n                            createVehicleIcon   (src/.../icons.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.example.pwa.ts)\n                        \n                        \n                            environment   (src/.../environment.example.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            moduleImports   (src/.../app.module.ts)\n                        \n                        \n                            retryDialogStrategy   (src/.../retry-dialog-strategy.ts)\n                        \n                        \n                            SettingsInitializer   (src/.../app.module.ts)\n                        \n                        \n                            STOP_ICON_SHADOW_URL   (src/.../constants.ts)\n                        \n                        \n                            STOP_ICON_URL   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/leaflet/icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createStopIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.Icon\n\n                        \n                    \n                    \n                        \n                            Default value : (iconSize: number = 24): L.Icon => {\n    return L.icon({\n        iconAnchor: [iconSize / 2, iconSize / 2], // point of the icon which will correspond to marker's location\n        // shadowUrl: 'leaf-shadow.png',\n        iconSize: [iconSize, iconSize], // size of the icon\n        iconUrl: STOP_ICON_URL,\n        popupAnchor: [iconSize / 2, iconSize / 2], // point from which the popup should open relative to the iconAnchor\n        shadowAnchor: [iconSize / 7 * 3, iconSize / 7 * 3],  // the same for the shadow\n        shadowSize: [iconSize * 1.1, iconSize * 1.1], // size of the shadow\n        shadowUrl: STOP_ICON_SHADOW_URL,\n    });\n}\n                        \n                    \n\n                \n                    \n                        Creates an StopIcon instance to be used for leaflet markers\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createVehicleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.DivIcon\n\n                        \n                    \n                    \n                        \n                            Default value : (heading: number, name: string, iconSize: number = 40) => {\n        return L.divIcon({\n            className: heading > 180 ? 'vehiclemarker-rotated' : 'vehiclemarker',\n            html: '' + name.split(' ')[0] + '',\n            iconAnchor: [iconSize / 2, Math.round(iconSize / 2 / 68 * 44)], // point of the icon which will correspond to marker's location\n            iconSize: [iconSize, Math.round(iconSize / 68 * 44)], // size of the icon\n            popupAnchor: [12, 12], // point from which the popup should open relative to the iconAnchor\n            shadowAnchor: [32, 32],  // the same for the shadow\n            shadowSize: [24, 24], // size of the shadow\n        });\n    }\n                        \n                    \n\n                \n                    \n                        Creates an vehicle icon to be used for leaflet markers\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.example.pwa.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: true,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.example.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IEnvironmentBase\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apiEndpoint: '/',\n    production: true,\n    pwa: false,\n    version: getAppVersion(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moduleImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatInputModule,\n    MainMapModule,\n    MainToolbarModule,\n    SidebarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production && environment.pwa === true,\n    }),\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SettingsInitializer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (appInitService: SettingsService) => {\n    return (): Promise => {\n        return appInitService.load();\n    };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/rxjs-util/retry-dialog-strategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            retryDialogStrategy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RetryDialogStrategyFunc\n\n                        \n                    \n                    \n                        \n                            Default value : (createDialog: CreateDialogFunc) => {\n    return (errors: Observable): Observable => {\n        let dialogOpen = false;\n        return errors.pipe(skipWhile((): boolean => dialogOpen),\n            flatMap((error: ErrorItem): Observable => {\n                dialogOpen = true;\n                const dialogRef: CreateDialogFuncResponse = createDialog(error);\n                return dialogRef.afterClosed()\n                    .pipe(map((tapedValue: boolean): true => {\n                        dialogOpen = false;\n                        if (tapedValue !== true) {\n                            /**\n                             * Rethrow error if dialog was dismissed\n                             */\n                            throw error;\n                        }\n                        /**\n                         * Retry the preceeding stream\n                         */\n                        return true;\n                    }));\n            }));\n    };\n}\n                        \n                    \n\n                \n                    \n                        If an error occurs it will call the dialog and waits for its result.\nIf the result equals true the stream will be retried\n\n                    \n                \n\n            \n        \n\n    src/app/leaflet/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_SHADOW_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0i' +\n    'MS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBzdmcgIFBVQkxJ' +\n    'QyAnLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5v' +\n    'cmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkJz4NCjxzdmcgd2lk' +\n    'dGg9IjY0IiBoZWlnaHQ9IjY0IiBiYXNlUHJvZmlsZT0iZnVsbCIgdmVyc2lv' +\n    'bj0iMS4xIiB2aWV3Qm94PSItMiAtMiA3MiA3MiIgeG1sbnM9Imh0dHA6Ly93' +\n    'd3cudzMub3JnLzIwMDAvc3ZnIj4NCjxzdHlsZT4uaGVhdnkgeyBmb250OiBi' +\n    'b2xkIDMycHggc2Fucy1zZXJpZjsgY29sb3I6cHVycGxlOyB9PC9zdHlsZT4N' +\n    'CjxkZWZzPg0KPGZpbHRlciBpZD0iYiIgeD0iMCIgeT0iMCI+DQo8ZmVHYXVz' +\n    'c2lhbkJsdXIgaW49IlNvdXJjZUdyYXBoaWMiIHN0ZERldmlhdGlvbj0iMyIv' +\n    'Pg0KPC9maWx0ZXI+DQo8L2RlZnM+DQo8bWFzayBpZD0iYSI+DQo8cmVjdCB3' +\n    'aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iI2ZmZiIvPg0KPHRleHQg' +\n    'Y2xhc3M9ImhlYXZ5IiB4PSIzNCIgeT0iNDYiIGZpbGw9ImJsYWNrIiBzdHJv' +\n    'a2U9ImJsYWNrIiBzdHJva2Utd2lkdGg9IjEuNSIgdGV4dC1hbmNob3I9Im1p' +\n    'ZGRsZSI+SDwvdGV4dD4NCjwvbWFzaz4NCjxnIGZpbHRlcj0idXJsKCNiKSIg' +\n    'b3BhY2l0eT0iLjUiPg0KPHJlY3QgeD0iLTEwIiB5PSItMTAiIHdpZHRoPSIx' +\n    'MDAiIGhlaWdodD0iMTAwIiBmaWxsPSIjZmZmIiBvcGFjaXR5PSIwIi8+DQo8' +\n    'Y2lyY2xlIGN4PSIzNCIgY3k9IjM0IiByPSIzMiIgbWFzaz0idXJsKCNhKSIg' +\n    'c3Ryb2tlPSIjMDAwIi8+DQo8L2c+DQo8L3N2Zz4='\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STOP_ICON_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiB' +\n    'lbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBzdmcgIFBVQkxJQyAnLS8vVzNDLy9' +\n    'EVEQgU1ZHIDEuMS8vRU4nICAnaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEu' +\n    'MS9EVEQvc3ZnMTEuZHRkJz4NCjxzdmcgd2lkdGg9IjY0IiBoZWlnaHQ9IjY0IiBiYXNlU' +\n    'HJvZmlsZT0iZnVsbCIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgNjggNjgiIHhtbG5' +\n    'zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+DQo8c3R5bGU+LmhlYXZ5IHsgZm9udD' +\n    'ogYm9sZCAzMnB4IHNhbnMtc2VyaWY7IGNvbG9yOnB1cnBsZTsgfTwvc3R5bGU+DQo8bWFza' +\n    'yBpZD0iYSI+DQo8cmVjdCB3aWR0aD0iMTAwIiBoZWlnaHQ9IjEwMCIgZmlsbD0iI2ZmZiIv' +\n    'Pg0KPHRleHQgY2xhc3M9ImhlYXZ5IiB4PSIzNCIgeT0iNDYiIGZpbGw9ImJsYWNrIiBzdHJv' +\n    'a2U9ImJsYWNrIiBzdHJva2Utd2lkdGg9IjEuNSIgdGV4dC1hbmNob3I9Im1pZGRsZSI+SDwv' +\n    'dGV4dD4NCjwvbWFzaz4NCjxjaXJjbGUgY3g9IjM0IiBjeT0iMzQiIHI9IjMyIiBtYXNrPSJ1' +\n    'cmwoI2EpIiBzdHJva2U9IiMwMDAiLz4NCjx0ZXh0IGNsYXNzPSJoZWF2eSIgeD0iMzQiIHk9' +\n    'IjQ2IiBmaWxsPSJ3aGl0ZSIgb3BhY2l0eT0iLjUiIHN0cm9rZT0id2hpdGUiIHN0cm9rZS13' +\n    'aWR0aD0iMS41IiB0ZXh0LWFuY2hvcj0ibWlkZGxlIj5IPC90ZXh0Pg0KPC9zdmc+'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
